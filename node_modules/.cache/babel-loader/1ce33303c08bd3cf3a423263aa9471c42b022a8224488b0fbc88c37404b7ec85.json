{"ast":null,"code":"const dragEvents = ['dragover', 'dragenter', 'drop'];\nfunction fileAccepted(file, accept) {\n  return file.type === 'application/x-moz-file' || accepts(file, accept);\n}\nfunction getDataTransferFiles(event) {\n  if (isDragEvent(event) && event.dataTransfer) {\n    const dt = event.dataTransfer;\n    if (dt.files && dt.files.length) {\n      return Array.from(dt.files);\n    } else if (dt.items && dt.items.length) {\n      // Chrome is the only browser that allows to read the file list on drag\n      // events and uses `items` instead of `files` in this case.\n      return Array.from(dt.items);\n    }\n  } else if (isChangeEvent(event) && event.target.files) {\n    // Return files from even when a file was selected from an upload dialog\n    return Array.from(event.target.files);\n  }\n  return [];\n}\nfunction accepts(file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    const fileName = file.name || '';\n    const mimeType = file.type || '';\n    const baseMimeType = mimeType.replace(/\\/.*$/, '');\n    const acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    return acceptedFilesArray.some(type => {\n      const validType = type.trim();\n      if (validType.startsWith('.')) {\n        return fileName.toLowerCase().endsWith(validType.toLowerCase());\n      } else if (validType.endsWith('/*')) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\nfunction isDragEvent(event) {\n  return dragEvents.indexOf(event.type) > 0;\n}\nfunction isChangeEvent(event) {\n  return Object.prototype.hasOwnProperty.call(event, 'target');\n}\nconst defaultAllowMultiple = true;\nfunction createAllowMultipleKey(allowMultiple) {\n  return allowMultiple ? 'allowMultiple' : 'single';\n}\nexport { createAllowMultipleKey, defaultAllowMultiple, fileAccepted, getDataTransferFiles };","map":{"version":3,"names":["dragEvents","fileAccepted","file","accept","type","accepts","getDataTransferFiles","event","isDragEvent","dataTransfer","dt","files","length","Array","from","items","isChangeEvent","target","acceptedFiles","fileName","name","mimeType","baseMimeType","replace","acceptedFilesArray","isArray","split","some","validType","trim","startsWith","toLowerCase","endsWith","indexOf","Object","prototype","hasOwnProperty","call","defaultAllowMultiple","createAllowMultipleKey","allowMultiple"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/DropZone/utils/index.js"],"sourcesContent":["const dragEvents = ['dragover', 'dragenter', 'drop'];\nfunction fileAccepted(file, accept) {\n  return file.type === 'application/x-moz-file' || accepts(file, accept);\n}\nfunction getDataTransferFiles(event) {\n  if (isDragEvent(event) && event.dataTransfer) {\n    const dt = event.dataTransfer;\n    if (dt.files && dt.files.length) {\n      return Array.from(dt.files);\n    } else if (dt.items && dt.items.length) {\n      // Chrome is the only browser that allows to read the file list on drag\n      // events and uses `items` instead of `files` in this case.\n      return Array.from(dt.items);\n    }\n  } else if (isChangeEvent(event) && event.target.files) {\n    // Return files from even when a file was selected from an upload dialog\n    return Array.from(event.target.files);\n  }\n  return [];\n}\nfunction accepts(file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    const fileName = file.name || '';\n    const mimeType = file.type || '';\n    const baseMimeType = mimeType.replace(/\\/.*$/, '');\n    const acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    return acceptedFilesArray.some(type => {\n      const validType = type.trim();\n      if (validType.startsWith('.')) {\n        return fileName.toLowerCase().endsWith(validType.toLowerCase());\n      } else if (validType.endsWith('/*')) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\nfunction isDragEvent(event) {\n  return dragEvents.indexOf(event.type) > 0;\n}\nfunction isChangeEvent(event) {\n  return Object.prototype.hasOwnProperty.call(event, 'target');\n}\nconst defaultAllowMultiple = true;\nfunction createAllowMultipleKey(allowMultiple) {\n  return allowMultiple ? 'allowMultiple' : 'single';\n}\n\nexport { createAllowMultipleKey, defaultAllowMultiple, fileAccepted, getDataTransferFiles };\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,MAAM,CAAC;AACpD,SAASC,YAAYA,CAACC,IAAI,EAAEC,MAAM,EAAE;EAClC,OAAOD,IAAI,CAACE,IAAI,KAAK,wBAAwB,IAAIC,OAAO,CAACH,IAAI,EAAEC,MAAM,CAAC;AACxE;AACA,SAASG,oBAAoBA,CAACC,KAAK,EAAE;EACnC,IAAIC,WAAW,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACE,YAAY,EAAE;IAC5C,MAAMC,EAAE,GAAGH,KAAK,CAACE,YAAY;IAC7B,IAAIC,EAAE,CAACC,KAAK,IAAID,EAAE,CAACC,KAAK,CAACC,MAAM,EAAE;MAC/B,OAAOC,KAAK,CAACC,IAAI,CAACJ,EAAE,CAACC,KAAK,CAAC;IAC7B,CAAC,MAAM,IAAID,EAAE,CAACK,KAAK,IAAIL,EAAE,CAACK,KAAK,CAACH,MAAM,EAAE;MACtC;MACA;MACA,OAAOC,KAAK,CAACC,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;IAC7B;EACF,CAAC,MAAM,IAAIC,aAAa,CAACT,KAAK,CAAC,IAAIA,KAAK,CAACU,MAAM,CAACN,KAAK,EAAE;IACrD;IACA,OAAOE,KAAK,CAACC,IAAI,CAACP,KAAK,CAACU,MAAM,CAACN,KAAK,CAAC;EACvC;EACA,OAAO,EAAE;AACX;AACA,SAASN,OAAOA,CAACH,IAAI,EAAEgB,aAAa,EAAE;EACpC,IAAIhB,IAAI,IAAIgB,aAAa,EAAE;IACzB,MAAMC,QAAQ,GAAGjB,IAAI,CAACkB,IAAI,IAAI,EAAE;IAChC,MAAMC,QAAQ,GAAGnB,IAAI,CAACE,IAAI,IAAI,EAAE;IAChC,MAAMkB,YAAY,GAAGD,QAAQ,CAACE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IAClD,MAAMC,kBAAkB,GAAGX,KAAK,CAACY,OAAO,CAACP,aAAa,CAAC,GAAGA,aAAa,GAAGA,aAAa,CAACQ,KAAK,CAAC,GAAG,CAAC;IAClG,OAAOF,kBAAkB,CAACG,IAAI,CAACvB,IAAI,IAAI;MACrC,MAAMwB,SAAS,GAAGxB,IAAI,CAACyB,IAAI,CAAC,CAAC;MAC7B,IAAID,SAAS,CAACE,UAAU,CAAC,GAAG,CAAC,EAAE;QAC7B,OAAOX,QAAQ,CAACY,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACJ,SAAS,CAACG,WAAW,CAAC,CAAC,CAAC;MACjE,CAAC,MAAM,IAAIH,SAAS,CAACI,QAAQ,CAAC,IAAI,CAAC,EAAE;QACnC;QACA,OAAOV,YAAY,KAAKM,SAAS,CAACL,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;MACxD;MACA,OAAOF,QAAQ,KAAKO,SAAS;IAC/B,CAAC,CAAC;EACJ;EACA,OAAO,IAAI;AACb;AACA,SAASpB,WAAWA,CAACD,KAAK,EAAE;EAC1B,OAAOP,UAAU,CAACiC,OAAO,CAAC1B,KAAK,CAACH,IAAI,CAAC,GAAG,CAAC;AAC3C;AACA,SAASY,aAAaA,CAACT,KAAK,EAAE;EAC5B,OAAO2B,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC9B,KAAK,EAAE,QAAQ,CAAC;AAC9D;AACA,MAAM+B,oBAAoB,GAAG,IAAI;AACjC,SAASC,sBAAsBA,CAACC,aAAa,EAAE;EAC7C,OAAOA,aAAa,GAAG,eAAe,GAAG,QAAQ;AACnD;AAEA,SAASD,sBAAsB,EAAED,oBAAoB,EAAErC,YAAY,EAAEK,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}