{"ast":null,"code":"import React, { useState, useRef, useEffect, useMemo } from 'react';\nimport { focusFirstFocusableNode } from '../../../../utilities/focus.js';\nimport { useIsTouchDevice } from '../../../../utilities/use-is-touch-device.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { Button } from '../../../Button/Button.js';\nimport { InlineStack } from '../../../InlineStack/InlineStack.js';\nimport { Modal } from '../../../Modal/Modal.js';\nimport { Form } from '../../../Form/Form.js';\nimport { FormLayout } from '../../../FormLayout/FormLayout.js';\nimport { TextField } from '../../../TextField/TextField.js';\nconst MAX_VIEW_NAME_LENGTH = 40;\nfunction UpdateButtons({\n  primaryAction,\n  cancelAction,\n  viewNames,\n  disabled\n}) {\n  const i18n = useI18n();\n  const [savedViewName, setSavedViewName] = useState('');\n  const [savedViewModalOpen, setSavedViewModalOpen] = useState(false);\n  const container = useRef(null);\n  const isTouchDevice = useIsTouchDevice();\n  useEffect(() => {\n    if (!container.current || isTouchDevice) return;\n    if (savedViewModalOpen) {\n      focusFirstFocusableNode(container.current);\n    }\n  }, [savedViewModalOpen, isTouchDevice]);\n  async function handleClickSaveButton() {\n    if (primaryAction?.type === 'save-as') {\n      handleOpenModal();\n    } else {\n      await primaryAction?.onAction('');\n    }\n  }\n  function handleOpenModal() {\n    setSavedViewModalOpen(true);\n  }\n  function handleCloseModal() {\n    setSavedViewModalOpen(false);\n  }\n  function handleChange(value) {\n    setSavedViewName(value);\n  }\n  async function handlePrimaryAction() {\n    if (isPrimaryActionDisabled) return;\n    await primaryAction?.onAction(savedViewName);\n    handleCloseModal();\n  }\n  const buttonText = useMemo(() => {\n    switch (primaryAction?.type) {\n      case 'save':\n        return i18n.translate('Polaris.IndexFilters.UpdateButtons.save');\n      case 'save-as':\n      default:\n        return i18n.translate('Polaris.IndexFilters.UpdateButtons.saveAs');\n    }\n  }, [primaryAction?.type, i18n]);\n  const saveButton = /*#__PURE__*/React.createElement(Button, {\n    size: \"micro\",\n    onClick: handleClickSaveButton,\n    disabled: primaryAction?.disabled || disabled\n  }, buttonText);\n  const hasSameNameError = viewNames.some(name => name.trim().toLowerCase() === savedViewName.trim().toLowerCase());\n  const isPrimaryActionDisabled = hasSameNameError || !savedViewName || primaryAction?.loading || savedViewName.length > MAX_VIEW_NAME_LENGTH;\n  const cancelButtonMarkup = cancelAction ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"tertiary\",\n    size: \"micro\",\n    onClick: cancelAction.onAction,\n    disabled: disabled\n  }, i18n.translate('Polaris.IndexFilters.UpdateButtons.cancel')) : null;\n  if (!primaryAction) {\n    return cancelButtonMarkup;\n  }\n  return /*#__PURE__*/React.createElement(InlineStack, {\n    align: \"start\",\n    blockAlign: \"center\",\n    gap: \"100\"\n  }, cancelButtonMarkup, primaryAction.type === 'save-as' ? /*#__PURE__*/React.createElement(Modal, {\n    activator: /*#__PURE__*/React.createElement(InlineStack, null, saveButton),\n    open: savedViewModalOpen,\n    title: i18n.translate('Polaris.IndexFilters.UpdateButtons.modal.title'),\n    onClose: handleCloseModal,\n    primaryAction: {\n      onAction: handlePrimaryAction,\n      content: i18n.translate('Polaris.IndexFilters.UpdateButtons.modal.save'),\n      disabled: isPrimaryActionDisabled\n    },\n    secondaryActions: [{\n      onAction: handleCloseModal,\n      content: i18n.translate('Polaris.IndexFilters.UpdateButtons.modal.cancel')\n    }]\n  }, /*#__PURE__*/React.createElement(Modal.Section, null, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handlePrimaryAction\n  }, /*#__PURE__*/React.createElement(FormLayout, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: container\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: i18n.translate('Polaris.IndexFilters.UpdateButtons.modal.label'),\n    value: savedViewName,\n    onChange: handleChange,\n    autoComplete: \"off\",\n    maxLength: MAX_VIEW_NAME_LENGTH,\n    showCharacterCount: true,\n    error: hasSameNameError ? i18n.translate('Polaris.IndexFilters.UpdateButtons.modal.sameName', {\n      name: savedViewName\n    }) : undefined\n  })))))) : saveButton);\n}\nexport { UpdateButtons };","map":{"version":3,"names":["React","useState","useRef","useEffect","useMemo","focusFirstFocusableNode","useIsTouchDevice","useI18n","Button","InlineStack","Modal","Form","FormLayout","TextField","MAX_VIEW_NAME_LENGTH","UpdateButtons","primaryAction","cancelAction","viewNames","disabled","i18n","savedViewName","setSavedViewName","savedViewModalOpen","setSavedViewModalOpen","container","isTouchDevice","current","handleClickSaveButton","type","handleOpenModal","onAction","handleCloseModal","handleChange","value","handlePrimaryAction","isPrimaryActionDisabled","buttonText","translate","saveButton","createElement","size","onClick","hasSameNameError","some","name","trim","toLowerCase","loading","length","cancelButtonMarkup","variant","align","blockAlign","gap","activator","open","title","onClose","content","secondaryActions","Section","onSubmit","ref","label","onChange","autoComplete","maxLength","showCharacterCount","error","undefined"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/UpdateButtons/UpdateButtons.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from 'react';\nimport { focusFirstFocusableNode } from '../../../../utilities/focus.js';\nimport { useIsTouchDevice } from '../../../../utilities/use-is-touch-device.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { Button } from '../../../Button/Button.js';\nimport { InlineStack } from '../../../InlineStack/InlineStack.js';\nimport { Modal } from '../../../Modal/Modal.js';\nimport { Form } from '../../../Form/Form.js';\nimport { FormLayout } from '../../../FormLayout/FormLayout.js';\nimport { TextField } from '../../../TextField/TextField.js';\n\nconst MAX_VIEW_NAME_LENGTH = 40;\nfunction UpdateButtons({\n  primaryAction,\n  cancelAction,\n  viewNames,\n  disabled\n}) {\n  const i18n = useI18n();\n  const [savedViewName, setSavedViewName] = useState('');\n  const [savedViewModalOpen, setSavedViewModalOpen] = useState(false);\n  const container = useRef(null);\n  const isTouchDevice = useIsTouchDevice();\n  useEffect(() => {\n    if (!container.current || isTouchDevice) return;\n    if (savedViewModalOpen) {\n      focusFirstFocusableNode(container.current);\n    }\n  }, [savedViewModalOpen, isTouchDevice]);\n  async function handleClickSaveButton() {\n    if (primaryAction?.type === 'save-as') {\n      handleOpenModal();\n    } else {\n      await primaryAction?.onAction('');\n    }\n  }\n  function handleOpenModal() {\n    setSavedViewModalOpen(true);\n  }\n  function handleCloseModal() {\n    setSavedViewModalOpen(false);\n  }\n  function handleChange(value) {\n    setSavedViewName(value);\n  }\n  async function handlePrimaryAction() {\n    if (isPrimaryActionDisabled) return;\n    await primaryAction?.onAction(savedViewName);\n    handleCloseModal();\n  }\n  const buttonText = useMemo(() => {\n    switch (primaryAction?.type) {\n      case 'save':\n        return i18n.translate('Polaris.IndexFilters.UpdateButtons.save');\n      case 'save-as':\n      default:\n        return i18n.translate('Polaris.IndexFilters.UpdateButtons.saveAs');\n    }\n  }, [primaryAction?.type, i18n]);\n  const saveButton = /*#__PURE__*/React.createElement(Button, {\n    size: \"micro\",\n    onClick: handleClickSaveButton,\n    disabled: primaryAction?.disabled || disabled\n  }, buttonText);\n  const hasSameNameError = viewNames.some(name => name.trim().toLowerCase() === savedViewName.trim().toLowerCase());\n  const isPrimaryActionDisabled = hasSameNameError || !savedViewName || primaryAction?.loading || savedViewName.length > MAX_VIEW_NAME_LENGTH;\n  const cancelButtonMarkup = cancelAction ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"tertiary\",\n    size: \"micro\",\n    onClick: cancelAction.onAction,\n    disabled: disabled\n  }, i18n.translate('Polaris.IndexFilters.UpdateButtons.cancel')) : null;\n  if (!primaryAction) {\n    return cancelButtonMarkup;\n  }\n  return /*#__PURE__*/React.createElement(InlineStack, {\n    align: \"start\",\n    blockAlign: \"center\",\n    gap: \"100\"\n  }, cancelButtonMarkup, primaryAction.type === 'save-as' ? /*#__PURE__*/React.createElement(Modal, {\n    activator: /*#__PURE__*/React.createElement(InlineStack, null, saveButton),\n    open: savedViewModalOpen,\n    title: i18n.translate('Polaris.IndexFilters.UpdateButtons.modal.title'),\n    onClose: handleCloseModal,\n    primaryAction: {\n      onAction: handlePrimaryAction,\n      content: i18n.translate('Polaris.IndexFilters.UpdateButtons.modal.save'),\n      disabled: isPrimaryActionDisabled\n    },\n    secondaryActions: [{\n      onAction: handleCloseModal,\n      content: i18n.translate('Polaris.IndexFilters.UpdateButtons.modal.cancel')\n    }]\n  }, /*#__PURE__*/React.createElement(Modal.Section, null, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handlePrimaryAction\n  }, /*#__PURE__*/React.createElement(FormLayout, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: container\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: i18n.translate('Polaris.IndexFilters.UpdateButtons.modal.label'),\n    value: savedViewName,\n    onChange: handleChange,\n    autoComplete: \"off\",\n    maxLength: MAX_VIEW_NAME_LENGTH,\n    showCharacterCount: true,\n    error: hasSameNameError ? i18n.translate('Polaris.IndexFilters.UpdateButtons.modal.sameName', {\n      name: savedViewName\n    }) : undefined\n  })))))) : saveButton);\n}\n\nexport { UpdateButtons };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}