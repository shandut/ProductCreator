{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport { ChevronDownIcon, MenuHorizontalIcon } from '@shopify/polaris-icons';\nimport { classNames } from '../../utilities/css.js';\nimport { getVisibleAndHiddenTabIndices } from './utilities.js';\nimport styles from './LegacyTabs.css.js';\nimport { Panel } from './components/Panel/Panel.js';\nimport { TabMeasurer } from './components/TabMeasurer/TabMeasurer.js';\nimport { List } from './components/List/List.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Tab } from './components/Tab/Tab.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { Box } from '../Box/Box.js';\nimport { Popover } from '../Popover/Popover.js';\nclass TabsInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      disclosureWidth: 0,\n      containerWidth: Infinity,\n      tabWidths: [],\n      visibleTabs: [],\n      hiddenTabs: [],\n      showDisclosure: false,\n      tabToFocus: -1\n    };\n    this.handleKeyPress = event => {\n      const {\n        tabToFocus,\n        visibleTabs,\n        hiddenTabs,\n        showDisclosure\n      } = this.state;\n      const key = event.key;\n      const tabsArrayInOrder = showDisclosure ? visibleTabs.concat(hiddenTabs) : [...visibleTabs];\n      let newFocus = tabsArrayInOrder.indexOf(tabToFocus);\n      if (key === 'ArrowRight') {\n        newFocus += 1;\n        if (newFocus === tabsArrayInOrder.length) {\n          newFocus = 0;\n        }\n      }\n      if (key === 'ArrowLeft') {\n        if (newFocus === -1 || newFocus === 0) {\n          newFocus = tabsArrayInOrder.length - 1;\n        } else {\n          newFocus -= 1;\n        }\n      }\n      this.setState({\n        tabToFocus: tabsArrayInOrder[newFocus]\n      });\n    };\n    // eslint-disable-next-line @shopify/react-no-multiple-render-methods\n    this.renderTabMarkup = (tab, index) => {\n      const {\n        selected,\n        children\n      } = this.props;\n      const {\n        tabToFocus\n      } = this.state;\n      const tabPanelID = tab.panelID || `${tab.id}-panel`;\n      return /*#__PURE__*/React.createElement(Tab, {\n        key: `${index}-${tab.id}`,\n        id: tab.id,\n        siblingTabHasFocus: tabToFocus > -1,\n        focused: index === tabToFocus,\n        selected: index === selected,\n        onClick: this.handleTabClick,\n        panelID: children ? tabPanelID : undefined,\n        accessibilityLabel: tab.accessibilityLabel,\n        url: tab.url\n      }, tab.content);\n    };\n    this.handleFocus = event => {\n      const {\n        selected,\n        tabs\n      } = this.props;\n\n      // If we are explicitly focusing a non-selected tab, this focuses it\n      const target = event.target;\n      if (target.classList.contains(styles.Tab) || target.classList.contains(styles.Item)) {\n        let tabToFocus = -1;\n        tabs.every((tab, index) => {\n          if (tab.id === target.id) {\n            tabToFocus = index;\n            return false;\n          }\n          return true;\n        });\n        this.setState({\n          tabToFocus\n        });\n        return;\n      }\n      if (target.classList.contains(styles.DisclosureActivator)) {\n        return;\n      }\n\n      // If we are coming in from somewhere other than another tab, focus the\n      // selected tab, and the focus (click) is not on the disclosure activator,\n      // focus the selected tab\n      if (!event.relatedTarget) {\n        this.setState({\n          tabToFocus: selected\n        });\n        return;\n      }\n      const relatedTarget = event.relatedTarget;\n      if (relatedTarget instanceof HTMLElement && !relatedTarget.classList.contains(styles.Tab) && !relatedTarget.classList.contains(styles.Item) && !relatedTarget.classList.contains(styles.DisclosureActivator)) {\n        this.setState({\n          tabToFocus: selected\n        });\n      }\n    };\n    this.handleBlur = event => {\n      // If we blur and the target is not another tab, forget the focus position\n      if (event.relatedTarget == null) {\n        this.setState({\n          tabToFocus: -1\n        });\n        return;\n      }\n      const target = event.relatedTarget;\n\n      // If we are going to anywhere other than another tab, lose the last focused tab\n      if (target instanceof HTMLElement && !target.classList.contains(styles.Tab) && !target.classList.contains(styles.Item)) {\n        this.setState({\n          tabToFocus: -1\n        });\n      }\n    };\n    this.handleDisclosureActivatorClick = () => {\n      this.setState(({\n        showDisclosure\n      }) => ({\n        showDisclosure: !showDisclosure\n      }));\n    };\n    this.handleClose = () => {\n      this.setState({\n        showDisclosure: false\n      });\n    };\n    this.handleMeasurement = measurements => {\n      const {\n        tabs,\n        selected\n      } = this.props;\n      const {\n        tabToFocus\n      } = this.state;\n      const {\n        hiddenTabWidths: tabWidths,\n        containerWidth,\n        disclosureWidth\n      } = measurements;\n      const {\n        visibleTabs,\n        hiddenTabs\n      } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth);\n      this.setState({\n        tabToFocus: tabToFocus === -1 ? -1 : selected,\n        visibleTabs,\n        hiddenTabs,\n        disclosureWidth,\n        containerWidth,\n        tabWidths\n      });\n    };\n    this.handleTabClick = id => {\n      const {\n        tabs,\n        onSelect = noop\n      } = this.props;\n      const tab = tabs.find(aTab => aTab.id === id);\n      if (tab == null) {\n        return;\n      }\n      const selectedIndex = tabs.indexOf(tab);\n      onSelect(selectedIndex);\n    };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      disclosureWidth,\n      tabWidths,\n      containerWidth\n    } = prevState;\n    const {\n      visibleTabs,\n      hiddenTabs\n    } = getVisibleAndHiddenTabIndices(nextProps.tabs, nextProps.selected, disclosureWidth, tabWidths, containerWidth);\n    return {\n      visibleTabs,\n      hiddenTabs,\n      selected: nextProps.selected\n    };\n  }\n  render() {\n    const {\n      tabs,\n      selected,\n      fitted,\n      children,\n      i18n,\n      disclosureText\n    } = this.props;\n    const {\n      tabToFocus,\n      visibleTabs,\n      hiddenTabs,\n      showDisclosure\n    } = this.state;\n    const disclosureTabs = hiddenTabs.map(tabIndex => tabs[tabIndex]);\n    const panelMarkup = children ? tabs.map((_tab, index) => {\n      return selected === index ? /*#__PURE__*/React.createElement(Panel, {\n        id: tabs[index].panelID || `${tabs[index].id}-panel`,\n        tabID: tabs[index].id,\n        key: tabs[index].id\n      }, children) : /*#__PURE__*/React.createElement(Panel, {\n        id: tabs[index].panelID || `${tabs[index].id}-panel`,\n        tabID: tabs[index].id,\n        key: tabs[index].id,\n        hidden: true\n      });\n    }) : null;\n    const tabsMarkup = visibleTabs.sort((tabA, tabB) => tabA - tabB).map(tabIndex => this.renderTabMarkup(tabs[tabIndex], tabIndex));\n    const disclosureActivatorVisible = visibleTabs.length < tabs.length;\n    const hasCustomDisclosure = Boolean(disclosureText);\n    const classname = classNames(styles.LegacyTabs, fitted && styles.fitted, disclosureActivatorVisible && styles.fillSpace);\n    const disclosureTabClassName = classNames(styles.DisclosureTab, disclosureActivatorVisible && styles['DisclosureTab-visible']);\n    const disclosureButtonClassName = classNames(styles.DisclosureActivator, hasCustomDisclosure && styles.Tab);\n    const disclosureButtonContentWrapperClassName = classNames(styles.Title, hasCustomDisclosure && styles.titleWithIcon);\n    const disclosureButtonContent = hasCustomDisclosure ? /*#__PURE__*/React.createElement(React.Fragment, null, disclosureText, /*#__PURE__*/React.createElement(Icon, {\n      source: ChevronDownIcon,\n      tone: \"subdued\"\n    })) : /*#__PURE__*/React.createElement(Icon, {\n      source: MenuHorizontalIcon,\n      tone: \"subdued\"\n    });\n    const disclosureButton = /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: disclosureButtonClassName,\n      onClick: this.handleDisclosureActivatorClick,\n      \"aria-label\": i18n.translate('Polaris.Tabs.toggleTabsLabel')\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: disclosureButtonContentWrapperClassName\n    }, disclosureButtonContent));\n    const activator = disclosureText ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.TabContainer\n    }, disclosureButton) : disclosureButton;\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Box, {\n      borderBlockEndWidth: \"025\",\n      borderColor: \"border-secondary\",\n      paddingInlineStart: \"200\",\n      paddingInlineEnd: \"200\"\n    }, /*#__PURE__*/React.createElement(TabMeasurer, {\n      tabToFocus: tabToFocus,\n      activator: activator,\n      selected: selected,\n      tabs: tabs,\n      siblingTabHasFocus: tabToFocus > -1,\n      handleMeasurement: this.handleMeasurement\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      role: \"tablist\",\n      className: classname,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeyDown: handleKeyDown,\n      onKeyUp: this.handleKeyPress\n    }, tabsMarkup, /*#__PURE__*/React.createElement(\"li\", {\n      className: disclosureTabClassName,\n      role: \"presentation\"\n    }, /*#__PURE__*/React.createElement(Popover, {\n      preferredPosition: \"below\",\n      activator: activator,\n      active: disclosureActivatorVisible && showDisclosure,\n      onClose: this.handleClose,\n      autofocusTarget: \"first-node\"\n    }, /*#__PURE__*/React.createElement(List, {\n      focusIndex: hiddenTabs.indexOf(tabToFocus),\n      disclosureTabs: disclosureTabs,\n      onClick: this.handleTabClick,\n      onKeyPress: this.handleKeyPress\n    }))))), panelMarkup);\n  }\n}\nfunction noop() {}\nfunction handleKeyDown(event) {\n  const {\n    key\n  } = event;\n  if (key === 'ArrowLeft' || key === 'ArrowRight') {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n/** @deprecated Use the Tabs component instead */\nfunction LegacyTabs(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(TabsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\nexport { LegacyTabs };","map":{"version":3,"names":["React","PureComponent","ChevronDownIcon","MenuHorizontalIcon","classNames","getVisibleAndHiddenTabIndices","styles","Panel","TabMeasurer","List","useI18n","Tab","Icon","Box","Popover","TabsInner","constructor","args","state","disclosureWidth","containerWidth","Infinity","tabWidths","visibleTabs","hiddenTabs","showDisclosure","tabToFocus","handleKeyPress","event","key","tabsArrayInOrder","concat","newFocus","indexOf","length","setState","renderTabMarkup","tab","index","selected","children","props","tabPanelID","panelID","id","createElement","siblingTabHasFocus","focused","onClick","handleTabClick","undefined","accessibilityLabel","url","content","handleFocus","tabs","target","classList","contains","Item","every","DisclosureActivator","relatedTarget","HTMLElement","handleBlur","handleDisclosureActivatorClick","handleClose","handleMeasurement","measurements","hiddenTabWidths","onSelect","noop","find","aTab","selectedIndex","getDerivedStateFromProps","nextProps","prevState","render","fitted","i18n","disclosureText","disclosureTabs","map","tabIndex","panelMarkup","_tab","tabID","hidden","tabsMarkup","sort","tabA","tabB","disclosureActivatorVisible","hasCustomDisclosure","Boolean","classname","LegacyTabs","fillSpace","disclosureTabClassName","DisclosureTab","disclosureButtonClassName","disclosureButtonContentWrapperClassName","Title","titleWithIcon","disclosureButtonContent","Fragment","source","tone","disclosureButton","type","className","translate","activator","TabContainer","borderBlockEndWidth","borderColor","paddingInlineStart","paddingInlineEnd","role","onFocus","onBlur","onKeyDown","handleKeyDown","onKeyUp","preferredPosition","active","onClose","autofocusTarget","focusIndex","onKeyPress","preventDefault","stopPropagation","Object","assign"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/LegacyTabs/LegacyTabs.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { ChevronDownIcon, MenuHorizontalIcon } from '@shopify/polaris-icons';\nimport { classNames } from '../../utilities/css.js';\nimport { getVisibleAndHiddenTabIndices } from './utilities.js';\nimport styles from './LegacyTabs.css.js';\nimport { Panel } from './components/Panel/Panel.js';\nimport { TabMeasurer } from './components/TabMeasurer/TabMeasurer.js';\nimport { List } from './components/List/List.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Tab } from './components/Tab/Tab.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { Box } from '../Box/Box.js';\nimport { Popover } from '../Popover/Popover.js';\n\nclass TabsInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      disclosureWidth: 0,\n      containerWidth: Infinity,\n      tabWidths: [],\n      visibleTabs: [],\n      hiddenTabs: [],\n      showDisclosure: false,\n      tabToFocus: -1\n    };\n    this.handleKeyPress = event => {\n      const {\n        tabToFocus,\n        visibleTabs,\n        hiddenTabs,\n        showDisclosure\n      } = this.state;\n      const key = event.key;\n      const tabsArrayInOrder = showDisclosure ? visibleTabs.concat(hiddenTabs) : [...visibleTabs];\n      let newFocus = tabsArrayInOrder.indexOf(tabToFocus);\n      if (key === 'ArrowRight') {\n        newFocus += 1;\n        if (newFocus === tabsArrayInOrder.length) {\n          newFocus = 0;\n        }\n      }\n      if (key === 'ArrowLeft') {\n        if (newFocus === -1 || newFocus === 0) {\n          newFocus = tabsArrayInOrder.length - 1;\n        } else {\n          newFocus -= 1;\n        }\n      }\n      this.setState({\n        tabToFocus: tabsArrayInOrder[newFocus]\n      });\n    };\n    // eslint-disable-next-line @shopify/react-no-multiple-render-methods\n    this.renderTabMarkup = (tab, index) => {\n      const {\n        selected,\n        children\n      } = this.props;\n      const {\n        tabToFocus\n      } = this.state;\n      const tabPanelID = tab.panelID || `${tab.id}-panel`;\n      return /*#__PURE__*/React.createElement(Tab, {\n        key: `${index}-${tab.id}`,\n        id: tab.id,\n        siblingTabHasFocus: tabToFocus > -1,\n        focused: index === tabToFocus,\n        selected: index === selected,\n        onClick: this.handleTabClick,\n        panelID: children ? tabPanelID : undefined,\n        accessibilityLabel: tab.accessibilityLabel,\n        url: tab.url\n      }, tab.content);\n    };\n    this.handleFocus = event => {\n      const {\n        selected,\n        tabs\n      } = this.props;\n\n      // If we are explicitly focusing a non-selected tab, this focuses it\n      const target = event.target;\n      if (target.classList.contains(styles.Tab) || target.classList.contains(styles.Item)) {\n        let tabToFocus = -1;\n        tabs.every((tab, index) => {\n          if (tab.id === target.id) {\n            tabToFocus = index;\n            return false;\n          }\n          return true;\n        });\n        this.setState({\n          tabToFocus\n        });\n        return;\n      }\n      if (target.classList.contains(styles.DisclosureActivator)) {\n        return;\n      }\n\n      // If we are coming in from somewhere other than another tab, focus the\n      // selected tab, and the focus (click) is not on the disclosure activator,\n      // focus the selected tab\n      if (!event.relatedTarget) {\n        this.setState({\n          tabToFocus: selected\n        });\n        return;\n      }\n      const relatedTarget = event.relatedTarget;\n      if (relatedTarget instanceof HTMLElement && !relatedTarget.classList.contains(styles.Tab) && !relatedTarget.classList.contains(styles.Item) && !relatedTarget.classList.contains(styles.DisclosureActivator)) {\n        this.setState({\n          tabToFocus: selected\n        });\n      }\n    };\n    this.handleBlur = event => {\n      // If we blur and the target is not another tab, forget the focus position\n      if (event.relatedTarget == null) {\n        this.setState({\n          tabToFocus: -1\n        });\n        return;\n      }\n      const target = event.relatedTarget;\n\n      // If we are going to anywhere other than another tab, lose the last focused tab\n      if (target instanceof HTMLElement && !target.classList.contains(styles.Tab) && !target.classList.contains(styles.Item)) {\n        this.setState({\n          tabToFocus: -1\n        });\n      }\n    };\n    this.handleDisclosureActivatorClick = () => {\n      this.setState(({\n        showDisclosure\n      }) => ({\n        showDisclosure: !showDisclosure\n      }));\n    };\n    this.handleClose = () => {\n      this.setState({\n        showDisclosure: false\n      });\n    };\n    this.handleMeasurement = measurements => {\n      const {\n        tabs,\n        selected\n      } = this.props;\n      const {\n        tabToFocus\n      } = this.state;\n      const {\n        hiddenTabWidths: tabWidths,\n        containerWidth,\n        disclosureWidth\n      } = measurements;\n      const {\n        visibleTabs,\n        hiddenTabs\n      } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth);\n      this.setState({\n        tabToFocus: tabToFocus === -1 ? -1 : selected,\n        visibleTabs,\n        hiddenTabs,\n        disclosureWidth,\n        containerWidth,\n        tabWidths\n      });\n    };\n    this.handleTabClick = id => {\n      const {\n        tabs,\n        onSelect = noop\n      } = this.props;\n      const tab = tabs.find(aTab => aTab.id === id);\n      if (tab == null) {\n        return;\n      }\n      const selectedIndex = tabs.indexOf(tab);\n      onSelect(selectedIndex);\n    };\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      disclosureWidth,\n      tabWidths,\n      containerWidth\n    } = prevState;\n    const {\n      visibleTabs,\n      hiddenTabs\n    } = getVisibleAndHiddenTabIndices(nextProps.tabs, nextProps.selected, disclosureWidth, tabWidths, containerWidth);\n    return {\n      visibleTabs,\n      hiddenTabs,\n      selected: nextProps.selected\n    };\n  }\n  render() {\n    const {\n      tabs,\n      selected,\n      fitted,\n      children,\n      i18n,\n      disclosureText\n    } = this.props;\n    const {\n      tabToFocus,\n      visibleTabs,\n      hiddenTabs,\n      showDisclosure\n    } = this.state;\n    const disclosureTabs = hiddenTabs.map(tabIndex => tabs[tabIndex]);\n    const panelMarkup = children ? tabs.map((_tab, index) => {\n      return selected === index ? /*#__PURE__*/React.createElement(Panel, {\n        id: tabs[index].panelID || `${tabs[index].id}-panel`,\n        tabID: tabs[index].id,\n        key: tabs[index].id\n      }, children) : /*#__PURE__*/React.createElement(Panel, {\n        id: tabs[index].panelID || `${tabs[index].id}-panel`,\n        tabID: tabs[index].id,\n        key: tabs[index].id,\n        hidden: true\n      });\n    }) : null;\n    const tabsMarkup = visibleTabs.sort((tabA, tabB) => tabA - tabB).map(tabIndex => this.renderTabMarkup(tabs[tabIndex], tabIndex));\n    const disclosureActivatorVisible = visibleTabs.length < tabs.length;\n    const hasCustomDisclosure = Boolean(disclosureText);\n    const classname = classNames(styles.LegacyTabs, fitted && styles.fitted, disclosureActivatorVisible && styles.fillSpace);\n    const disclosureTabClassName = classNames(styles.DisclosureTab, disclosureActivatorVisible && styles['DisclosureTab-visible']);\n    const disclosureButtonClassName = classNames(styles.DisclosureActivator, hasCustomDisclosure && styles.Tab);\n    const disclosureButtonContentWrapperClassName = classNames(styles.Title, hasCustomDisclosure && styles.titleWithIcon);\n    const disclosureButtonContent = hasCustomDisclosure ? /*#__PURE__*/React.createElement(React.Fragment, null, disclosureText, /*#__PURE__*/React.createElement(Icon, {\n      source: ChevronDownIcon,\n      tone: \"subdued\"\n    })) : /*#__PURE__*/React.createElement(Icon, {\n      source: MenuHorizontalIcon,\n      tone: \"subdued\"\n    });\n    const disclosureButton = /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: disclosureButtonClassName,\n      onClick: this.handleDisclosureActivatorClick,\n      \"aria-label\": i18n.translate('Polaris.Tabs.toggleTabsLabel')\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: disclosureButtonContentWrapperClassName\n    }, disclosureButtonContent));\n    const activator = disclosureText ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.TabContainer\n    }, disclosureButton) : disclosureButton;\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Box, {\n      borderBlockEndWidth: \"025\",\n      borderColor: \"border-secondary\",\n      paddingInlineStart: \"200\",\n      paddingInlineEnd: \"200\"\n    }, /*#__PURE__*/React.createElement(TabMeasurer, {\n      tabToFocus: tabToFocus,\n      activator: activator,\n      selected: selected,\n      tabs: tabs,\n      siblingTabHasFocus: tabToFocus > -1,\n      handleMeasurement: this.handleMeasurement\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      role: \"tablist\",\n      className: classname,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeyDown: handleKeyDown,\n      onKeyUp: this.handleKeyPress\n    }, tabsMarkup, /*#__PURE__*/React.createElement(\"li\", {\n      className: disclosureTabClassName,\n      role: \"presentation\"\n    }, /*#__PURE__*/React.createElement(Popover, {\n      preferredPosition: \"below\",\n      activator: activator,\n      active: disclosureActivatorVisible && showDisclosure,\n      onClose: this.handleClose,\n      autofocusTarget: \"first-node\"\n    }, /*#__PURE__*/React.createElement(List, {\n      focusIndex: hiddenTabs.indexOf(tabToFocus),\n      disclosureTabs: disclosureTabs,\n      onClick: this.handleTabClick,\n      onKeyPress: this.handleKeyPress\n    }))))), panelMarkup);\n  }\n}\nfunction noop() {}\nfunction handleKeyDown(event) {\n  const {\n    key\n  } = event;\n  if (key === 'ArrowLeft' || key === 'ArrowRight') {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n/** @deprecated Use the Tabs component instead */\nfunction LegacyTabs(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(TabsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { LegacyTabs };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}