{"ast":null,"code":"function getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth) {\n  const sumTabWidths = tabWidths.reduce((sum, width) => sum + width, 0);\n  const arrayOfTabIndices = tabs.map((_, index) => {\n    return index;\n  });\n  const visibleTabs = [];\n  const hiddenTabs = [];\n  if (containerWidth > sumTabWidths) {\n    visibleTabs.push(...arrayOfTabIndices);\n  } else {\n    visibleTabs.push(selected);\n    let tabListWidth = tabWidths[selected];\n    arrayOfTabIndices.forEach(currentTabIndex => {\n      if (currentTabIndex !== selected) {\n        const currentTabWidth = tabWidths[currentTabIndex];\n        if (tabListWidth + currentTabWidth >= containerWidth - disclosureWidth) {\n          hiddenTabs.push(currentTabIndex);\n          return;\n        }\n        visibleTabs.push(currentTabIndex);\n        tabListWidth += currentTabWidth;\n      }\n    });\n  }\n  return {\n    visibleTabs,\n    hiddenTabs\n  };\n}\nexport { getVisibleAndHiddenTabIndices };","map":{"version":3,"names":["getVisibleAndHiddenTabIndices","tabs","selected","disclosureWidth","tabWidths","containerWidth","sumTabWidths","reduce","sum","width","arrayOfTabIndices","map","_","index","visibleTabs","hiddenTabs","push","tabListWidth","forEach","currentTabIndex","currentTabWidth"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/Tabs/utilities.js"],"sourcesContent":["function getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth) {\n  const sumTabWidths = tabWidths.reduce((sum, width) => sum + width, 0);\n  const arrayOfTabIndices = tabs.map((_, index) => {\n    return index;\n  });\n  const visibleTabs = [];\n  const hiddenTabs = [];\n  if (containerWidth > sumTabWidths) {\n    visibleTabs.push(...arrayOfTabIndices);\n  } else {\n    visibleTabs.push(selected);\n    let tabListWidth = tabWidths[selected];\n    arrayOfTabIndices.forEach(currentTabIndex => {\n      if (currentTabIndex !== selected) {\n        const currentTabWidth = tabWidths[currentTabIndex];\n        if (tabListWidth + currentTabWidth >= containerWidth - disclosureWidth) {\n          hiddenTabs.push(currentTabIndex);\n          return;\n        }\n        visibleTabs.push(currentTabIndex);\n        tabListWidth += currentTabWidth;\n      }\n    });\n  }\n  return {\n    visibleTabs,\n    hiddenTabs\n  };\n}\n\nexport { getVisibleAndHiddenTabIndices };\n"],"mappings":"AAAA,SAASA,6BAA6BA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,SAAS,EAAEC,cAAc,EAAE;EACjG,MAAMC,YAAY,GAAGF,SAAS,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,EAAE,CAAC,CAAC;EACrE,MAAMC,iBAAiB,GAAGT,IAAI,CAACU,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;IAC/C,OAAOA,KAAK;EACd,CAAC,CAAC;EACF,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAMC,UAAU,GAAG,EAAE;EACrB,IAAIV,cAAc,GAAGC,YAAY,EAAE;IACjCQ,WAAW,CAACE,IAAI,CAAC,GAAGN,iBAAiB,CAAC;EACxC,CAAC,MAAM;IACLI,WAAW,CAACE,IAAI,CAACd,QAAQ,CAAC;IAC1B,IAAIe,YAAY,GAAGb,SAAS,CAACF,QAAQ,CAAC;IACtCQ,iBAAiB,CAACQ,OAAO,CAACC,eAAe,IAAI;MAC3C,IAAIA,eAAe,KAAKjB,QAAQ,EAAE;QAChC,MAAMkB,eAAe,GAAGhB,SAAS,CAACe,eAAe,CAAC;QAClD,IAAIF,YAAY,GAAGG,eAAe,IAAIf,cAAc,GAAGF,eAAe,EAAE;UACtEY,UAAU,CAACC,IAAI,CAACG,eAAe,CAAC;UAChC;QACF;QACAL,WAAW,CAACE,IAAI,CAACG,eAAe,CAAC;QACjCF,YAAY,IAAIG,eAAe;MACjC;IACF,CAAC,CAAC;EACJ;EACA,OAAO;IACLN,WAAW;IACXC;EACF,CAAC;AACH;AAEA,SAASf,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}