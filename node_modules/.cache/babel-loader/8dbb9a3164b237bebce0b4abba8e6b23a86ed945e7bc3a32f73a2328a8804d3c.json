{"ast":null,"code":"import React from 'react';\nimport { createThemeClassName, themeNameDefault } from '@shopify/polaris-tokens';\nimport { ThemeNameContext, ThemeContext, getTheme } from '../../utilities/use-theme.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './ThemeProvider.css.js';\n\n/**\n * Allowlist of local themes\n * TODO: Replace `as const` with `satisfies ThemeName[]`\n */\nconst themeNamesLocal = ['light', 'dark-experimental'];\nconst isThemeNameLocal = name => themeNamesLocal.includes(name);\nfunction ThemeProvider(props) {\n  const {\n    as: ThemeContainer = 'div',\n    children,\n    className,\n    theme: themeName = themeNameDefault\n  } = props;\n  return /*#__PURE__*/React.createElement(ThemeNameContext.Provider, {\n    value: themeName\n  }, /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: getTheme(themeName)\n  }, /*#__PURE__*/React.createElement(ThemeContainer, {\n    \"data-portal-id\": props['data-portal-id'],\n    className: classNames(createThemeClassName(themeName), styles.themeContainer, className)\n  }, children)));\n}\nexport { ThemeProvider, isThemeNameLocal, themeNamesLocal };","map":{"version":3,"names":["React","createThemeClassName","themeNameDefault","ThemeNameContext","ThemeContext","getTheme","classNames","styles","themeNamesLocal","isThemeNameLocal","name","includes","ThemeProvider","props","as","ThemeContainer","children","className","theme","themeName","createElement","Provider","value","themeContainer"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/ThemeProvider/ThemeProvider.js"],"sourcesContent":["import React from 'react';\nimport { createThemeClassName, themeNameDefault } from '@shopify/polaris-tokens';\nimport { ThemeNameContext, ThemeContext, getTheme } from '../../utilities/use-theme.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './ThemeProvider.css.js';\n\n/**\n * Allowlist of local themes\n * TODO: Replace `as const` with `satisfies ThemeName[]`\n */\nconst themeNamesLocal = ['light', 'dark-experimental'];\nconst isThemeNameLocal = name => themeNamesLocal.includes(name);\nfunction ThemeProvider(props) {\n  const {\n    as: ThemeContainer = 'div',\n    children,\n    className,\n    theme: themeName = themeNameDefault\n  } = props;\n  return /*#__PURE__*/React.createElement(ThemeNameContext.Provider, {\n    value: themeName\n  }, /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: getTheme(themeName)\n  }, /*#__PURE__*/React.createElement(ThemeContainer, {\n    \"data-portal-id\": props['data-portal-id'],\n    className: classNames(createThemeClassName(themeName), styles.themeContainer, className)\n  }, children)));\n}\n\nexport { ThemeProvider, isThemeNameLocal, themeNamesLocal };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,gBAAgB,QAAQ,yBAAyB;AAChF,SAASC,gBAAgB,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,8BAA8B;AACvF,SAASC,UAAU,QAAQ,wBAAwB;AACnD,OAAOC,MAAM,MAAM,wBAAwB;;AAE3C;AACA;AACA;AACA;AACA,MAAMC,eAAe,GAAG,CAAC,OAAO,EAAE,mBAAmB,CAAC;AACtD,MAAMC,gBAAgB,GAAGC,IAAI,IAAIF,eAAe,CAACG,QAAQ,CAACD,IAAI,CAAC;AAC/D,SAASE,aAAaA,CAACC,KAAK,EAAE;EAC5B,MAAM;IACJC,EAAE,EAAEC,cAAc,GAAG,KAAK;IAC1BC,QAAQ;IACRC,SAAS;IACTC,KAAK,EAAEC,SAAS,GAAGjB;EACrB,CAAC,GAAGW,KAAK;EACT,OAAO,aAAab,KAAK,CAACoB,aAAa,CAACjB,gBAAgB,CAACkB,QAAQ,EAAE;IACjEC,KAAK,EAAEH;EACT,CAAC,EAAE,aAAanB,KAAK,CAACoB,aAAa,CAAChB,YAAY,CAACiB,QAAQ,EAAE;IACzDC,KAAK,EAAEjB,QAAQ,CAACc,SAAS;EAC3B,CAAC,EAAE,aAAanB,KAAK,CAACoB,aAAa,CAACL,cAAc,EAAE;IAClD,gBAAgB,EAAEF,KAAK,CAAC,gBAAgB,CAAC;IACzCI,SAAS,EAAEX,UAAU,CAACL,oBAAoB,CAACkB,SAAS,CAAC,EAAEZ,MAAM,CAACgB,cAAc,EAAEN,SAAS;EACzF,CAAC,EAAED,QAAQ,CAAC,CAAC,CAAC;AAChB;AAEA,SAASJ,aAAa,EAAEH,gBAAgB,EAAED,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}