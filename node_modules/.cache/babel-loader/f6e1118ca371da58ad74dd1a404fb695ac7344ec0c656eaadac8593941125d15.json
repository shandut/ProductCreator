{"ast":null,"code":"import React, { useRef, useEffect } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { focusFirstFocusableNode, handleMouseUpByBlurring } from '../../../../utilities/focus.js';\nimport styles from '../../LegacyTabs.css.js';\nimport { UnstyledLink } from '../../../UnstyledLink/UnstyledLink.js';\nimport { Text } from '../../../Text/Text.js';\nfunction Tab({\n  id,\n  focused,\n  siblingTabHasFocus,\n  children,\n  onClick,\n  selected,\n  url,\n  panelID,\n  measuring,\n  accessibilityLabel\n}) {\n  const wasSelected = useRef(selected);\n  const panelFocused = useRef(false);\n  const node = useRef(null);\n\n  // A tab can start selected when it is moved from the disclosure dropdown\n  // into the main list, so we need to send focus from the tab to the panel\n  // on mount and update\n  useEffect(() => {\n    if (measuring) {\n      return;\n    }\n\n    // Because of timing issues with the render, we may still have the old,\n    // in-disclosure version of the tab that has focus. Check for this\n    // as a second indicator of focus\n    const itemHadFocus = focused || document.activeElement && document.activeElement.id === id;\n\n    // If we just check for selected, the panel for the active tab will\n    // be focused on page load, which we don’t want\n    if (itemHadFocus && selected && panelID != null && !panelFocused.current) {\n      focusPanelID(panelID);\n      panelFocused.current = true;\n    }\n    if (selected && !wasSelected.current && panelID != null) {\n      focusPanelID(panelID);\n    } else if (focused && node.current != null) {\n      focusFirstFocusableNode(node.current);\n    }\n    wasSelected.current = selected;\n  }, [focused, id, measuring, panelID, selected]);\n  const handleClick = onClick && onClick.bind(null, id);\n  const className = classNames(styles.Tab, selected && styles['Tab-selected']);\n  let tabIndex;\n  if (selected && !siblingTabHasFocus && !measuring) {\n    tabIndex = 0;\n  } else if (focused && !measuring) {\n    tabIndex = 0;\n  } else {\n    tabIndex = -1;\n  }\n  const tabContainerClassNames = classNames(styles.TabContainer, selected && styles.Underline);\n  const markup = url ? /*#__PURE__*/React.createElement(UnstyledLink, {\n    id: id,\n    url: url,\n    role: \"tab\",\n    tabIndex: tabIndex,\n    onClick: handleClick,\n    className: className,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodyMd\",\n    fontWeight: \"semibold\"\n  }, children))) : /*#__PURE__*/React.createElement(\"button\", {\n    id: id,\n    role: \"tab\",\n    type: \"button\",\n    tabIndex: tabIndex,\n    className: className,\n    onClick: handleClick,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodyMd\",\n    fontWeight: \"semibold\"\n  }, children)));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: tabContainerClassNames,\n    ref: node,\n    role: \"presentation\"\n  }, markup);\n}\nfunction focusPanelID(panelID) {\n  const panel = document.getElementById(panelID);\n  if (panel) {\n    panel.focus({\n      preventScroll: true\n    });\n  }\n}\nexport { Tab };","map":{"version":3,"names":["React","useRef","useEffect","classNames","focusFirstFocusableNode","handleMouseUpByBlurring","styles","UnstyledLink","Text","Tab","id","focused","siblingTabHasFocus","children","onClick","selected","url","panelID","measuring","accessibilityLabel","wasSelected","panelFocused","node","itemHadFocus","document","activeElement","current","focusPanelID","handleClick","bind","className","tabIndex","tabContainerClassNames","TabContainer","Underline","markup","createElement","role","onMouseUp","Title","as","variant","fontWeight","type","ref","panel","getElementById","focus","preventScroll"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/Tab/Tab.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { focusFirstFocusableNode, handleMouseUpByBlurring } from '../../../../utilities/focus.js';\nimport styles from '../../LegacyTabs.css.js';\nimport { UnstyledLink } from '../../../UnstyledLink/UnstyledLink.js';\nimport { Text } from '../../../Text/Text.js';\n\nfunction Tab({\n  id,\n  focused,\n  siblingTabHasFocus,\n  children,\n  onClick,\n  selected,\n  url,\n  panelID,\n  measuring,\n  accessibilityLabel\n}) {\n  const wasSelected = useRef(selected);\n  const panelFocused = useRef(false);\n  const node = useRef(null);\n\n  // A tab can start selected when it is moved from the disclosure dropdown\n  // into the main list, so we need to send focus from the tab to the panel\n  // on mount and update\n  useEffect(() => {\n    if (measuring) {\n      return;\n    }\n\n    // Because of timing issues with the render, we may still have the old,\n    // in-disclosure version of the tab that has focus. Check for this\n    // as a second indicator of focus\n    const itemHadFocus = focused || document.activeElement && document.activeElement.id === id;\n\n    // If we just check for selected, the panel for the active tab will\n    // be focused on page load, which we don’t want\n    if (itemHadFocus && selected && panelID != null && !panelFocused.current) {\n      focusPanelID(panelID);\n      panelFocused.current = true;\n    }\n    if (selected && !wasSelected.current && panelID != null) {\n      focusPanelID(panelID);\n    } else if (focused && node.current != null) {\n      focusFirstFocusableNode(node.current);\n    }\n    wasSelected.current = selected;\n  }, [focused, id, measuring, panelID, selected]);\n  const handleClick = onClick && onClick.bind(null, id);\n  const className = classNames(styles.Tab, selected && styles['Tab-selected']);\n  let tabIndex;\n  if (selected && !siblingTabHasFocus && !measuring) {\n    tabIndex = 0;\n  } else if (focused && !measuring) {\n    tabIndex = 0;\n  } else {\n    tabIndex = -1;\n  }\n  const tabContainerClassNames = classNames(styles.TabContainer, selected && styles.Underline);\n  const markup = url ? /*#__PURE__*/React.createElement(UnstyledLink, {\n    id: id,\n    url: url,\n    role: \"tab\",\n    tabIndex: tabIndex,\n    onClick: handleClick,\n    className: className,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodyMd\",\n    fontWeight: \"semibold\"\n  }, children))) : /*#__PURE__*/React.createElement(\"button\", {\n    id: id,\n    role: \"tab\",\n    type: \"button\",\n    tabIndex: tabIndex,\n    className: className,\n    onClick: handleClick,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodyMd\",\n    fontWeight: \"semibold\"\n  }, children)));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: tabContainerClassNames,\n    ref: node,\n    role: \"presentation\"\n  }, markup);\n}\nfunction focusPanelID(panelID) {\n  const panel = document.getElementById(panelID);\n  if (panel) {\n    panel.focus({\n      preventScroll: true\n    });\n  }\n}\n\nexport { Tab };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}