{"ast":null,"code":"import React, { useState, useRef, useCallback, useMemo, isValidElement, createRef } from 'react';\nimport { SearchIcon } from '@shopify/polaris-icons';\nimport { escapeRegex } from '../../utilities/string.js';\nimport { Activator } from './components/Activator/Activator.js';\nimport { SearchField } from './components/SearchField/SearchField.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { Box } from '../Box/Box.js';\nimport { ComboboxTextFieldContext, ComboboxListboxContext, ComboboxListboxOptionContext } from '../../utilities/combobox/context.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { Listbox } from '../Listbox/Listbox.js';\nconst FILTER_REGEX = value => new RegExp(value, 'i');\nconst QUERY_REGEX = value => new RegExp(`^${escapeRegex(value)}$`, 'i');\nfunction Picker({\n  activator,\n  allowMultiple,\n  searchField,\n  options = [],\n  willLoadMoreOptions,\n  height,\n  addAction,\n  onScrolledToBottom,\n  onClose,\n  ...listboxProps\n}) {\n  const activatorRef = /*#__PURE__*/createRef();\n  const [activeItems, setActiveItems] = useState([]);\n  const [popoverActive, setPopoverActive] = useState(false);\n  const [activeOptionId, setActiveOptionId] = useState();\n  const [textFieldLabelId, setTextFieldLabelId] = useState();\n  const [listboxId, setListboxId] = useState();\n  const [query, setQuery] = useState('');\n  const filteredOptions = useRef(options);\n  const shouldOpen = !popoverActive;\n  const handleClose = useCallback(() => {\n    setPopoverActive(false);\n    onClose?.();\n    activatorRef.current?.focus();\n  }, [activatorRef, onClose]);\n  const handleOpen = useCallback(() => {\n    setPopoverActive(true);\n    filteredOptions.current = options;\n  }, [options]);\n  const handleFocus = useCallback(() => {\n    if (shouldOpen) handleOpen();\n  }, [shouldOpen, handleOpen]);\n  const handleChange = useCallback(() => {\n    if (shouldOpen) handleOpen();\n  }, [shouldOpen, handleOpen]);\n  const handleBlur = useCallback(() => {\n    if (popoverActive) {\n      handleClose();\n      setQuery('');\n    }\n  }, [popoverActive, handleClose]);\n  const textFieldContextValue = useMemo(() => ({\n    activeOptionId,\n    expanded: popoverActive,\n    listboxId,\n    setTextFieldLabelId,\n    onTextFieldFocus: handleFocus,\n    onTextFieldChange: handleChange,\n    onTextFieldBlur: handleBlur\n  }), [activeOptionId, popoverActive, listboxId, setTextFieldLabelId, handleFocus, handleChange, handleBlur]);\n  const listboxOptionContextValue = useMemo(() => ({\n    allowMultiple\n  }), [allowMultiple]);\n  const listboxContextValue = useMemo(() => ({\n    listboxId,\n    textFieldLabelId,\n    textFieldFocused: popoverActive,\n    willLoadMoreOptions,\n    setActiveOptionId,\n    setListboxId,\n    onKeyToBottom: onScrolledToBottom\n  }), [listboxId, textFieldLabelId, popoverActive, willLoadMoreOptions, setActiveOptionId, setListboxId, onScrolledToBottom]);\n  const updateText = useCallback(value => {\n    setQuery(value);\n    if (value === '') {\n      filteredOptions.current = options;\n      return;\n    }\n    const resultOptions = options?.filter(option => FILTER_REGEX(value).exec(reactChildrenText(option.children)));\n    filteredOptions.current = resultOptions ?? [];\n  }, [options]);\n  const handleSelect = useCallback(selected => {\n    setQuery('');\n    updateText('');\n    listboxProps.onSelect?.(selected);\n    if (!filteredOptions.current.some(option => option.value === selected)) {\n      filteredOptions.current = [...filteredOptions.current, {\n        value: selected,\n        children: selected\n      }];\n    }\n    if (!allowMultiple) {\n      handleClose();\n      setActiveItems([selected]);\n      return;\n    }\n    setActiveItems(selectedOptions => {\n      return activeItems.includes(selected) ? selectedOptions.filter(option => option !== selected) : [...selectedOptions, selected];\n    });\n  }, [updateText, listboxProps, allowMultiple, handleClose, activeItems]);\n  const showList = options.length > 0 || query !== '';\n  const firstSelectedOption = reactChildrenText(options.find(option => option.value === activeItems?.[0])?.children);\n  const queryMatchesExistingOption = options.some(option => {\n    const matcher = QUERY_REGEX(query);\n    return reactChildrenText(option.children).match(matcher);\n  });\n  return /*#__PURE__*/React.createElement(Popover, {\n    activator: /*#__PURE__*/React.createElement(Activator, Object.assign({}, activator, {\n      onClick: handleOpen,\n      selected: firstSelectedOption || '',\n      placeholder: activator.placeholder,\n      ref: activatorRef\n    })),\n    active: popoverActive,\n    autofocusTarget: \"none\",\n    onClose: handleClose,\n    preferredPosition: \"cover\",\n    preventFocusOnClose: true\n  }, /*#__PURE__*/React.createElement(Popover.Pane, {\n    onScrolledToBottom: onScrolledToBottom,\n    height: height\n  }, searchField ? /*#__PURE__*/React.createElement(Box, {\n    paddingBlockStart: \"200\",\n    paddingBlockEnd: \"100\",\n    paddingInline: \"200\",\n    borderBlockEndWidth: \"025\",\n    borderColor: \"border\",\n    minHeight: showList ? undefined : '58px'\n  }, /*#__PURE__*/React.createElement(ComboboxTextFieldContext.Provider, {\n    value: textFieldContextValue\n  }, /*#__PURE__*/React.createElement(SearchField, Object.assign({}, searchField, {\n    value: query,\n    onChange: value => {\n      updateText(value);\n      searchField.onChange?.(value, searchField.id ?? '');\n    },\n    prefix: /*#__PURE__*/React.createElement(Icon, {\n      source: SearchIcon\n    }),\n    labelHidden: true,\n    focused: popoverActive\n  })))) : null, showList && /*#__PURE__*/React.createElement(ComboboxListboxContext.Provider, {\n    value: listboxContextValue\n  }, /*#__PURE__*/React.createElement(ComboboxListboxOptionContext.Provider, {\n    value: listboxOptionContextValue\n  }, /*#__PURE__*/React.createElement(Box, {\n    paddingBlock: \"200\"\n  }, /*#__PURE__*/React.createElement(Listbox, Object.assign({}, listboxProps, {\n    onSelect: handleSelect\n  }), filteredOptions.current?.map(option => /*#__PURE__*/React.createElement(Listbox.Option, Object.assign({\n    key: option.value,\n    selected: activeItems.some(item => item === option.value)\n  }, option))), addAction && query !== '' && !queryMatchesExistingOption ? /*#__PURE__*/React.createElement(Listbox.Action, Object.assign({}, addAction, {\n    value: query\n  })) : null))))));\n}\nconst reactChildrenText = children => {\n  if (typeof children === 'string') return children;\n  return /*#__PURE__*/isValidElement(children) ? reactChildrenText(children?.props?.children) : '';\n};\nexport { Picker };","map":{"version":3,"names":["React","useState","useRef","useCallback","useMemo","isValidElement","createRef","SearchIcon","escapeRegex","Activator","SearchField","Popover","Box","ComboboxTextFieldContext","ComboboxListboxContext","ComboboxListboxOptionContext","Icon","Listbox","FILTER_REGEX","value","RegExp","QUERY_REGEX","Picker","activator","allowMultiple","searchField","options","willLoadMoreOptions","height","addAction","onScrolledToBottom","onClose","listboxProps","activatorRef","activeItems","setActiveItems","popoverActive","setPopoverActive","activeOptionId","setActiveOptionId","textFieldLabelId","setTextFieldLabelId","listboxId","setListboxId","query","setQuery","filteredOptions","shouldOpen","handleClose","current","focus","handleOpen","handleFocus","handleChange","handleBlur","textFieldContextValue","expanded","onTextFieldFocus","onTextFieldChange","onTextFieldBlur","listboxOptionContextValue","listboxContextValue","textFieldFocused","onKeyToBottom","updateText","resultOptions","filter","option","exec","reactChildrenText","children","handleSelect","selected","onSelect","some","selectedOptions","includes","showList","length","firstSelectedOption","find","queryMatchesExistingOption","matcher","match","createElement","Object","assign","onClick","placeholder","ref","active","autofocusTarget","preferredPosition","preventFocusOnClose","Pane","paddingBlockStart","paddingBlockEnd","paddingInline","borderBlockEndWidth","borderColor","minHeight","undefined","Provider","onChange","id","prefix","source","labelHidden","focused","paddingBlock","map","Option","key","item","Action","props"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/Picker/Picker.js"],"sourcesContent":["import React, { useState, useRef, useCallback, useMemo, isValidElement, createRef } from 'react';\nimport { SearchIcon } from '@shopify/polaris-icons';\nimport { escapeRegex } from '../../utilities/string.js';\nimport { Activator } from './components/Activator/Activator.js';\nimport { SearchField } from './components/SearchField/SearchField.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { Box } from '../Box/Box.js';\nimport { ComboboxTextFieldContext, ComboboxListboxContext, ComboboxListboxOptionContext } from '../../utilities/combobox/context.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { Listbox } from '../Listbox/Listbox.js';\n\nconst FILTER_REGEX = value => new RegExp(value, 'i');\nconst QUERY_REGEX = value => new RegExp(`^${escapeRegex(value)}$`, 'i');\nfunction Picker({\n  activator,\n  allowMultiple,\n  searchField,\n  options = [],\n  willLoadMoreOptions,\n  height,\n  addAction,\n  onScrolledToBottom,\n  onClose,\n  ...listboxProps\n}) {\n  const activatorRef = /*#__PURE__*/createRef();\n  const [activeItems, setActiveItems] = useState([]);\n  const [popoverActive, setPopoverActive] = useState(false);\n  const [activeOptionId, setActiveOptionId] = useState();\n  const [textFieldLabelId, setTextFieldLabelId] = useState();\n  const [listboxId, setListboxId] = useState();\n  const [query, setQuery] = useState('');\n  const filteredOptions = useRef(options);\n  const shouldOpen = !popoverActive;\n  const handleClose = useCallback(() => {\n    setPopoverActive(false);\n    onClose?.();\n    activatorRef.current?.focus();\n  }, [activatorRef, onClose]);\n  const handleOpen = useCallback(() => {\n    setPopoverActive(true);\n    filteredOptions.current = options;\n  }, [options]);\n  const handleFocus = useCallback(() => {\n    if (shouldOpen) handleOpen();\n  }, [shouldOpen, handleOpen]);\n  const handleChange = useCallback(() => {\n    if (shouldOpen) handleOpen();\n  }, [shouldOpen, handleOpen]);\n  const handleBlur = useCallback(() => {\n    if (popoverActive) {\n      handleClose();\n      setQuery('');\n    }\n  }, [popoverActive, handleClose]);\n  const textFieldContextValue = useMemo(() => ({\n    activeOptionId,\n    expanded: popoverActive,\n    listboxId,\n    setTextFieldLabelId,\n    onTextFieldFocus: handleFocus,\n    onTextFieldChange: handleChange,\n    onTextFieldBlur: handleBlur\n  }), [activeOptionId, popoverActive, listboxId, setTextFieldLabelId, handleFocus, handleChange, handleBlur]);\n  const listboxOptionContextValue = useMemo(() => ({\n    allowMultiple\n  }), [allowMultiple]);\n  const listboxContextValue = useMemo(() => ({\n    listboxId,\n    textFieldLabelId,\n    textFieldFocused: popoverActive,\n    willLoadMoreOptions,\n    setActiveOptionId,\n    setListboxId,\n    onKeyToBottom: onScrolledToBottom\n  }), [listboxId, textFieldLabelId, popoverActive, willLoadMoreOptions, setActiveOptionId, setListboxId, onScrolledToBottom]);\n  const updateText = useCallback(value => {\n    setQuery(value);\n    if (value === '') {\n      filteredOptions.current = options;\n      return;\n    }\n    const resultOptions = options?.filter(option => FILTER_REGEX(value).exec(reactChildrenText(option.children)));\n    filteredOptions.current = resultOptions ?? [];\n  }, [options]);\n  const handleSelect = useCallback(selected => {\n    setQuery('');\n    updateText('');\n    listboxProps.onSelect?.(selected);\n    if (!filteredOptions.current.some(option => option.value === selected)) {\n      filteredOptions.current = [...filteredOptions.current, {\n        value: selected,\n        children: selected\n      }];\n    }\n    if (!allowMultiple) {\n      handleClose();\n      setActiveItems([selected]);\n      return;\n    }\n    setActiveItems(selectedOptions => {\n      return activeItems.includes(selected) ? selectedOptions.filter(option => option !== selected) : [...selectedOptions, selected];\n    });\n  }, [updateText, listboxProps, allowMultiple, handleClose, activeItems]);\n  const showList = options.length > 0 || query !== '';\n  const firstSelectedOption = reactChildrenText(options.find(option => option.value === activeItems?.[0])?.children);\n  const queryMatchesExistingOption = options.some(option => {\n    const matcher = QUERY_REGEX(query);\n    return reactChildrenText(option.children).match(matcher);\n  });\n  return /*#__PURE__*/React.createElement(Popover, {\n    activator: /*#__PURE__*/React.createElement(Activator, Object.assign({}, activator, {\n      onClick: handleOpen,\n      selected: firstSelectedOption || '',\n      placeholder: activator.placeholder,\n      ref: activatorRef\n    })),\n    active: popoverActive,\n    autofocusTarget: \"none\",\n    onClose: handleClose,\n    preferredPosition: \"cover\",\n    preventFocusOnClose: true\n  }, /*#__PURE__*/React.createElement(Popover.Pane, {\n    onScrolledToBottom: onScrolledToBottom,\n    height: height\n  }, searchField ? /*#__PURE__*/React.createElement(Box, {\n    paddingBlockStart: \"200\",\n    paddingBlockEnd: \"100\",\n    paddingInline: \"200\",\n    borderBlockEndWidth: \"025\",\n    borderColor: \"border\",\n    minHeight: showList ? undefined : '58px'\n  }, /*#__PURE__*/React.createElement(ComboboxTextFieldContext.Provider, {\n    value: textFieldContextValue\n  }, /*#__PURE__*/React.createElement(SearchField, Object.assign({}, searchField, {\n    value: query,\n    onChange: value => {\n      updateText(value);\n      searchField.onChange?.(value, searchField.id ?? '');\n    },\n    prefix: /*#__PURE__*/React.createElement(Icon, {\n      source: SearchIcon\n    }),\n    labelHidden: true,\n    focused: popoverActive\n  })))) : null, showList && /*#__PURE__*/React.createElement(ComboboxListboxContext.Provider, {\n    value: listboxContextValue\n  }, /*#__PURE__*/React.createElement(ComboboxListboxOptionContext.Provider, {\n    value: listboxOptionContextValue\n  }, /*#__PURE__*/React.createElement(Box, {\n    paddingBlock: \"200\"\n  }, /*#__PURE__*/React.createElement(Listbox, Object.assign({}, listboxProps, {\n    onSelect: handleSelect\n  }), filteredOptions.current?.map(option => /*#__PURE__*/React.createElement(Listbox.Option, Object.assign({\n    key: option.value,\n    selected: activeItems.some(item => item === option.value)\n  }, option))), addAction && query !== '' && !queryMatchesExistingOption ? /*#__PURE__*/React.createElement(Listbox.Action, Object.assign({}, addAction, {\n    value: query\n  })) : null))))));\n}\nconst reactChildrenText = children => {\n  if (typeof children === 'string') return children;\n  return /*#__PURE__*/isValidElement(children) ? reactChildrenText(children?.props?.children) : '';\n};\n\nexport { Picker };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}