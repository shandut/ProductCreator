{"ast":null,"code":"import React, { forwardRef, useState, useReducer, useEffect, useCallback, useMemo } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport { getVisibleAndHiddenActionsIndices, getActionSections, instanceOfMenuGroupDescriptor, isNewBadgeInBadgeActions, instanceOfBulkActionListSection } from './utilities.js';\nimport styles from './BulkActions.css.js';\nimport { BulkActionMenu } from './components/BulkActionMenu/BulkActionMenu.js';\nimport { CheckableButton } from '../CheckableButton/CheckableButton.js';\nimport { BulkActionsMeasurer } from './components/BulkActionsMeasurer/BulkActionsMeasurer.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Text } from '../Text/Text.js';\nimport { BulkActionButton } from './components/BulkActionButton/BulkActionButton.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { ActionList } from '../ActionList/ActionList.js';\nimport { InlineStack } from '../InlineStack/InlineStack.js';\nconst BulkActions = /*#__PURE__*/forwardRef(function BulkActions({\n  promotedActions,\n  actions,\n  disabled,\n  buttonSize,\n  paginatedSelectAllAction,\n  paginatedSelectAllText,\n  label,\n  accessibilityLabel,\n  selected,\n  onToggleAll,\n  onMoreActionPopoverToggle,\n  width,\n  selectMode\n}, ref) {\n  const i18n = useI18n();\n  const [popoverActive, setPopoverActive] = useState(false);\n  const [state, setState] = useReducer((data, partialData) => {\n    return {\n      ...data,\n      ...partialData\n    };\n  }, {\n    disclosureWidth: 0,\n    containerWidth: Infinity,\n    actionsWidths: [],\n    visiblePromotedActions: [],\n    hiddenPromotedActions: [],\n    hasMeasured: false\n  });\n  const {\n    visiblePromotedActions,\n    hiddenPromotedActions,\n    containerWidth,\n    disclosureWidth,\n    actionsWidths,\n    hasMeasured\n  } = state;\n  useEffect(() => {\n    if (containerWidth === 0 || !promotedActions || promotedActions.length === 0) {\n      return;\n    }\n    const {\n      visiblePromotedActions,\n      hiddenPromotedActions\n    } = getVisibleAndHiddenActionsIndices(promotedActions, disclosureWidth, actionsWidths, containerWidth);\n    setState({\n      visiblePromotedActions,\n      hiddenPromotedActions,\n      hasMeasured: containerWidth !== Infinity\n    });\n  }, [containerWidth, disclosureWidth, promotedActions, actionsWidths]);\n  const activatorLabel = !promotedActions || promotedActions && visiblePromotedActions.length === 0 ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n  const paginatedSelectAllMarkup = paginatedSelectAllAction ? /*#__PURE__*/React.createElement(UnstyledButton, {\n    className: styles.AllAction,\n    onClick: paginatedSelectAllAction.onAction,\n    size: \"slim\",\n    disabled: disabled\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodySm\",\n    fontWeight: \"medium\"\n  }, paginatedSelectAllAction.content)) : null;\n  const hasTextAndAction = paginatedSelectAllText && paginatedSelectAllAction;\n  const ariaLive = hasTextAndAction ? 'polite' : undefined;\n  const checkableButtonProps = {\n    accessibilityLabel,\n    label: hasTextAndAction ? paginatedSelectAllText : label,\n    selected,\n    onToggleAll,\n    disabled,\n    ariaLive,\n    ref\n  };\n  const togglePopover = useCallback(() => {\n    onMoreActionPopoverToggle?.(popoverActive);\n    setPopoverActive(popoverActive => !popoverActive);\n  }, [onMoreActionPopoverToggle, popoverActive]);\n  const handleMeasurement = useCallback(measurements => {\n    const {\n      hiddenActionsWidths: actionsWidths,\n      containerWidth,\n      disclosureWidth\n    } = measurements;\n    if (!promotedActions || promotedActions.length === 0) {\n      return;\n    }\n    const {\n      visiblePromotedActions,\n      hiddenPromotedActions\n    } = getVisibleAndHiddenActionsIndices(promotedActions, disclosureWidth, actionsWidths, containerWidth);\n    setState({\n      visiblePromotedActions,\n      hiddenPromotedActions,\n      actionsWidths,\n      containerWidth,\n      disclosureWidth,\n      hasMeasured: true\n    });\n  }, [promotedActions]);\n  const actionSections = getActionSections(actions);\n  const promotedActionsMarkup = promotedActions ? promotedActions.filter((_, index) => {\n    if (!visiblePromotedActions.includes(index)) {\n      return false;\n    }\n    return true;\n  }).map((action, index) => {\n    if (instanceOfMenuGroupDescriptor(action)) {\n      return /*#__PURE__*/React.createElement(BulkActionMenu, Object.assign({\n        key: index\n      }, action, {\n        isNewBadgeInBadgeActions: isNewBadgeInBadgeActions(actionSections),\n        size: buttonSize\n      }));\n    }\n    return /*#__PURE__*/React.createElement(BulkActionButton, Object.assign({\n      key: index,\n      disabled: disabled\n    }, action, {\n      size: buttonSize\n    }));\n  }) : null;\n  const hiddenPromotedActionObjects = hiddenPromotedActions.map(index => promotedActions?.[index]);\n  const mergedHiddenPromotedActions = hiddenPromotedActionObjects.reduce((memo, action) => {\n    if (!action) return memo;\n    if (instanceOfMenuGroupDescriptor(action)) {\n      return memo.concat(action.actions);\n    }\n    return memo.concat(action);\n  }, []);\n  const hiddenPromotedSection = {\n    items: mergedHiddenPromotedActions\n  };\n  const allHiddenActions = useMemo(() => {\n    if (actionSections) {\n      return actionSections;\n    }\n    if (!actions) {\n      return [];\n    }\n    let isAFlatArray = true;\n    return actions.filter(action => action).reduce((memo, action) => {\n      if (instanceOfBulkActionListSection(action)) {\n        isAFlatArray = false;\n        return memo.concat(action);\n      }\n      if (isAFlatArray) {\n        if (memo.length === 0) {\n          return [{\n            items: [action]\n          }];\n        }\n        const lastItem = memo[memo.length - 1];\n        memo.splice(memo.length - 1, 1, {\n          items: [...lastItem.items, action]\n        });\n        return memo;\n      }\n      isAFlatArray = true;\n      return memo.concat({\n        items: [action]\n      });\n    }, []);\n  }, [actions, actionSections]);\n  const activator = /*#__PURE__*/React.createElement(BulkActionButton, {\n    disclosure: true,\n    showContentInButton: !promotedActionsMarkup,\n    onAction: togglePopover,\n    content: activatorLabel,\n    disabled: disabled,\n    indicator: isNewBadgeInBadgeActions(actionSections),\n    size: buttonSize\n  });\n  const actionsMarkup = allHiddenActions.length > 0 ? /*#__PURE__*/React.createElement(Popover, {\n    active: popoverActive,\n    activator: activator,\n    preferredAlignment: \"right\",\n    onClose: togglePopover\n  }, /*#__PURE__*/React.createElement(ActionList, {\n    sections: hiddenPromotedSection.items.length > 0 ? [hiddenPromotedSection, ...allHiddenActions] : allHiddenActions,\n    onActionAnyItem: togglePopover\n  })) : null;\n  const measurerMarkup = /*#__PURE__*/React.createElement(BulkActionsMeasurer, {\n    promotedActions: promotedActions,\n    disabled: disabled,\n    buttonSize: buttonSize,\n    handleMeasurement: handleMeasurement\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.BulkActions,\n    style: width ? {\n      width\n    } : undefined\n  }, /*#__PURE__*/React.createElement(InlineStack, {\n    gap: \"400\",\n    blockAlign: \"center\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.BulkActionsSelectAllWrapper\n  }, /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps), paginatedSelectAllMarkup), selectMode ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.BulkActionsPromotedActionsWrapper\n  }, /*#__PURE__*/React.createElement(InlineStack, {\n    gap: \"100\",\n    blockAlign: \"center\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.BulkActionsOuterLayout\n  }, measurerMarkup, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.BulkActionsLayout, !hasMeasured && styles['BulkActionsLayout--measuring'])\n  }, promotedActionsMarkup)), actionsMarkup)) : null));\n});\nexport { BulkActions };","map":{"version":3,"names":["React","forwardRef","useState","useReducer","useEffect","useCallback","useMemo","classNames","getVisibleAndHiddenActionsIndices","getActionSections","instanceOfMenuGroupDescriptor","isNewBadgeInBadgeActions","instanceOfBulkActionListSection","styles","BulkActionMenu","CheckableButton","BulkActionsMeasurer","useI18n","UnstyledButton","Text","BulkActionButton","Popover","ActionList","InlineStack","BulkActions","promotedActions","actions","disabled","buttonSize","paginatedSelectAllAction","paginatedSelectAllText","label","accessibilityLabel","selected","onToggleAll","onMoreActionPopoverToggle","width","selectMode","ref","i18n","popoverActive","setPopoverActive","state","setState","data","partialData","disclosureWidth","containerWidth","Infinity","actionsWidths","visiblePromotedActions","hiddenPromotedActions","hasMeasured","length","activatorLabel","translate","paginatedSelectAllMarkup","createElement","className","AllAction","onClick","onAction","size","as","variant","fontWeight","content","hasTextAndAction","ariaLive","undefined","checkableButtonProps","togglePopover","handleMeasurement","measurements","hiddenActionsWidths","actionSections","promotedActionsMarkup","filter","_","index","includes","map","action","Object","assign","key","hiddenPromotedActionObjects","mergedHiddenPromotedActions","reduce","memo","concat","hiddenPromotedSection","items","allHiddenActions","isAFlatArray","lastItem","splice","activator","disclosure","showContentInButton","indicator","actionsMarkup","active","preferredAlignment","onClose","sections","onActionAnyItem","measurerMarkup","style","gap","blockAlign","BulkActionsSelectAllWrapper","BulkActionsPromotedActionsWrapper","BulkActionsOuterLayout","BulkActionsLayout"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/BulkActions/BulkActions.js"],"sourcesContent":["import React, { forwardRef, useState, useReducer, useEffect, useCallback, useMemo } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport { getVisibleAndHiddenActionsIndices, getActionSections, instanceOfMenuGroupDescriptor, isNewBadgeInBadgeActions, instanceOfBulkActionListSection } from './utilities.js';\nimport styles from './BulkActions.css.js';\nimport { BulkActionMenu } from './components/BulkActionMenu/BulkActionMenu.js';\nimport { CheckableButton } from '../CheckableButton/CheckableButton.js';\nimport { BulkActionsMeasurer } from './components/BulkActionsMeasurer/BulkActionsMeasurer.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Text } from '../Text/Text.js';\nimport { BulkActionButton } from './components/BulkActionButton/BulkActionButton.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { ActionList } from '../ActionList/ActionList.js';\nimport { InlineStack } from '../InlineStack/InlineStack.js';\n\nconst BulkActions = /*#__PURE__*/forwardRef(function BulkActions({\n  promotedActions,\n  actions,\n  disabled,\n  buttonSize,\n  paginatedSelectAllAction,\n  paginatedSelectAllText,\n  label,\n  accessibilityLabel,\n  selected,\n  onToggleAll,\n  onMoreActionPopoverToggle,\n  width,\n  selectMode\n}, ref) {\n  const i18n = useI18n();\n  const [popoverActive, setPopoverActive] = useState(false);\n  const [state, setState] = useReducer((data, partialData) => {\n    return {\n      ...data,\n      ...partialData\n    };\n  }, {\n    disclosureWidth: 0,\n    containerWidth: Infinity,\n    actionsWidths: [],\n    visiblePromotedActions: [],\n    hiddenPromotedActions: [],\n    hasMeasured: false\n  });\n  const {\n    visiblePromotedActions,\n    hiddenPromotedActions,\n    containerWidth,\n    disclosureWidth,\n    actionsWidths,\n    hasMeasured\n  } = state;\n  useEffect(() => {\n    if (containerWidth === 0 || !promotedActions || promotedActions.length === 0) {\n      return;\n    }\n    const {\n      visiblePromotedActions,\n      hiddenPromotedActions\n    } = getVisibleAndHiddenActionsIndices(promotedActions, disclosureWidth, actionsWidths, containerWidth);\n    setState({\n      visiblePromotedActions,\n      hiddenPromotedActions,\n      hasMeasured: containerWidth !== Infinity\n    });\n  }, [containerWidth, disclosureWidth, promotedActions, actionsWidths]);\n  const activatorLabel = !promotedActions || promotedActions && visiblePromotedActions.length === 0 ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n  const paginatedSelectAllMarkup = paginatedSelectAllAction ? /*#__PURE__*/React.createElement(UnstyledButton, {\n    className: styles.AllAction,\n    onClick: paginatedSelectAllAction.onAction,\n    size: \"slim\",\n    disabled: disabled\n  }, /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: \"bodySm\",\n    fontWeight: \"medium\"\n  }, paginatedSelectAllAction.content)) : null;\n  const hasTextAndAction = paginatedSelectAllText && paginatedSelectAllAction;\n  const ariaLive = hasTextAndAction ? 'polite' : undefined;\n  const checkableButtonProps = {\n    accessibilityLabel,\n    label: hasTextAndAction ? paginatedSelectAllText : label,\n    selected,\n    onToggleAll,\n    disabled,\n    ariaLive,\n    ref\n  };\n  const togglePopover = useCallback(() => {\n    onMoreActionPopoverToggle?.(popoverActive);\n    setPopoverActive(popoverActive => !popoverActive);\n  }, [onMoreActionPopoverToggle, popoverActive]);\n  const handleMeasurement = useCallback(measurements => {\n    const {\n      hiddenActionsWidths: actionsWidths,\n      containerWidth,\n      disclosureWidth\n    } = measurements;\n    if (!promotedActions || promotedActions.length === 0) {\n      return;\n    }\n    const {\n      visiblePromotedActions,\n      hiddenPromotedActions\n    } = getVisibleAndHiddenActionsIndices(promotedActions, disclosureWidth, actionsWidths, containerWidth);\n    setState({\n      visiblePromotedActions,\n      hiddenPromotedActions,\n      actionsWidths,\n      containerWidth,\n      disclosureWidth,\n      hasMeasured: true\n    });\n  }, [promotedActions]);\n  const actionSections = getActionSections(actions);\n  const promotedActionsMarkup = promotedActions ? promotedActions.filter((_, index) => {\n    if (!visiblePromotedActions.includes(index)) {\n      return false;\n    }\n    return true;\n  }).map((action, index) => {\n    if (instanceOfMenuGroupDescriptor(action)) {\n      return /*#__PURE__*/React.createElement(BulkActionMenu, Object.assign({\n        key: index\n      }, action, {\n        isNewBadgeInBadgeActions: isNewBadgeInBadgeActions(actionSections),\n        size: buttonSize\n      }));\n    }\n    return /*#__PURE__*/React.createElement(BulkActionButton, Object.assign({\n      key: index,\n      disabled: disabled\n    }, action, {\n      size: buttonSize\n    }));\n  }) : null;\n  const hiddenPromotedActionObjects = hiddenPromotedActions.map(index => promotedActions?.[index]);\n  const mergedHiddenPromotedActions = hiddenPromotedActionObjects.reduce((memo, action) => {\n    if (!action) return memo;\n    if (instanceOfMenuGroupDescriptor(action)) {\n      return memo.concat(action.actions);\n    }\n    return memo.concat(action);\n  }, []);\n  const hiddenPromotedSection = {\n    items: mergedHiddenPromotedActions\n  };\n  const allHiddenActions = useMemo(() => {\n    if (actionSections) {\n      return actionSections;\n    }\n    if (!actions) {\n      return [];\n    }\n    let isAFlatArray = true;\n    return actions.filter(action => action).reduce((memo, action) => {\n      if (instanceOfBulkActionListSection(action)) {\n        isAFlatArray = false;\n        return memo.concat(action);\n      }\n      if (isAFlatArray) {\n        if (memo.length === 0) {\n          return [{\n            items: [action]\n          }];\n        }\n        const lastItem = memo[memo.length - 1];\n        memo.splice(memo.length - 1, 1, {\n          items: [...lastItem.items, action]\n        });\n        return memo;\n      }\n      isAFlatArray = true;\n      return memo.concat({\n        items: [action]\n      });\n    }, []);\n  }, [actions, actionSections]);\n  const activator = /*#__PURE__*/React.createElement(BulkActionButton, {\n    disclosure: true,\n    showContentInButton: !promotedActionsMarkup,\n    onAction: togglePopover,\n    content: activatorLabel,\n    disabled: disabled,\n    indicator: isNewBadgeInBadgeActions(actionSections),\n    size: buttonSize\n  });\n  const actionsMarkup = allHiddenActions.length > 0 ? /*#__PURE__*/React.createElement(Popover, {\n    active: popoverActive,\n    activator: activator,\n    preferredAlignment: \"right\",\n    onClose: togglePopover\n  }, /*#__PURE__*/React.createElement(ActionList, {\n    sections: hiddenPromotedSection.items.length > 0 ? [hiddenPromotedSection, ...allHiddenActions] : allHiddenActions,\n    onActionAnyItem: togglePopover\n  })) : null;\n  const measurerMarkup = /*#__PURE__*/React.createElement(BulkActionsMeasurer, {\n    promotedActions: promotedActions,\n    disabled: disabled,\n    buttonSize: buttonSize,\n    handleMeasurement: handleMeasurement\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.BulkActions,\n    style: width ? {\n      width\n    } : undefined\n  }, /*#__PURE__*/React.createElement(InlineStack, {\n    gap: \"400\",\n    blockAlign: \"center\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.BulkActionsSelectAllWrapper\n  }, /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps), paginatedSelectAllMarkup), selectMode ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.BulkActionsPromotedActionsWrapper\n  }, /*#__PURE__*/React.createElement(InlineStack, {\n    gap: \"100\",\n    blockAlign: \"center\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.BulkActionsOuterLayout\n  }, measurerMarkup, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(styles.BulkActionsLayout, !hasMeasured && styles['BulkActionsLayout--measuring'])\n  }, promotedActionsMarkup)), actionsMarkup)) : null));\n});\n\nexport { BulkActions };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}