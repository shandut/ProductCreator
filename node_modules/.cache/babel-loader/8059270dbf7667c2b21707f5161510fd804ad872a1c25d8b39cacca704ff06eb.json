{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport { hsbToRgb } from '../../../../utilities/color-transformers.js';\nimport styles from '../../ColorPicker.css.js';\nimport { alphaForDraggerY, calculateDraggerY } from './utilities.js';\nimport { Slidable } from '../Slidable/Slidable.js';\nclass AlphaPicker extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sliderHeight: 0,\n      draggerHeight: 0\n    };\n    this.node = null;\n    this.setNode = node => {\n      if (!node) {\n        return;\n      }\n      this.node = node;\n    };\n    this.setSliderHeight = () => {\n      const {\n        node\n      } = this;\n      if (!node) {\n        return;\n      }\n      this.setState({\n        sliderHeight: node.clientHeight\n      });\n      if (process.env.NODE_ENV === 'development') {\n        setTimeout(() => {\n          this.setState({\n            sliderHeight: node.clientHeight\n          });\n        }, 0);\n      }\n    };\n    this.setDraggerHeight = height => {\n      this.setState({\n        draggerHeight: height\n      });\n    };\n    this.handleChange = ({\n      y\n    }) => {\n      const {\n        onChange\n      } = this.props;\n      const {\n        sliderHeight\n      } = this.state;\n      const alpha = alphaForDraggerY(y, sliderHeight);\n      onChange(alpha);\n    };\n  }\n  componentWillUnmount() {\n    this.observer?.disconnect();\n  }\n  componentDidMount() {\n    if (!this.node) {\n      return;\n    }\n    this.observer = new ResizeObserver(this.setSliderHeight);\n    this.observer.observe(this.node);\n    this.setSliderHeight();\n  }\n  render() {\n    const {\n      color,\n      alpha\n    } = this.props;\n    const {\n      sliderHeight,\n      draggerHeight\n    } = this.state;\n    const draggerY = calculateDraggerY(alpha, sliderHeight, draggerHeight);\n    const background = alphaGradientForColor(color);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.AlphaPicker,\n      ref: this.setNode\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColorLayer,\n      style: {\n        background\n      }\n    }), /*#__PURE__*/React.createElement(Slidable, {\n      draggerY: draggerY,\n      draggerX: 0,\n      onChange: this.handleChange,\n      onDraggerHeight: this.setDraggerHeight\n    }));\n  }\n}\nfunction alphaGradientForColor(color) {\n  const {\n    red,\n    green,\n    blue\n  } = hsbToRgb(color);\n  const rgb = `${red}, ${green}, ${blue}`;\n  return `linear-gradient(to top, rgba(${rgb}, 0) 18px, rgba(${rgb}, 1) calc(100% - 18px))`;\n}\nexport { AlphaPicker };","map":{"version":3,"names":["React","PureComponent","hsbToRgb","styles","alphaForDraggerY","calculateDraggerY","Slidable","AlphaPicker","constructor","args","state","sliderHeight","draggerHeight","node","setNode","setSliderHeight","setState","clientHeight","process","env","NODE_ENV","setTimeout","setDraggerHeight","height","handleChange","y","onChange","props","alpha","componentWillUnmount","observer","disconnect","componentDidMount","ResizeObserver","observe","render","color","draggerY","background","alphaGradientForColor","createElement","className","ref","ColorLayer","style","draggerX","onDraggerHeight","red","green","blue","rgb"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/AlphaPicker/AlphaPicker.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { hsbToRgb } from '../../../../utilities/color-transformers.js';\nimport styles from '../../ColorPicker.css.js';\nimport { alphaForDraggerY, calculateDraggerY } from './utilities.js';\nimport { Slidable } from '../Slidable/Slidable.js';\n\nclass AlphaPicker extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sliderHeight: 0,\n      draggerHeight: 0\n    };\n    this.node = null;\n    this.setNode = node => {\n      if (!node) {\n        return;\n      }\n      this.node = node;\n    };\n    this.setSliderHeight = () => {\n      const {\n        node\n      } = this;\n      if (!node) {\n        return;\n      }\n      this.setState({\n        sliderHeight: node.clientHeight\n      });\n      if (process.env.NODE_ENV === 'development') {\n        setTimeout(() => {\n          this.setState({\n            sliderHeight: node.clientHeight\n          });\n        }, 0);\n      }\n    };\n    this.setDraggerHeight = height => {\n      this.setState({\n        draggerHeight: height\n      });\n    };\n    this.handleChange = ({\n      y\n    }) => {\n      const {\n        onChange\n      } = this.props;\n      const {\n        sliderHeight\n      } = this.state;\n      const alpha = alphaForDraggerY(y, sliderHeight);\n      onChange(alpha);\n    };\n  }\n  componentWillUnmount() {\n    this.observer?.disconnect();\n  }\n  componentDidMount() {\n    if (!this.node) {\n      return;\n    }\n    this.observer = new ResizeObserver(this.setSliderHeight);\n    this.observer.observe(this.node);\n    this.setSliderHeight();\n  }\n  render() {\n    const {\n      color,\n      alpha\n    } = this.props;\n    const {\n      sliderHeight,\n      draggerHeight\n    } = this.state;\n    const draggerY = calculateDraggerY(alpha, sliderHeight, draggerHeight);\n    const background = alphaGradientForColor(color);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.AlphaPicker,\n      ref: this.setNode\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColorLayer,\n      style: {\n        background\n      }\n    }), /*#__PURE__*/React.createElement(Slidable, {\n      draggerY: draggerY,\n      draggerX: 0,\n      onChange: this.handleChange,\n      onDraggerHeight: this.setDraggerHeight\n    }));\n  }\n}\nfunction alphaGradientForColor(color) {\n  const {\n    red,\n    green,\n    blue\n  } = hsbToRgb(color);\n  const rgb = `${red}, ${green}, ${blue}`;\n  return `linear-gradient(to top, rgba(${rgb}, 0) 18px, rgba(${rgb}, 1) calc(100% - 18px))`;\n}\n\nexport { AlphaPicker };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}