{"ast":null,"code":"import React from 'react';\nimport { SelectIcon, ChevronDownIcon, ChevronUpIcon } from '@shopify/polaris-icons';\nimport { useBreakpoints } from '../../utilities/breakpoints.js';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { handleMouseUpByBlurring } from '../../utilities/focus.js';\nimport styles from './Button.css.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Text } from '../Text/Text.js';\nfunction Button({\n  id,\n  children,\n  url,\n  disabled,\n  external,\n  download,\n  target,\n  submit,\n  loading,\n  pressed,\n  accessibilityLabel,\n  role,\n  ariaControls,\n  ariaExpanded,\n  ariaDescribedBy,\n  ariaChecked,\n  onClick,\n  onFocus,\n  onBlur,\n  onKeyDown,\n  onKeyPress,\n  onKeyUp,\n  onMouseEnter,\n  onTouchStart,\n  onPointerDown,\n  icon,\n  disclosure,\n  removeUnderline,\n  size = 'medium',\n  textAlign = 'center',\n  fullWidth,\n  dataPrimaryLink,\n  tone,\n  variant = 'secondary'\n}) {\n  const i18n = useI18n();\n  const isDisabled = disabled || loading;\n  const {\n    mdUp\n  } = useBreakpoints();\n  const className = classNames(styles.Button, styles.pressable, styles[variationName('variant', variant)], styles[variationName('size', size)], styles[variationName('textAlign', textAlign)], fullWidth && styles.fullWidth, disclosure && styles.disclosure, icon && children && styles.iconWithText, icon && children == null && styles.iconOnly, isDisabled && styles.disabled, loading && styles.loading, pressed && !disabled && !url && styles.pressed, removeUnderline && styles.removeUnderline, tone && styles[variationName('tone', tone)]);\n  const disclosureMarkup = disclosure ? /*#__PURE__*/React.createElement(\"span\", {\n    className: loading ? styles.hidden : styles.Icon\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: loading ? 'placeholder' : getDisclosureIconSource(disclosure, ChevronUpIcon, ChevronDownIcon)\n  })) : null;\n  const iconSource = isIconSource(icon) ? /*#__PURE__*/React.createElement(Icon, {\n    source: loading ? 'placeholder' : icon\n  }) : icon;\n  const iconMarkup = iconSource ? /*#__PURE__*/React.createElement(\"span\", {\n    className: loading ? styles.hidden : styles.Icon\n  }, iconSource) : null;\n  const hasPlainText = ['plain', 'monochromePlain'].includes(variant);\n  let textFontWeight = 'medium';\n  if (hasPlainText) {\n    textFontWeight = 'regular';\n  } else if (variant === 'primary') {\n    textFontWeight = mdUp ? 'medium' : 'semibold';\n  }\n  let textVariant = 'bodySm';\n  if (size === 'large' || hasPlainText && size !== 'micro') {\n    textVariant = 'bodyMd';\n  }\n  const childMarkup = children ? /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: textVariant,\n    fontWeight: textFontWeight\n    // Fixes Safari bug that doesn't re-render button text to correct color\n    ,\n\n    key: disabled ? 'text-disabled' : 'text'\n  }, children) : null;\n  const spinnerSVGMarkup = loading ? /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Spinner\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\",\n    accessibilityLabel: i18n.translate('Polaris.Button.spinnerAccessibilityLabel')\n  })) : null;\n  const commonProps = {\n    id,\n    className,\n    accessibilityLabel,\n    ariaDescribedBy,\n    role,\n    onClick,\n    onFocus,\n    onBlur,\n    onMouseUp: handleMouseUpByBlurring,\n    onMouseEnter,\n    onTouchStart,\n    'data-primary-link': dataPrimaryLink\n  };\n  const linkProps = {\n    url,\n    external,\n    download,\n    target\n  };\n  const actionProps = {\n    submit,\n    disabled: isDisabled,\n    loading,\n    ariaControls,\n    ariaExpanded,\n    ariaChecked,\n    pressed,\n    onKeyDown,\n    onKeyUp,\n    onKeyPress,\n    onPointerDown\n  };\n  const buttonMarkup = /*#__PURE__*/React.createElement(UnstyledButton, Object.assign({}, commonProps, linkProps, actionProps), spinnerSVGMarkup, iconMarkup, childMarkup, disclosureMarkup);\n  return buttonMarkup;\n}\nfunction isIconSource(x) {\n  return typeof x === 'string' || typeof x === 'object' && x.body || typeof x === 'function';\n}\nfunction getDisclosureIconSource(disclosure, upIcon, downIcon) {\n  if (disclosure === 'select') {\n    return SelectIcon;\n  }\n  return disclosure === 'up' ? upIcon : downIcon;\n}\nexport { Button };","map":{"version":3,"names":["React","SelectIcon","ChevronDownIcon","ChevronUpIcon","useBreakpoints","classNames","variationName","handleMouseUpByBlurring","styles","Icon","Spinner","UnstyledButton","useI18n","Text","Button","id","children","url","disabled","external","download","target","submit","loading","pressed","accessibilityLabel","role","ariaControls","ariaExpanded","ariaDescribedBy","ariaChecked","onClick","onFocus","onBlur","onKeyDown","onKeyPress","onKeyUp","onMouseEnter","onTouchStart","onPointerDown","icon","disclosure","removeUnderline","size","textAlign","fullWidth","dataPrimaryLink","tone","variant","i18n","isDisabled","mdUp","className","pressable","iconWithText","iconOnly","disclosureMarkup","createElement","hidden","source","getDisclosureIconSource","iconSource","isIconSource","iconMarkup","hasPlainText","includes","textFontWeight","textVariant","childMarkup","as","fontWeight","key","spinnerSVGMarkup","translate","commonProps","onMouseUp","linkProps","actionProps","buttonMarkup","Object","assign","x","body","upIcon","downIcon"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/Button/Button.js"],"sourcesContent":["import React from 'react';\nimport { SelectIcon, ChevronDownIcon, ChevronUpIcon } from '@shopify/polaris-icons';\nimport { useBreakpoints } from '../../utilities/breakpoints.js';\nimport { classNames, variationName } from '../../utilities/css.js';\nimport { handleMouseUpByBlurring } from '../../utilities/focus.js';\nimport styles from './Button.css.js';\nimport { Icon } from '../Icon/Icon.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Text } from '../Text/Text.js';\n\nfunction Button({\n  id,\n  children,\n  url,\n  disabled,\n  external,\n  download,\n  target,\n  submit,\n  loading,\n  pressed,\n  accessibilityLabel,\n  role,\n  ariaControls,\n  ariaExpanded,\n  ariaDescribedBy,\n  ariaChecked,\n  onClick,\n  onFocus,\n  onBlur,\n  onKeyDown,\n  onKeyPress,\n  onKeyUp,\n  onMouseEnter,\n  onTouchStart,\n  onPointerDown,\n  icon,\n  disclosure,\n  removeUnderline,\n  size = 'medium',\n  textAlign = 'center',\n  fullWidth,\n  dataPrimaryLink,\n  tone,\n  variant = 'secondary'\n}) {\n  const i18n = useI18n();\n  const isDisabled = disabled || loading;\n  const {\n    mdUp\n  } = useBreakpoints();\n  const className = classNames(styles.Button, styles.pressable, styles[variationName('variant', variant)], styles[variationName('size', size)], styles[variationName('textAlign', textAlign)], fullWidth && styles.fullWidth, disclosure && styles.disclosure, icon && children && styles.iconWithText, icon && children == null && styles.iconOnly, isDisabled && styles.disabled, loading && styles.loading, pressed && !disabled && !url && styles.pressed, removeUnderline && styles.removeUnderline, tone && styles[variationName('tone', tone)]);\n  const disclosureMarkup = disclosure ? /*#__PURE__*/React.createElement(\"span\", {\n    className: loading ? styles.hidden : styles.Icon\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: loading ? 'placeholder' : getDisclosureIconSource(disclosure, ChevronUpIcon, ChevronDownIcon)\n  })) : null;\n  const iconSource = isIconSource(icon) ? /*#__PURE__*/React.createElement(Icon, {\n    source: loading ? 'placeholder' : icon\n  }) : icon;\n  const iconMarkup = iconSource ? /*#__PURE__*/React.createElement(\"span\", {\n    className: loading ? styles.hidden : styles.Icon\n  }, iconSource) : null;\n  const hasPlainText = ['plain', 'monochromePlain'].includes(variant);\n  let textFontWeight = 'medium';\n  if (hasPlainText) {\n    textFontWeight = 'regular';\n  } else if (variant === 'primary') {\n    textFontWeight = mdUp ? 'medium' : 'semibold';\n  }\n  let textVariant = 'bodySm';\n  if (size === 'large' || hasPlainText && size !== 'micro') {\n    textVariant = 'bodyMd';\n  }\n  const childMarkup = children ? /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    variant: textVariant,\n    fontWeight: textFontWeight\n    // Fixes Safari bug that doesn't re-render button text to correct color\n    ,\n    key: disabled ? 'text-disabled' : 'text'\n  }, children) : null;\n  const spinnerSVGMarkup = loading ? /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Spinner\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\",\n    accessibilityLabel: i18n.translate('Polaris.Button.spinnerAccessibilityLabel')\n  })) : null;\n  const commonProps = {\n    id,\n    className,\n    accessibilityLabel,\n    ariaDescribedBy,\n    role,\n    onClick,\n    onFocus,\n    onBlur,\n    onMouseUp: handleMouseUpByBlurring,\n    onMouseEnter,\n    onTouchStart,\n    'data-primary-link': dataPrimaryLink\n  };\n  const linkProps = {\n    url,\n    external,\n    download,\n    target\n  };\n  const actionProps = {\n    submit,\n    disabled: isDisabled,\n    loading,\n    ariaControls,\n    ariaExpanded,\n    ariaChecked,\n    pressed,\n    onKeyDown,\n    onKeyUp,\n    onKeyPress,\n    onPointerDown\n  };\n  const buttonMarkup = /*#__PURE__*/React.createElement(UnstyledButton, Object.assign({}, commonProps, linkProps, actionProps), spinnerSVGMarkup, iconMarkup, childMarkup, disclosureMarkup);\n  return buttonMarkup;\n}\nfunction isIconSource(x) {\n  return typeof x === 'string' || typeof x === 'object' && x.body || typeof x === 'function';\n}\nfunction getDisclosureIconSource(disclosure, upIcon, downIcon) {\n  if (disclosure === 'select') {\n    return SelectIcon;\n  }\n  return disclosure === 'up' ? upIcon : downIcon;\n}\n\nexport { Button };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}