{"ast":null,"code":"import { taggedTemplateLiteralLoose as _taggedTemplateLiteralLoose, slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.mjs';\nvar _templateObject;\nvar BASE_FONT_SIZE = 16;\nvar UNIT_PX = 'px';\nvar UNIT_EM = 'em';\nvar UNIT_REM = 'rem';\n\n// https://regex101.com/r/zvY2bu/1\nvar DIGIT_REGEX = new RegExp(String.raw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"-?d+(?:.d+|d*)\"], [\"-?\\\\d+(?:\\\\.\\\\d+|\\\\d*)\"]))));\nvar UNIT_REGEX = new RegExp(UNIT_PX + \"|\" + UNIT_EM + \"|\" + UNIT_REM);\nfunction getUnit(value) {\n  if (value === void 0) {\n    value = '';\n  }\n  var unit = value.match(new RegExp(DIGIT_REGEX.source + \"(\" + UNIT_REGEX.source + \")\"));\n  return unit && unit[1];\n}\nfunction toPx(value) {\n  if (value === void 0) {\n    value = '';\n  }\n  var unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_PX) {\n    return value;\n  }\n  if (unit === UNIT_EM || unit === UNIT_REM) {\n    return \"\" + parseFloat(value) * BASE_FONT_SIZE + UNIT_PX;\n  }\n}\nfunction toPxs(value) {\n  return value.replace(new RegExp(DIGIT_REGEX.source + \"(\" + UNIT_EM + \"|\" + UNIT_REM + \")\", 'g'), function (emOrRem) {\n    var _toPx;\n    return (_toPx = toPx(emOrRem)) != null ? _toPx : emOrRem;\n  });\n}\nfunction toEm(value, fontSize) {\n  if (value === void 0) {\n    value = '';\n  }\n  if (fontSize === void 0) {\n    fontSize = BASE_FONT_SIZE;\n  }\n  var unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_EM) {\n    return value;\n  }\n  if (unit === UNIT_PX) {\n    return \"\" + parseFloat(value) / fontSize + UNIT_EM;\n  }\n  if (unit === UNIT_REM) {\n    return \"\" + parseFloat(value) * BASE_FONT_SIZE / fontSize + UNIT_EM;\n  }\n}\nfunction toRem(value) {\n  if (value === void 0) {\n    value = '';\n  }\n  var unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_REM) {\n    return value;\n  }\n  if (unit === UNIT_EM) {\n    return \"\" + parseFloat(value) + UNIT_REM;\n  }\n  if (unit === UNIT_PX) {\n    return \"\" + parseFloat(value) / BASE_FONT_SIZE + UNIT_REM;\n  }\n}\nfunction rem(value) {\n  return value.replace(new RegExp(DIGIT_REGEX.source + \"(\" + UNIT_PX + \")\", 'g'), function (px) {\n    var _toRem;\n    return (_toRem = toRem(px)) != null ? _toRem : px;\n  });\n}\nfunction tokenGroupToRems(metaTokenGroup) {\n  return Object.fromEntries(Object.entries(metaTokenGroup).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      tokenName = _ref2[0],\n      tokenProperties = _ref2[1];\n    return [tokenName, Object.assign(Object.assign({}, tokenProperties), {}, {\n      value: rem(tokenProperties.value)\n    })];\n  })\n  // We loose the `metaTokenGroup` inference after transforming the object with\n  // `Object.fromEntries()` and `Object.entries()`. Thus, we cast the result\n  // back to `T` since we are simply converting the `value` from px to rem.\n  );\n}\nfunction createVarName(tokenName) {\n  return \"--p-\" + tokenName;\n}\nfunction createVar(tokenName) {\n  return \"var(\" + createVarName(tokenName) + \")\";\n}\nfunction getTokenNames(theme) {\n  return Object.values(theme).flatMap(function (tokenGroup) {\n    return Object.keys(tokenGroup);\n  });\n}\n\n/**\n * Allowed Polaris token custom properties.\n *\n * Result: ['--p-color-bg', '--p-color-text', etc...]\n */\nfunction getThemeVarNames(theme) {\n  return getTokenNames(theme).map(createVarName);\n}\n\n/**\n * Alias direction used for composing Polaris `breakpoints` utilities.\n */\n\n/**\n * A collection of directional media conditions for a given Polaris `breakpoints` alias.\n */\n\n/**\n * Media conditions for all Polaris `breakpoints` aliases.\n */\n\nfunction getMediaConditions(breakpoints) {\n  var breakpointEntries = Object.entries(breakpoints);\n  var lastBreakpointIndex = breakpointEntries.length - 1;\n  return Object.fromEntries(breakpointEntries.map(function (entry, index) {\n    var _ref3 = entry,\n      _ref4 = _slicedToArray(_ref3, 2),\n      breakpointsTokenName = _ref4[0],\n      breakpoint = _ref4[1];\n    var upMediaCondition = getUpMediaCondition(breakpoint);\n    var downMediaCondition = getDownMediaCondition(breakpoint);\n    var onlyMediaCondition = index === lastBreakpointIndex ? upMediaCondition : upMediaCondition + \" and \" + getDownMediaCondition(breakpointEntries[index + 1][1]);\n    return [breakpointsTokenName, {\n      // Media condition for the current breakpoint and up\n      up: upMediaCondition,\n      // Media condition for current breakpoint and down\n      down: downMediaCondition,\n      // Media condition for only the current breakpoint\n      only: onlyMediaCondition\n    }];\n  }));\n}\nfunction getUpMediaCondition(breakpoint) {\n  return \"(min-width: \" + toEm(breakpoint) + \")\";\n}\n\n/**\n * Down media condition breakpoints are being subtracted by 0.04px to prevent\n * them from overwriting up media queries. We experimented with multiple offsets\n * and felt that 0.04px would be the safest across different pixel densities,\n * while being representable in ems with 4 decimal places of precision.\n */\nfunction getDownMediaCondition(breakpoint) {\n  var _toPx2;\n  var offsetBreakpoint = parseFloat((_toPx2 = toPx(breakpoint)) != null ? _toPx2 : '') - 0.04;\n  return \"(max-width: \" + toEm(offsetBreakpoint + \"px\") + \")\";\n}\nvar tokenGroupNamesToRems = ['border', 'breakpoints', 'font', 'height', 'shadow', 'space', 'text', 'width'];\n\n/**\n * Mimics the behavior of an identity function:\n * - Validates the input matches the `MetaThemeShape` type exactly\n * - Converts all `px` values to `rem`\n * - Infers all members\n *\n * @example\n * ```\n * const example = createMetaThemeBase({\n *   color: {\n *     bg: {value: '#fff'},\n *   },\n * })\n * ```\n *\n * Where `typeof example` is inferred as `{ color: { bg: { value: string } } }`\n */\nfunction createMetaThemeBase(metaTheme) {\n  return Object.fromEntries(Object.entries(metaTheme).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n      tokenGroupName = _ref6[0],\n      tokenGroup = _ref6[1];\n    return [tokenGroupName, tokenGroupNamesToRems.includes(tokenGroupName) ? tokenGroupToRems(tokenGroup) : tokenGroup];\n  }));\n}\nexport { createMetaThemeBase, createVar, createVarName, getMediaConditions, getThemeVarNames, getTokenNames, getUnit, rem, toEm, toPx, toPxs, toRem, tokenGroupNamesToRems, tokenGroupToRems };","map":{"version":3,"names":["taggedTemplateLiteralLoose","_taggedTemplateLiteralLoose","slicedToArray","_slicedToArray","_templateObject","BASE_FONT_SIZE","UNIT_PX","UNIT_EM","UNIT_REM","DIGIT_REGEX","RegExp","String","raw","UNIT_REGEX","getUnit","value","unit","match","source","toPx","parseFloat","toPxs","replace","emOrRem","_toPx","toEm","fontSize","toRem","rem","px","_toRem","tokenGroupToRems","metaTokenGroup","Object","fromEntries","entries","map","_ref","_ref2","tokenName","tokenProperties","assign","createVarName","createVar","getTokenNames","theme","values","flatMap","tokenGroup","keys","getThemeVarNames","getMediaConditions","breakpoints","breakpointEntries","lastBreakpointIndex","length","entry","index","_ref3","_ref4","breakpointsTokenName","breakpoint","upMediaCondition","getUpMediaCondition","downMediaCondition","getDownMediaCondition","onlyMediaCondition","up","down","only","_toPx2","offsetBreakpoint","tokenGroupNamesToRems","createMetaThemeBase","metaTheme","_ref5","_ref6","tokenGroupName","includes"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris-tokens/dist/esm/src/utils.mjs"],"sourcesContent":["import { taggedTemplateLiteralLoose as _taggedTemplateLiteralLoose, slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.mjs';\n\nvar _templateObject;\nvar BASE_FONT_SIZE = 16;\nvar UNIT_PX = 'px';\nvar UNIT_EM = 'em';\nvar UNIT_REM = 'rem';\n\n// https://regex101.com/r/zvY2bu/1\nvar DIGIT_REGEX = new RegExp(String.raw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"-?d+(?:.d+|d*)\"], [\"-?\\\\d+(?:\\\\.\\\\d+|\\\\d*)\"]))));\nvar UNIT_REGEX = new RegExp(UNIT_PX + \"|\" + UNIT_EM + \"|\" + UNIT_REM);\nfunction getUnit(value) {\n  if (value === void 0) {\n    value = '';\n  }\n  var unit = value.match(new RegExp(DIGIT_REGEX.source + \"(\" + UNIT_REGEX.source + \")\"));\n  return unit && unit[1];\n}\nfunction toPx(value) {\n  if (value === void 0) {\n    value = '';\n  }\n  var unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_PX) {\n    return value;\n  }\n  if (unit === UNIT_EM || unit === UNIT_REM) {\n    return \"\" + parseFloat(value) * BASE_FONT_SIZE + UNIT_PX;\n  }\n}\nfunction toPxs(value) {\n  return value.replace(new RegExp(DIGIT_REGEX.source + \"(\" + UNIT_EM + \"|\" + UNIT_REM + \")\", 'g'), function (emOrRem) {\n    var _toPx;\n    return (_toPx = toPx(emOrRem)) != null ? _toPx : emOrRem;\n  });\n}\nfunction toEm(value, fontSize) {\n  if (value === void 0) {\n    value = '';\n  }\n  if (fontSize === void 0) {\n    fontSize = BASE_FONT_SIZE;\n  }\n  var unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_EM) {\n    return value;\n  }\n  if (unit === UNIT_PX) {\n    return \"\" + parseFloat(value) / fontSize + UNIT_EM;\n  }\n  if (unit === UNIT_REM) {\n    return \"\" + parseFloat(value) * BASE_FONT_SIZE / fontSize + UNIT_EM;\n  }\n}\nfunction toRem(value) {\n  if (value === void 0) {\n    value = '';\n  }\n  var unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_REM) {\n    return value;\n  }\n  if (unit === UNIT_EM) {\n    return \"\" + parseFloat(value) + UNIT_REM;\n  }\n  if (unit === UNIT_PX) {\n    return \"\" + parseFloat(value) / BASE_FONT_SIZE + UNIT_REM;\n  }\n}\nfunction rem(value) {\n  return value.replace(new RegExp(DIGIT_REGEX.source + \"(\" + UNIT_PX + \")\", 'g'), function (px) {\n    var _toRem;\n    return (_toRem = toRem(px)) != null ? _toRem : px;\n  });\n}\nfunction tokenGroupToRems(metaTokenGroup) {\n  return Object.fromEntries(Object.entries(metaTokenGroup).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      tokenName = _ref2[0],\n      tokenProperties = _ref2[1];\n    return [tokenName, Object.assign(Object.assign({}, tokenProperties), {}, {\n      value: rem(tokenProperties.value)\n    })];\n  })\n  // We loose the `metaTokenGroup` inference after transforming the object with\n  // `Object.fromEntries()` and `Object.entries()`. Thus, we cast the result\n  // back to `T` since we are simply converting the `value` from px to rem.\n  );\n}\nfunction createVarName(tokenName) {\n  return \"--p-\" + tokenName;\n}\nfunction createVar(tokenName) {\n  return \"var(\" + createVarName(tokenName) + \")\";\n}\nfunction getTokenNames(theme) {\n  return Object.values(theme).flatMap(function (tokenGroup) {\n    return Object.keys(tokenGroup);\n  });\n}\n\n/**\n * Allowed Polaris token custom properties.\n *\n * Result: ['--p-color-bg', '--p-color-text', etc...]\n */\nfunction getThemeVarNames(theme) {\n  return getTokenNames(theme).map(createVarName);\n}\n\n/**\n * Alias direction used for composing Polaris `breakpoints` utilities.\n */\n\n/**\n * A collection of directional media conditions for a given Polaris `breakpoints` alias.\n */\n\n/**\n * Media conditions for all Polaris `breakpoints` aliases.\n */\n\nfunction getMediaConditions(breakpoints) {\n  var breakpointEntries = Object.entries(breakpoints);\n  var lastBreakpointIndex = breakpointEntries.length - 1;\n  return Object.fromEntries(breakpointEntries.map(function (entry, index) {\n    var _ref3 = entry,\n      _ref4 = _slicedToArray(_ref3, 2),\n      breakpointsTokenName = _ref4[0],\n      breakpoint = _ref4[1];\n    var upMediaCondition = getUpMediaCondition(breakpoint);\n    var downMediaCondition = getDownMediaCondition(breakpoint);\n    var onlyMediaCondition = index === lastBreakpointIndex ? upMediaCondition : upMediaCondition + \" and \" + getDownMediaCondition(breakpointEntries[index + 1][1]);\n    return [breakpointsTokenName, {\n      // Media condition for the current breakpoint and up\n      up: upMediaCondition,\n      // Media condition for current breakpoint and down\n      down: downMediaCondition,\n      // Media condition for only the current breakpoint\n      only: onlyMediaCondition\n    }];\n  }));\n}\nfunction getUpMediaCondition(breakpoint) {\n  return \"(min-width: \" + toEm(breakpoint) + \")\";\n}\n\n/**\n * Down media condition breakpoints are being subtracted by 0.04px to prevent\n * them from overwriting up media queries. We experimented with multiple offsets\n * and felt that 0.04px would be the safest across different pixel densities,\n * while being representable in ems with 4 decimal places of precision.\n */\nfunction getDownMediaCondition(breakpoint) {\n  var _toPx2;\n  var offsetBreakpoint = parseFloat((_toPx2 = toPx(breakpoint)) != null ? _toPx2 : '') - 0.04;\n  return \"(max-width: \" + toEm(offsetBreakpoint + \"px\") + \")\";\n}\nvar tokenGroupNamesToRems = ['border', 'breakpoints', 'font', 'height', 'shadow', 'space', 'text', 'width'];\n\n/**\n * Mimics the behavior of an identity function:\n * - Validates the input matches the `MetaThemeShape` type exactly\n * - Converts all `px` values to `rem`\n * - Infers all members\n *\n * @example\n * ```\n * const example = createMetaThemeBase({\n *   color: {\n *     bg: {value: '#fff'},\n *   },\n * })\n * ```\n *\n * Where `typeof example` is inferred as `{ color: { bg: { value: string } } }`\n */\nfunction createMetaThemeBase(metaTheme) {\n  return Object.fromEntries(Object.entries(metaTheme).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n      tokenGroupName = _ref6[0],\n      tokenGroup = _ref6[1];\n    return [tokenGroupName, tokenGroupNamesToRems.includes(tokenGroupName) ? tokenGroupToRems(tokenGroup) : tokenGroup];\n  }));\n}\n\nexport { createMetaThemeBase, createVar, createVarName, getMediaConditions, getThemeVarNames, getTokenNames, getUnit, rem, toEm, toPx, toPxs, toRem, tokenGroupNamesToRems, tokenGroupToRems };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}