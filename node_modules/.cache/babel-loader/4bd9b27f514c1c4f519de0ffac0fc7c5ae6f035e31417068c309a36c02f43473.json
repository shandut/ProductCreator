{"ast":null,"code":"import React from 'react';\nimport { getResponsiveValue, getResponsiveProps, sanitizeCustomProperties } from '../../utilities/css.js';\nimport styles from './InlineGrid.css.js';\nfunction InlineGrid({\n  children,\n  columns,\n  gap,\n  alignItems\n}) {\n  const style = {\n    ...getResponsiveValue('inline-grid', 'grid-template-columns', formatInlineGrid(columns)),\n    ...getResponsiveProps('inline-grid', 'gap', 'space', gap),\n    '--pc-inline-grid-align-items': alignItems\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.InlineGrid,\n    style: sanitizeCustomProperties(style)\n  }, children);\n}\nfunction formatInlineGrid(columns) {\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    return Object.fromEntries(Object.entries(columns).map(([breakpointAlias, breakpointInlineGrid]) => [breakpointAlias, getColumnValue(breakpointInlineGrid)]));\n  }\n  return getColumnValue(columns);\n}\nfunction getColumnValue(columns) {\n  if (!columns) return undefined;\n  if (typeof columns === 'number' || !isNaN(Number(columns))) {\n    return `repeat(${Number(columns)}, minmax(0, 1fr))`;\n  }\n  if (typeof columns === 'string') return columns;\n  return columns.map(column => {\n    switch (column) {\n      case 'oneThird':\n        return 'minmax(0, 1fr)';\n      case 'oneHalf':\n        return 'minmax(0, 1fr)';\n      case 'twoThirds':\n        return 'minmax(0, 2fr)';\n    }\n  }).join(' ');\n}\nexport { InlineGrid };","map":{"version":3,"names":["React","getResponsiveValue","getResponsiveProps","sanitizeCustomProperties","styles","InlineGrid","children","columns","gap","alignItems","style","formatInlineGrid","createElement","className","Array","isArray","Object","fromEntries","entries","map","breakpointAlias","breakpointInlineGrid","getColumnValue","undefined","isNaN","Number","column","join"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/InlineGrid/InlineGrid.js"],"sourcesContent":["import React from 'react';\nimport { getResponsiveValue, getResponsiveProps, sanitizeCustomProperties } from '../../utilities/css.js';\nimport styles from './InlineGrid.css.js';\n\nfunction InlineGrid({\n  children,\n  columns,\n  gap,\n  alignItems\n}) {\n  const style = {\n    ...getResponsiveValue('inline-grid', 'grid-template-columns', formatInlineGrid(columns)),\n    ...getResponsiveProps('inline-grid', 'gap', 'space', gap),\n    '--pc-inline-grid-align-items': alignItems\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.InlineGrid,\n    style: sanitizeCustomProperties(style)\n  }, children);\n}\nfunction formatInlineGrid(columns) {\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    return Object.fromEntries(Object.entries(columns).map(([breakpointAlias, breakpointInlineGrid]) => [breakpointAlias, getColumnValue(breakpointInlineGrid)]));\n  }\n  return getColumnValue(columns);\n}\nfunction getColumnValue(columns) {\n  if (!columns) return undefined;\n  if (typeof columns === 'number' || !isNaN(Number(columns))) {\n    return `repeat(${Number(columns)}, minmax(0, 1fr))`;\n  }\n  if (typeof columns === 'string') return columns;\n  return columns.map(column => {\n    switch (column) {\n      case 'oneThird':\n        return 'minmax(0, 1fr)';\n      case 'oneHalf':\n        return 'minmax(0, 1fr)';\n      case 'twoThirds':\n        return 'minmax(0, 2fr)';\n    }\n  }).join(' ');\n}\n\nexport { InlineGrid };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,EAAEC,kBAAkB,EAAEC,wBAAwB,QAAQ,wBAAwB;AACzG,OAAOC,MAAM,MAAM,qBAAqB;AAExC,SAASC,UAAUA,CAAC;EAClBC,QAAQ;EACRC,OAAO;EACPC,GAAG;EACHC;AACF,CAAC,EAAE;EACD,MAAMC,KAAK,GAAG;IACZ,GAAGT,kBAAkB,CAAC,aAAa,EAAE,uBAAuB,EAAEU,gBAAgB,CAACJ,OAAO,CAAC,CAAC;IACxF,GAAGL,kBAAkB,CAAC,aAAa,EAAE,KAAK,EAAE,OAAO,EAAEM,GAAG,CAAC;IACzD,8BAA8B,EAAEC;EAClC,CAAC;EACD,OAAO,aAAaT,KAAK,CAACY,aAAa,CAAC,KAAK,EAAE;IAC7CC,SAAS,EAAET,MAAM,CAACC,UAAU;IAC5BK,KAAK,EAAEP,wBAAwB,CAACO,KAAK;EACvC,CAAC,EAAEJ,QAAQ,CAAC;AACd;AACA,SAASK,gBAAgBA,CAACJ,OAAO,EAAE;EACjC,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,IAAI,IAAI,CAACO,KAAK,CAACC,OAAO,CAACR,OAAO,CAAC,EAAE;IAC9E,OAAOS,MAAM,CAACC,WAAW,CAACD,MAAM,CAACE,OAAO,CAACX,OAAO,CAAC,CAACY,GAAG,CAAC,CAAC,CAACC,eAAe,EAAEC,oBAAoB,CAAC,KAAK,CAACD,eAAe,EAAEE,cAAc,CAACD,oBAAoB,CAAC,CAAC,CAAC,CAAC;EAC9J;EACA,OAAOC,cAAc,CAACf,OAAO,CAAC;AAChC;AACA,SAASe,cAAcA,CAACf,OAAO,EAAE;EAC/B,IAAI,CAACA,OAAO,EAAE,OAAOgB,SAAS;EAC9B,IAAI,OAAOhB,OAAO,KAAK,QAAQ,IAAI,CAACiB,KAAK,CAACC,MAAM,CAAClB,OAAO,CAAC,CAAC,EAAE;IAC1D,OAAO,UAAUkB,MAAM,CAAClB,OAAO,CAAC,mBAAmB;EACrD;EACA,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE,OAAOA,OAAO;EAC/C,OAAOA,OAAO,CAACY,GAAG,CAACO,MAAM,IAAI;IAC3B,QAAQA,MAAM;MACZ,KAAK,UAAU;QACb,OAAO,gBAAgB;MACzB,KAAK,SAAS;QACZ,OAAO,gBAAgB;MACzB,KAAK,WAAW;QACd,OAAO,gBAAgB;IAC3B;EACF,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AACd;AAEA,SAAStB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}