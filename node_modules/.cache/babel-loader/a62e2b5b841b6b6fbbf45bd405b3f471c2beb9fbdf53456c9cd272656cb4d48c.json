{"ast":null,"code":"import { slicedToArray as _slicedToArray } from '../../_virtual/_rollupPluginBabelHelpers.mjs';\nimport deepmerge from 'deepmerge';\nimport { getTokenNames, tokenGroupNamesToRems, tokenGroupToRems } from '../utils.mjs';\nimport { metaThemeBase } from './base/index.mjs';\n\n/**\n * Mimics the behavior of an identity function:\n * - Validates the input matches the `MetaThemeShape` type exactly\n * - Converts all `px` values to `rem`\n * - Infers all members\n *\n * @example\n * ```\n * const example = createMetaThemePartial({\n *   color: {\n *     bg: {value: '#fff'},\n *   },\n * })\n * ```\n *\n * Where `typeof example` is inferred as `{ color: { bg: { value: string } } }`\n */\nfunction createMetaThemePartial(metaThemePartial) {\n  return Object.fromEntries(Object.entries(metaThemePartial).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      tokenGroupName = _ref2[0],\n      tokenGroup = _ref2[1];\n    return [tokenGroupName, tokenGroup && tokenGroupNamesToRems.includes(tokenGroupName) ? tokenGroupToRems(tokenGroup) : tokenGroup];\n  }));\n}\nfunction createMetaTheme(metaThemePartial) {\n  return deepmerge(metaThemeBase, metaThemePartial);\n}\nfunction createThemeClassName(themeName) {\n  return \"p-theme-\" + themeName;\n}\nfunction createIsTokenName(theme) {\n  var tokenNames = new Set(getTokenNames(theme));\n  return function (tokenName) {\n    return tokenNames.has(tokenName);\n  };\n}\nexport { createIsTokenName, createMetaTheme, createMetaThemePartial, createThemeClassName };","map":{"version":3,"names":["slicedToArray","_slicedToArray","deepmerge","getTokenNames","tokenGroupNamesToRems","tokenGroupToRems","metaThemeBase","createMetaThemePartial","metaThemePartial","Object","fromEntries","entries","map","_ref","_ref2","tokenGroupName","tokenGroup","includes","createMetaTheme","createThemeClassName","themeName","createIsTokenName","theme","tokenNames","Set","tokenName","has"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris-tokens/dist/esm/src/themes/utils.mjs"],"sourcesContent":["import { slicedToArray as _slicedToArray } from '../../_virtual/_rollupPluginBabelHelpers.mjs';\nimport deepmerge from 'deepmerge';\nimport { getTokenNames, tokenGroupNamesToRems, tokenGroupToRems } from '../utils.mjs';\nimport { metaThemeBase } from './base/index.mjs';\n\n/**\n * Mimics the behavior of an identity function:\n * - Validates the input matches the `MetaThemeShape` type exactly\n * - Converts all `px` values to `rem`\n * - Infers all members\n *\n * @example\n * ```\n * const example = createMetaThemePartial({\n *   color: {\n *     bg: {value: '#fff'},\n *   },\n * })\n * ```\n *\n * Where `typeof example` is inferred as `{ color: { bg: { value: string } } }`\n */\nfunction createMetaThemePartial(metaThemePartial) {\n  return Object.fromEntries(Object.entries(metaThemePartial).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      tokenGroupName = _ref2[0],\n      tokenGroup = _ref2[1];\n    return [tokenGroupName, tokenGroup && tokenGroupNamesToRems.includes(tokenGroupName) ? tokenGroupToRems(tokenGroup) : tokenGroup];\n  }));\n}\nfunction createMetaTheme(metaThemePartial) {\n  return deepmerge(metaThemeBase, metaThemePartial);\n}\nfunction createThemeClassName(themeName) {\n  return \"p-theme-\" + themeName;\n}\nfunction createIsTokenName(theme) {\n  var tokenNames = new Set(getTokenNames(theme));\n  return function (tokenName) {\n    return tokenNames.has(tokenName);\n  };\n}\n\nexport { createIsTokenName, createMetaTheme, createMetaThemePartial, createThemeClassName };\n"],"mappings":"AAAA,SAASA,aAAa,IAAIC,cAAc,QAAQ,8CAA8C;AAC9F,OAAOC,SAAS,MAAM,WAAW;AACjC,SAASC,aAAa,EAAEC,qBAAqB,EAAEC,gBAAgB,QAAQ,cAAc;AACrF,SAASC,aAAa,QAAQ,kBAAkB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,sBAAsBA,CAACC,gBAAgB,EAAE;EAChD,OAAOC,MAAM,CAACC,WAAW,CAACD,MAAM,CAACE,OAAO,CAACH,gBAAgB,CAAC,CAACI,GAAG,CAAC,UAAUC,IAAI,EAAE;IAC7E,IAAIC,KAAK,GAAGb,cAAc,CAACY,IAAI,EAAE,CAAC,CAAC;MACjCE,cAAc,GAAGD,KAAK,CAAC,CAAC,CAAC;MACzBE,UAAU,GAAGF,KAAK,CAAC,CAAC,CAAC;IACvB,OAAO,CAACC,cAAc,EAAEC,UAAU,IAAIZ,qBAAqB,CAACa,QAAQ,CAACF,cAAc,CAAC,GAAGV,gBAAgB,CAACW,UAAU,CAAC,GAAGA,UAAU,CAAC;EACnI,CAAC,CAAC,CAAC;AACL;AACA,SAASE,eAAeA,CAACV,gBAAgB,EAAE;EACzC,OAAON,SAAS,CAACI,aAAa,EAAEE,gBAAgB,CAAC;AACnD;AACA,SAASW,oBAAoBA,CAACC,SAAS,EAAE;EACvC,OAAO,UAAU,GAAGA,SAAS;AAC/B;AACA,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAChC,IAAIC,UAAU,GAAG,IAAIC,GAAG,CAACrB,aAAa,CAACmB,KAAK,CAAC,CAAC;EAC9C,OAAO,UAAUG,SAAS,EAAE;IAC1B,OAAOF,UAAU,CAACG,GAAG,CAACD,SAAS,CAAC;EAClC,CAAC;AACH;AAEA,SAASJ,iBAAiB,EAAEH,eAAe,EAAEX,sBAAsB,EAAEY,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}