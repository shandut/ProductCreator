{"ast":null,"code":"import { useContext, createContext } from 'react';\nimport { themes } from '@shopify/polaris-tokens';\nconst ThemeContext = /*#__PURE__*/createContext(null);\nconst ThemeNameContext = /*#__PURE__*/createContext(null);\nfunction getTheme(themeName) {\n  return themes[themeName];\n}\nfunction useTheme() {\n  const theme = useContext(ThemeContext);\n  if (!theme) {\n    throw new Error('No theme was provided. Your application must be wrapped in an <AppProvider> or <ThemeProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.');\n  }\n  return theme;\n}\nfunction useThemeName() {\n  const themeName = useContext(ThemeNameContext);\n  if (!themeName) {\n    throw new Error('No themeName was provided. Your application must be wrapped in an <AppProvider> or <ThemeProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.');\n  }\n  return themeName;\n}\nfunction UseTheme(props) {\n  const theme = useTheme();\n  return props.children(theme);\n}\nexport { ThemeContext, ThemeNameContext, UseTheme, getTheme, useTheme, useThemeName };","map":{"version":3,"names":["useContext","createContext","themes","ThemeContext","ThemeNameContext","getTheme","themeName","useTheme","theme","Error","useThemeName","UseTheme","props","children"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/utilities/use-theme.js"],"sourcesContent":["import { useContext, createContext } from 'react';\nimport { themes } from '@shopify/polaris-tokens';\n\nconst ThemeContext = /*#__PURE__*/createContext(null);\nconst ThemeNameContext = /*#__PURE__*/createContext(null);\nfunction getTheme(themeName) {\n  return themes[themeName];\n}\nfunction useTheme() {\n  const theme = useContext(ThemeContext);\n  if (!theme) {\n    throw new Error('No theme was provided. Your application must be wrapped in an <AppProvider> or <ThemeProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.');\n  }\n  return theme;\n}\nfunction useThemeName() {\n  const themeName = useContext(ThemeNameContext);\n  if (!themeName) {\n    throw new Error('No themeName was provided. Your application must be wrapped in an <AppProvider> or <ThemeProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.');\n  }\n  return themeName;\n}\nfunction UseTheme(props) {\n  const theme = useTheme();\n  return props.children(theme);\n}\n\nexport { ThemeContext, ThemeNameContext, UseTheme, getTheme, useTheme, useThemeName };\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,aAAa,QAAQ,OAAO;AACjD,SAASC,MAAM,QAAQ,yBAAyB;AAEhD,MAAMC,YAAY,GAAG,aAAaF,aAAa,CAAC,IAAI,CAAC;AACrD,MAAMG,gBAAgB,GAAG,aAAaH,aAAa,CAAC,IAAI,CAAC;AACzD,SAASI,QAAQA,CAACC,SAAS,EAAE;EAC3B,OAAOJ,MAAM,CAACI,SAAS,CAAC;AAC1B;AACA,SAASC,QAAQA,CAAA,EAAG;EAClB,MAAMC,KAAK,GAAGR,UAAU,CAACG,YAAY,CAAC;EACtC,IAAI,CAACK,KAAK,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,oMAAoM,CAAC;EACvN;EACA,OAAOD,KAAK;AACd;AACA,SAASE,YAAYA,CAAA,EAAG;EACtB,MAAMJ,SAAS,GAAGN,UAAU,CAACI,gBAAgB,CAAC;EAC9C,IAAI,CAACE,SAAS,EAAE;IACd,MAAM,IAAIG,KAAK,CAAC,wMAAwM,CAAC;EAC3N;EACA,OAAOH,SAAS;AAClB;AACA,SAASK,QAAQA,CAACC,KAAK,EAAE;EACvB,MAAMJ,KAAK,GAAGD,QAAQ,CAAC,CAAC;EACxB,OAAOK,KAAK,CAACC,QAAQ,CAACL,KAAK,CAAC;AAC9B;AAEA,SAASL,YAAY,EAAEC,gBAAgB,EAAEO,QAAQ,EAAEN,QAAQ,EAAEE,QAAQ,EAAEG,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}