{"ast":null,"code":"import React, { PureComponent, createRef } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { debounce } from '../../utilities/debounce.js';\nimport { classNames } from '../../utilities/css.js';\nimport { headerCell } from '../shared.js';\nimport { measureColumn, getPrevAndCurrentColumns } from './utilities.js';\nimport styles from './DataTable.css.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Pagination } from '../Pagination/Pagination.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { Navigation } from './components/Navigation/Navigation.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nconst getRowClientHeights = rows => {\n  const heights = [];\n  if (!rows) {\n    return heights;\n  }\n  rows.forEach(row => {\n    heights.push(row.clientHeight);\n  });\n  return heights;\n};\nclass DataTableInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      condensed: false,\n      columnVisibilityData: [],\n      isScrolledFarthestLeft: true,\n      isScrolledFarthestRight: false,\n      rowHovered: undefined\n    };\n    this.dataTable = /*#__PURE__*/createRef();\n    this.scrollContainer = /*#__PURE__*/createRef();\n    this.table = /*#__PURE__*/createRef();\n    this.stickyTable = /*#__PURE__*/createRef();\n    this.stickyNav = null;\n    this.headerNav = null;\n    this.tableHeadings = [];\n    this.stickyHeadings = [];\n    this.tableHeadingWidths = [];\n    this.stickyHeaderActive = false;\n    this.scrollStopTimer = null;\n    this.handleResize = debounce(() => {\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        }\n      } = this;\n      let condensed = false;\n      if (table && scrollContainer) {\n        // safari sometimes incorrectly sets the scrollwidth too large by 1px\n        condensed = table.scrollWidth > scrollContainer.clientWidth + 1;\n      }\n      this.setState({\n        condensed,\n        ...this.calculateColumnVisibilityData(condensed)\n      });\n    });\n    this.setCellRef = ({\n      ref,\n      index,\n      inStickyHeader\n    }) => {\n      if (ref == null) {\n        return;\n      }\n      if (inStickyHeader) {\n        this.stickyHeadings[index] = ref;\n        const button = ref.querySelector('button');\n        if (button == null) {\n          return;\n        }\n        button.addEventListener('focus', this.handleHeaderButtonFocus);\n      } else {\n        this.tableHeadings[index] = ref;\n        this.tableHeadingWidths[index] = ref.clientWidth;\n      }\n    };\n    this.changeHeadingFocus = () => {\n      const {\n        tableHeadings,\n        stickyHeadings,\n        stickyNav,\n        headerNav\n      } = this;\n      const stickyFocusedItemIndex = stickyHeadings.findIndex(item => item === document.activeElement?.parentElement);\n      const tableFocusedItemIndex = tableHeadings.findIndex(item => item === document.activeElement?.parentElement);\n      const arrowsInStickyNav = stickyNav?.querySelectorAll('button');\n      const arrowsInHeaderNav = headerNav?.querySelectorAll('button');\n      let stickyFocusedNavIndex = -1;\n      arrowsInStickyNav?.forEach((item, index) => {\n        if (item === document.activeElement) {\n          stickyFocusedNavIndex = index;\n        }\n      });\n      let headerFocusedNavIndex = -1;\n      arrowsInHeaderNav?.forEach((item, index) => {\n        if (item === document.activeElement) {\n          headerFocusedNavIndex = index;\n        }\n      });\n      if (stickyFocusedItemIndex < 0 && tableFocusedItemIndex < 0 && stickyFocusedNavIndex < 0 && headerFocusedNavIndex < 0) {\n        return null;\n      }\n      let button;\n      if (stickyFocusedItemIndex >= 0) {\n        button = tableHeadings[stickyFocusedItemIndex].querySelector('button');\n      } else if (tableFocusedItemIndex >= 0) {\n        button = stickyHeadings[tableFocusedItemIndex].querySelector('button');\n      }\n      if (stickyFocusedNavIndex >= 0) {\n        button = arrowsInHeaderNav?.[stickyFocusedNavIndex];\n      } else if (headerFocusedNavIndex >= 0) {\n        button = arrowsInStickyNav?.[headerFocusedNavIndex];\n      }\n      if (button == null) {\n        return null;\n      }\n      button.style.visibility = 'visible';\n      button.focus();\n      button.style.removeProperty('visibility');\n    };\n    this.calculateColumnVisibilityData = condensed => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        },\n        dataTable: {\n          current: dataTable\n        }\n      } = this;\n      const {\n        stickyHeader\n      } = this.props;\n      if ((stickyHeader || condensed) && table && scrollContainer && dataTable) {\n        const headerCells = table.querySelectorAll(headerCell.selector);\n        const rightMostHeader = headerCells[fixedFirstColumns - 1];\n        const nthColumnWidth = fixedFirstColumns ? rightMostHeader.offsetLeft + rightMostHeader.offsetWidth : 0;\n        if (headerCells.length > 0) {\n          const firstVisibleColumnIndex = headerCells.length - 1;\n          const tableLeftVisibleEdge = scrollContainer.scrollLeft + nthColumnWidth;\n          const tableRightVisibleEdge = scrollContainer.scrollLeft + dataTable.offsetWidth;\n          const tableData = {\n            firstVisibleColumnIndex,\n            tableLeftVisibleEdge,\n            tableRightVisibleEdge\n          };\n          const columnVisibilityData = [...headerCells].map(measureColumn(tableData));\n          const lastColumn = columnVisibilityData[columnVisibilityData.length - 1];\n          const isScrolledFarthestLeft = fixedFirstColumns ? tableLeftVisibleEdge === nthColumnWidth : tableLeftVisibleEdge === 0;\n          return {\n            columnVisibilityData,\n            ...getPrevAndCurrentColumns(tableData, columnVisibilityData),\n            isScrolledFarthestLeft,\n            isScrolledFarthestRight: lastColumn.rightEdge <= tableRightVisibleEdge\n          };\n        }\n      }\n      return {\n        columnVisibilityData: [],\n        previousColumn: undefined,\n        currentColumn: undefined\n      };\n    };\n    this.handleHeaderButtonFocus = event => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      if (this.scrollContainer.current == null || event.target == null || this.state.columnVisibilityData.length === 0) {\n        return;\n      }\n      const target = event.target;\n      const currentCell = target.parentNode;\n      const tableScrollLeft = this.scrollContainer.current.scrollLeft;\n      const tableViewableWidth = this.scrollContainer.current.offsetWidth;\n      const tableRightEdge = tableScrollLeft + tableViewableWidth;\n      const nthColumnWidth = this.state.columnVisibilityData.length > 0 ? this.state.columnVisibilityData[fixedFirstColumns]?.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const currentColumnRightEdge = currentCell.offsetLeft + currentCell.offsetWidth;\n      if (tableScrollLeft > currentColumnLeftEdge - nthColumnWidth) {\n        this.scrollContainer.current.scrollLeft = currentColumnLeftEdge - nthColumnWidth;\n      }\n      if (currentColumnRightEdge > tableRightEdge) {\n        this.scrollContainer.current.scrollLeft = currentColumnRightEdge - tableViewableWidth;\n      }\n    };\n    this.stickyHeaderScrolling = () => {\n      const {\n        current: stickyTable\n      } = this.stickyTable;\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n      if (stickyTable == null || scrollContainer == null) {\n        return;\n      }\n      stickyTable.scrollLeft = scrollContainer.scrollLeft;\n    };\n    this.scrollListener = () => {\n      if (this.scrollStopTimer) {\n        clearTimeout(this.scrollStopTimer);\n      }\n      this.scrollStopTimer = setTimeout(() => {\n        this.setState(prevState => ({\n          ...this.calculateColumnVisibilityData(prevState.condensed)\n        }));\n      }, 100);\n      this.setState({\n        isScrolledFarthestLeft: this.scrollContainer.current?.scrollLeft === 0\n      });\n      if (this.props.stickyHeader && this.stickyHeaderActive) {\n        this.stickyHeaderScrolling();\n      }\n    };\n    this.handleHover = row => () => {\n      this.setState({\n        rowHovered: row\n      });\n    };\n    this.handleFocus = event => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      if (this.scrollContainer.current == null || event.target == null) {\n        return;\n      }\n      const currentCell = event.target.parentNode;\n      const fixedNthColumn = this.props;\n      const nthColumnWidth = fixedNthColumn ? this.state.columnVisibilityData[fixedFirstColumns]?.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const desiredScrollLeft = currentColumnLeftEdge - nthColumnWidth;\n      if (this.scrollContainer.current.scrollLeft > desiredScrollLeft) {\n        this.scrollContainer.current.scrollLeft = desiredScrollLeft;\n      }\n\n      // focus fixed first column if present\n    };\n    this.navigateTable = direction => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        currentColumn,\n        previousColumn\n      } = this.state;\n      const nthColumnWidth = this.state.columnVisibilityData[fixedFirstColumns - 1]?.rightEdge;\n      if (!currentColumn || !previousColumn) {\n        return;\n      }\n      let prevWidths = 0;\n      for (let index = 0; index < currentColumn.index; index++) {\n        prevWidths += this.state.columnVisibilityData[index].width;\n      }\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n      const handleScroll = () => {\n        let newScrollLeft = 0;\n        if (fixedFirstColumns) {\n          newScrollLeft = direction === 'right' ? prevWidths - nthColumnWidth + currentColumn.width : prevWidths - previousColumn.width - nthColumnWidth;\n        } else {\n          newScrollLeft = direction === 'right' ? currentColumn.rightEdge : previousColumn.leftEdge;\n        }\n        if (scrollContainer) {\n          scrollContainer.scrollLeft = newScrollLeft;\n          requestAnimationFrame(() => {\n            this.setState(prevState => ({\n              ...this.calculateColumnVisibilityData(prevState.condensed)\n            }));\n          });\n        }\n      };\n      return handleScroll;\n    };\n    // eslint-disable-next-line @shopify/react-no-multiple-render-methods\n    this.renderHeading = ({\n      heading,\n      headingIndex,\n      inFixedNthColumn,\n      inStickyHeader\n    }) => {\n      const {\n        sortable,\n        truncate = false,\n        columnContentTypes,\n        defaultSortDirection,\n        initialSortColumnIndex = 0,\n        verticalAlign,\n        firstColumnMinWidth\n      } = this.props;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex,\n        isScrolledFarthestLeft\n      } = this.state;\n      let sortableHeadingProps;\n      const headingCellId = `heading-cell-${headingIndex}`;\n      const stickyHeaderId = `stickyheader-${headingIndex}`;\n      const id = inStickyHeader ? stickyHeaderId : headingCellId;\n      if (sortable) {\n        const isSortable = sortable[headingIndex];\n        const isSorted = isSortable && sortedColumnIndex === headingIndex;\n        const direction = isSorted ? sortDirection : 'none';\n        sortableHeadingProps = {\n          defaultSortDirection,\n          sorted: isSorted,\n          sortable: isSortable,\n          sortDirection: direction,\n          onSort: this.defaultOnSort(headingIndex),\n          fixedNthColumn: fixedFirstColumns,\n          inFixedNthColumn: fixedFirstColumns\n        };\n      }\n      const stickyCellWidth = inStickyHeader ? this.tableHeadingWidths[headingIndex] : undefined;\n      const fixedCellVisible = !isScrolledFarthestLeft;\n      const cellProps = {\n        header: true,\n        stickyHeadingCell: inStickyHeader,\n        content: heading,\n        contentType: columnContentTypes[headingIndex],\n        nthColumn: headingIndex < fixedFirstColumns,\n        fixedFirstColumns,\n        truncate,\n        headingIndex,\n        ...sortableHeadingProps,\n        verticalAlign,\n        handleFocus: this.handleFocus,\n        stickyCellWidth,\n        fixedCellVisible,\n        firstColumnMinWidth\n      };\n      if (inFixedNthColumn && inStickyHeader) {\n        // need two cells for fixed first column (actual cell and the overlapping one)\n        // the sticky cell is second so that the index is associated with the sticky\n        // cell and not the underlying one. This helps `changeHeadingFocus` to put\n        // focus on the right cell when switching from sticky to non-sticky headers\n        return [/*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: id\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: false\n        })), /*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: `${id}-sticky`\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: Boolean(fixedFirstColumns),\n          lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n          style: {\n            left: this.state.columnVisibilityData[headingIndex]?.leftEdge\n          }\n        }))];\n      }\n      return /*#__PURE__*/React.createElement(Cell, Object.assign({\n        key: id\n      }, cellProps, {\n        setRef: ref => {\n          this.setCellRef({\n            ref,\n            index: headingIndex,\n            inStickyHeader\n          });\n        },\n        lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n        inFixedNthColumn: inFixedNthColumn\n      }));\n    };\n    this.totalsRowHeading = () => {\n      const {\n        i18n,\n        totals,\n        totalsName\n      } = this.props;\n      const totalsLabel = totalsName ? totalsName : {\n        singular: i18n.translate('Polaris.DataTable.totalRowHeading'),\n        plural: i18n.translate('Polaris.DataTable.totalsRowHeading')\n      };\n      return totals && totals.filter(total => total !== '').length > 1 ? totalsLabel.plural : totalsLabel.singular;\n    };\n    // eslint-disable-next-line @shopify/react-no-multiple-render-methods\n    this.renderTotals = ({\n      total,\n      index\n    }) => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const id = `totals-cell-${index}`;\n      const {\n        truncate = false,\n        verticalAlign,\n        columnContentTypes\n      } = this.props;\n      let content;\n      let contentType;\n      if (index === 0) {\n        content = this.totalsRowHeading();\n      }\n      if (total !== '' && index > 0) {\n        contentType = columnContentTypes[index];\n        content = total;\n      }\n      const totalInFooter = this.props.showTotalsInFooter;\n      return /*#__PURE__*/React.createElement(Cell, {\n        total: true,\n        totalInFooter: totalInFooter,\n        nthColumn: index <= fixedFirstColumns - 1,\n        firstColumn: index === 0,\n        key: id,\n        content: content,\n        contentType: contentType,\n        truncate: truncate,\n        verticalAlign: verticalAlign\n      });\n    };\n    this.getColSpan = (rowLength, headingsLength, contentTypesLength, cellIndex) => {\n      // We decided that it shouldn't be possible to have fixed \"n\" columns and content that spans multiple columns\n      const fixedFirstColumns = this.fixedFirstColumns();\n      if (fixedFirstColumns) {\n        return 1;\n      }\n      const rowLen = rowLength ? rowLength : 1;\n      const colLen = headingsLength ? headingsLength : contentTypesLength;\n      const colSpan = Math.floor(colLen / rowLen);\n      const remainder = colLen % rowLen;\n      return cellIndex === 0 ? colSpan + remainder : colSpan;\n    };\n    this.defaultRenderRow = ({\n      row,\n      index,\n      inFixedNthColumn,\n      rowHeights\n    }) => {\n      const {\n        columnContentTypes,\n        truncate = false,\n        verticalAlign,\n        hoverable = true,\n        headings\n      } = this.props;\n      const {\n        condensed\n      } = this.state;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const className = classNames(styles.TableRow, hoverable && styles.hoverable);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: `row-${index}`,\n        className: className,\n        onMouseEnter: this.handleHover(index),\n        onMouseLeave: this.handleHover()\n      }, row.map((content, cellIndex) => {\n        const hovered = index === this.state.rowHovered;\n        const id = `cell-${cellIndex}-row-${index}`;\n        const colSpan = this.getColSpan(row.length, headings.length, columnContentTypes.length, cellIndex);\n        return /*#__PURE__*/React.createElement(Cell, {\n          key: id,\n          content: content,\n          contentType: columnContentTypes[cellIndex],\n          nthColumn: cellIndex <= fixedFirstColumns - 1,\n          firstColumn: cellIndex === 0,\n          truncate: truncate,\n          verticalAlign: verticalAlign,\n          colSpan: colSpan,\n          hovered: hovered,\n          style: rowHeights ? {\n            height: `${rowHeights[index]}px`\n          } : {},\n          inFixedNthColumn: condensed && inFixedNthColumn\n        });\n      }));\n    };\n    this.defaultOnSort = headingIndex => {\n      const {\n        onSort,\n        defaultSortDirection = 'ascending',\n        initialSortColumnIndex\n      } = this.props;\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex\n      } = this.state;\n      let newSortDirection = defaultSortDirection;\n      if (sortedColumnIndex === headingIndex) {\n        newSortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n      }\n      const handleSort = () => {\n        this.setState({\n          sortDirection: newSortDirection,\n          sortedColumnIndex: headingIndex\n        }, () => {\n          if (onSort) {\n            onSort(headingIndex, newSortDirection);\n          }\n        });\n      };\n      return handleSort;\n    };\n  }\n  componentDidMount() {\n    // We need to defer the calculation in development so the styles have time to be injected.\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.handleResize();\n      }, 10);\n    } else {\n      this.handleResize();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (isEqual(prevProps, this.props)) {\n      return;\n    }\n    this.handleResize();\n  }\n  componentWillUnmount() {\n    this.handleResize.cancel();\n  }\n  render() {\n    const {\n      headings,\n      totals,\n      showTotalsInFooter,\n      rows,\n      footerContent,\n      hideScrollIndicator = false,\n      increasedTableDensity = false,\n      hasZebraStripingOnData = false,\n      stickyHeader = false,\n      hasFixedFirstColumn: fixedFirstColumn = false,\n      pagination\n    } = this.props;\n    const {\n      condensed,\n      columnVisibilityData,\n      isScrolledFarthestLeft,\n      isScrolledFarthestRight\n    } = this.state;\n    if (fixedFirstColumn && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn('Deprecation: The `hasFixedFirstColumn` prop on the `DataTable` has been deprecated. Use fixedFirstColumns={n} instead.');\n    }\n    const fixedFirstColumns = this.fixedFirstColumns();\n    const rowCountIsEven = rows.length % 2 === 0;\n    const className = classNames(styles.DataTable, condensed && styles.condensed, totals && styles.ShowTotals, showTotalsInFooter && styles.ShowTotalsInFooter, hasZebraStripingOnData && styles.ZebraStripingOnData, hasZebraStripingOnData && rowCountIsEven && styles.RowCountIsEven);\n    const wrapperClassName = classNames(styles.TableWrapper, condensed && styles.condensed, increasedTableDensity && styles.IncreasedTableDensity, stickyHeader && styles.StickyHeaderEnabled);\n    const headingMarkup = /*#__PURE__*/React.createElement(\"tr\", null, headings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: false,\n      inStickyHeader: false\n    })));\n    const totalsMarkup = totals ? /*#__PURE__*/React.createElement(\"tr\", null, totals.map((total, index) => this.renderTotals({\n      total,\n      index\n    }))) : null;\n    const nthColumns = rows.map(row => row.slice(0, fixedFirstColumns));\n    const nthHeadings = headings.slice(0, fixedFirstColumns);\n    const nthTotals = totals?.slice(0, fixedFirstColumns);\n    const tableHeaderRows = this.table.current?.children[0].childNodes;\n    const tableBodyRows = this.table.current?.children[1].childNodes;\n    const headerRowHeights = getRowClientHeights(tableHeaderRows);\n    const bodyRowHeights = getRowClientHeights(tableBodyRows);\n    const fixedNthColumnMarkup = condensed && fixedFirstColumns !== 0 && /*#__PURE__*/React.createElement(\"table\", {\n      className: classNames(styles.FixedFirstColumn, !isScrolledFarthestLeft && styles.separate),\n      style: {\n        width: `${columnVisibilityData[fixedFirstColumns - 1]?.rightEdge}px`\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[0]}px`\n      }\n    }, nthHeadings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: true,\n      inStickyHeader: false\n    }))), totals && !showTotalsInFooter && /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[1]}px`\n      }\n    }, nthTotals?.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))), /*#__PURE__*/React.createElement(\"tbody\", null, nthColumns.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: true,\n      rowHeights: bodyRowHeights\n    }))), totals && showTotalsInFooter && /*#__PURE__*/React.createElement(\"tfoot\", null, /*#__PURE__*/React.createElement(\"tr\", null, nthTotals?.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))));\n    const bodyMarkup = rows.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: false\n    }));\n    const footerMarkup = footerContent ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Footer\n    }, footerContent) : null;\n    const paginationMarkup = pagination ? /*#__PURE__*/React.createElement(Pagination, Object.assign({\n      type: \"table\"\n    }, pagination)) : null;\n    const headerTotalsMarkup = !showTotalsInFooter ? totalsMarkup : null;\n    const footerTotalsMarkup = showTotalsInFooter ? /*#__PURE__*/React.createElement(\"tfoot\", null, totalsMarkup) : null;\n    const navigationMarkup = location => hideScrollIndicator ? null : /*#__PURE__*/React.createElement(Navigation, {\n      columnVisibilityData: columnVisibilityData,\n      isScrolledFarthestLeft: isScrolledFarthestLeft,\n      isScrolledFarthestRight: isScrolledFarthestRight,\n      navigateTableLeft: this.navigateTable('left'),\n      navigateTableRight: this.navigateTable('right'),\n      fixedFirstColumns: fixedFirstColumns,\n      setRef: ref => {\n        if (location === 'header') {\n          this.headerNav = ref;\n        } else if (location === 'sticky') {\n          this.stickyNav = ref;\n        }\n      }\n    });\n    const stickyHeaderMarkup = stickyHeader ? /*#__PURE__*/React.createElement(AfterInitialMount, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyHeaderWrapper,\n      role: \"presentation\"\n    }, /*#__PURE__*/React.createElement(Sticky, {\n      boundingElement: this.dataTable.current,\n      onStickyChange: isSticky => {\n        this.changeHeadingFocus();\n        this.stickyHeaderActive = isSticky;\n      }\n    }, isSticky => {\n      const stickyHeaderInnerClassNames = classNames(styles.StickyHeaderInner, isSticky && styles['StickyHeaderInner-isSticky']);\n      const stickyHeaderTableClassNames = classNames(styles.StickyHeaderTable, !isScrolledFarthestLeft && styles.separate);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: stickyHeaderInnerClassNames\n      }, /*#__PURE__*/React.createElement(\"div\", null, navigationMarkup('sticky')), /*#__PURE__*/React.createElement(\"table\", {\n        className: stickyHeaderTableClassNames,\n        ref: this.stickyTable\n      }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n        className: styles.StickyTableHeadingsRow\n      }, headings.map((heading, index) => {\n        return this.renderHeading({\n          heading,\n          headingIndex: index,\n          inFixedNthColumn: Boolean(index <= fixedFirstColumns - 1 && fixedFirstColumns),\n          inStickyHeader: true\n        });\n      })))));\n    }))) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: wrapperClassName,\n      ref: this.dataTable\n    }, stickyHeaderMarkup, navigationMarkup('header'), /*#__PURE__*/React.createElement(\"div\", {\n      className: className\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ScrollContainer,\n      ref: this.scrollContainer\n    }, /*#__PURE__*/React.createElement(EventListener, {\n      event: \"resize\",\n      handler: this.handleResize\n    }), /*#__PURE__*/React.createElement(EventListener, {\n      capture: true,\n      passive: true,\n      event: \"scroll\",\n      handler: this.scrollListener\n    }), fixedNthColumnMarkup, /*#__PURE__*/React.createElement(\"table\", {\n      className: styles.Table,\n      ref: this.table\n    }, /*#__PURE__*/React.createElement(\"thead\", null, headingMarkup, headerTotalsMarkup), /*#__PURE__*/React.createElement(\"tbody\", null, bodyMarkup), footerTotalsMarkup)), paginationMarkup, footerMarkup));\n  }\n  fixedFirstColumns() {\n    const {\n      hasFixedFirstColumn,\n      fixedFirstColumns = 0,\n      headings\n    } = this.props;\n    const numberOfFixedFirstColumns = hasFixedFirstColumn && !fixedFirstColumns ? 1 : fixedFirstColumns;\n    if (numberOfFixedFirstColumns >= headings.length) {\n      return 0;\n    }\n    return numberOfFixedFirstColumns;\n  }\n}\nfunction DataTable(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(DataTableInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\nexport { DataTable };","map":{"version":3,"names":["React","PureComponent","createRef","isEqual","debounce","classNames","headerCell","measureColumn","getPrevAndCurrentColumns","styles","Cell","Pagination","AfterInitialMount","Sticky","Navigation","useI18n","EventListener","getRowClientHeights","rows","heights","forEach","row","push","clientHeight","DataTableInner","constructor","args","state","condensed","columnVisibilityData","isScrolledFarthestLeft","isScrolledFarthestRight","rowHovered","undefined","dataTable","scrollContainer","table","stickyTable","stickyNav","headerNav","tableHeadings","stickyHeadings","tableHeadingWidths","stickyHeaderActive","scrollStopTimer","handleResize","current","scrollWidth","clientWidth","setState","calculateColumnVisibilityData","setCellRef","ref","index","inStickyHeader","button","querySelector","addEventListener","handleHeaderButtonFocus","changeHeadingFocus","stickyFocusedItemIndex","findIndex","item","document","activeElement","parentElement","tableFocusedItemIndex","arrowsInStickyNav","querySelectorAll","arrowsInHeaderNav","stickyFocusedNavIndex","headerFocusedNavIndex","style","visibility","focus","removeProperty","fixedFirstColumns","stickyHeader","props","headerCells","selector","rightMostHeader","nthColumnWidth","offsetLeft","offsetWidth","length","firstVisibleColumnIndex","tableLeftVisibleEdge","scrollLeft","tableRightVisibleEdge","tableData","map","lastColumn","rightEdge","previousColumn","currentColumn","event","target","currentCell","parentNode","tableScrollLeft","tableViewableWidth","tableRightEdge","currentColumnLeftEdge","currentColumnRightEdge","stickyHeaderScrolling","scrollListener","clearTimeout","setTimeout","prevState","handleHover","handleFocus","fixedNthColumn","desiredScrollLeft","navigateTable","direction","prevWidths","width","handleScroll","newScrollLeft","leftEdge","requestAnimationFrame","renderHeading","heading","headingIndex","inFixedNthColumn","sortable","truncate","columnContentTypes","defaultSortDirection","initialSortColumnIndex","verticalAlign","firstColumnMinWidth","sortDirection","sortedColumnIndex","sortableHeadingProps","headingCellId","stickyHeaderId","id","isSortable","isSorted","sorted","onSort","defaultOnSort","stickyCellWidth","fixedCellVisible","cellProps","header","stickyHeadingCell","content","contentType","nthColumn","createElement","Object","assign","key","setRef","Boolean","lastFixedFirstColumn","left","totalsRowHeading","i18n","totals","totalsName","totalsLabel","singular","translate","plural","filter","total","renderTotals","totalInFooter","showTotalsInFooter","firstColumn","getColSpan","rowLength","headingsLength","contentTypesLength","cellIndex","rowLen","colLen","colSpan","Math","floor","remainder","defaultRenderRow","rowHeights","hoverable","headings","className","TableRow","onMouseEnter","onMouseLeave","hovered","height","newSortDirection","handleSort","componentDidMount","process","env","NODE_ENV","componentDidUpdate","prevProps","componentWillUnmount","cancel","render","footerContent","hideScrollIndicator","increasedTableDensity","hasZebraStripingOnData","hasFixedFirstColumn","fixedFirstColumn","pagination","console","warn","rowCountIsEven","DataTable","ShowTotals","ShowTotalsInFooter","ZebraStripingOnData","RowCountIsEven","wrapperClassName","TableWrapper","IncreasedTableDensity","StickyHeaderEnabled","headingMarkup","totalsMarkup","nthColumns","slice","nthHeadings","nthTotals","tableHeaderRows","children","childNodes","tableBodyRows","headerRowHeights","bodyRowHeights","fixedNthColumnMarkup","FixedFirstColumn","separate","bodyMarkup","footerMarkup","Footer","paginationMarkup","type","headerTotalsMarkup","footerTotalsMarkup","navigationMarkup","location","navigateTableLeft","navigateTableRight","stickyHeaderMarkup","StickyHeaderWrapper","role","boundingElement","onStickyChange","isSticky","stickyHeaderInnerClassNames","StickyHeaderInner","stickyHeaderTableClassNames","StickyHeaderTable","StickyTableHeadingsRow","ScrollContainer","handler","capture","passive","Table","numberOfFixedFirstColumns"],"sources":["/Users/shannondutton/Documents/Code Projects/ProductCreator/node_modules/@shopify/polaris/build/esm/components/DataTable/DataTable.js"],"sourcesContent":["import React, { PureComponent, createRef } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { debounce } from '../../utilities/debounce.js';\nimport { classNames } from '../../utilities/css.js';\nimport { headerCell } from '../shared.js';\nimport { measureColumn, getPrevAndCurrentColumns } from './utilities.js';\nimport styles from './DataTable.css.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Pagination } from '../Pagination/Pagination.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { Navigation } from './components/Navigation/Navigation.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { EventListener } from '../EventListener/EventListener.js';\n\nconst getRowClientHeights = rows => {\n  const heights = [];\n  if (!rows) {\n    return heights;\n  }\n  rows.forEach(row => {\n    heights.push(row.clientHeight);\n  });\n  return heights;\n};\nclass DataTableInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      condensed: false,\n      columnVisibilityData: [],\n      isScrolledFarthestLeft: true,\n      isScrolledFarthestRight: false,\n      rowHovered: undefined\n    };\n    this.dataTable = /*#__PURE__*/createRef();\n    this.scrollContainer = /*#__PURE__*/createRef();\n    this.table = /*#__PURE__*/createRef();\n    this.stickyTable = /*#__PURE__*/createRef();\n    this.stickyNav = null;\n    this.headerNav = null;\n    this.tableHeadings = [];\n    this.stickyHeadings = [];\n    this.tableHeadingWidths = [];\n    this.stickyHeaderActive = false;\n    this.scrollStopTimer = null;\n    this.handleResize = debounce(() => {\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        }\n      } = this;\n      let condensed = false;\n      if (table && scrollContainer) {\n        // safari sometimes incorrectly sets the scrollwidth too large by 1px\n        condensed = table.scrollWidth > scrollContainer.clientWidth + 1;\n      }\n      this.setState({\n        condensed,\n        ...this.calculateColumnVisibilityData(condensed)\n      });\n    });\n    this.setCellRef = ({\n      ref,\n      index,\n      inStickyHeader\n    }) => {\n      if (ref == null) {\n        return;\n      }\n      if (inStickyHeader) {\n        this.stickyHeadings[index] = ref;\n        const button = ref.querySelector('button');\n        if (button == null) {\n          return;\n        }\n        button.addEventListener('focus', this.handleHeaderButtonFocus);\n      } else {\n        this.tableHeadings[index] = ref;\n        this.tableHeadingWidths[index] = ref.clientWidth;\n      }\n    };\n    this.changeHeadingFocus = () => {\n      const {\n        tableHeadings,\n        stickyHeadings,\n        stickyNav,\n        headerNav\n      } = this;\n      const stickyFocusedItemIndex = stickyHeadings.findIndex(item => item === document.activeElement?.parentElement);\n      const tableFocusedItemIndex = tableHeadings.findIndex(item => item === document.activeElement?.parentElement);\n      const arrowsInStickyNav = stickyNav?.querySelectorAll('button');\n      const arrowsInHeaderNav = headerNav?.querySelectorAll('button');\n      let stickyFocusedNavIndex = -1;\n      arrowsInStickyNav?.forEach((item, index) => {\n        if (item === document.activeElement) {\n          stickyFocusedNavIndex = index;\n        }\n      });\n      let headerFocusedNavIndex = -1;\n      arrowsInHeaderNav?.forEach((item, index) => {\n        if (item === document.activeElement) {\n          headerFocusedNavIndex = index;\n        }\n      });\n      if (stickyFocusedItemIndex < 0 && tableFocusedItemIndex < 0 && stickyFocusedNavIndex < 0 && headerFocusedNavIndex < 0) {\n        return null;\n      }\n      let button;\n      if (stickyFocusedItemIndex >= 0) {\n        button = tableHeadings[stickyFocusedItemIndex].querySelector('button');\n      } else if (tableFocusedItemIndex >= 0) {\n        button = stickyHeadings[tableFocusedItemIndex].querySelector('button');\n      }\n      if (stickyFocusedNavIndex >= 0) {\n        button = arrowsInHeaderNav?.[stickyFocusedNavIndex];\n      } else if (headerFocusedNavIndex >= 0) {\n        button = arrowsInStickyNav?.[headerFocusedNavIndex];\n      }\n      if (button == null) {\n        return null;\n      }\n      button.style.visibility = 'visible';\n      button.focus();\n      button.style.removeProperty('visibility');\n    };\n    this.calculateColumnVisibilityData = condensed => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        },\n        dataTable: {\n          current: dataTable\n        }\n      } = this;\n      const {\n        stickyHeader\n      } = this.props;\n      if ((stickyHeader || condensed) && table && scrollContainer && dataTable) {\n        const headerCells = table.querySelectorAll(headerCell.selector);\n        const rightMostHeader = headerCells[fixedFirstColumns - 1];\n        const nthColumnWidth = fixedFirstColumns ? rightMostHeader.offsetLeft + rightMostHeader.offsetWidth : 0;\n        if (headerCells.length > 0) {\n          const firstVisibleColumnIndex = headerCells.length - 1;\n          const tableLeftVisibleEdge = scrollContainer.scrollLeft + nthColumnWidth;\n          const tableRightVisibleEdge = scrollContainer.scrollLeft + dataTable.offsetWidth;\n          const tableData = {\n            firstVisibleColumnIndex,\n            tableLeftVisibleEdge,\n            tableRightVisibleEdge\n          };\n          const columnVisibilityData = [...headerCells].map(measureColumn(tableData));\n          const lastColumn = columnVisibilityData[columnVisibilityData.length - 1];\n          const isScrolledFarthestLeft = fixedFirstColumns ? tableLeftVisibleEdge === nthColumnWidth : tableLeftVisibleEdge === 0;\n          return {\n            columnVisibilityData,\n            ...getPrevAndCurrentColumns(tableData, columnVisibilityData),\n            isScrolledFarthestLeft,\n            isScrolledFarthestRight: lastColumn.rightEdge <= tableRightVisibleEdge\n          };\n        }\n      }\n      return {\n        columnVisibilityData: [],\n        previousColumn: undefined,\n        currentColumn: undefined\n      };\n    };\n    this.handleHeaderButtonFocus = event => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      if (this.scrollContainer.current == null || event.target == null || this.state.columnVisibilityData.length === 0) {\n        return;\n      }\n      const target = event.target;\n      const currentCell = target.parentNode;\n      const tableScrollLeft = this.scrollContainer.current.scrollLeft;\n      const tableViewableWidth = this.scrollContainer.current.offsetWidth;\n      const tableRightEdge = tableScrollLeft + tableViewableWidth;\n      const nthColumnWidth = this.state.columnVisibilityData.length > 0 ? this.state.columnVisibilityData[fixedFirstColumns]?.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const currentColumnRightEdge = currentCell.offsetLeft + currentCell.offsetWidth;\n      if (tableScrollLeft > currentColumnLeftEdge - nthColumnWidth) {\n        this.scrollContainer.current.scrollLeft = currentColumnLeftEdge - nthColumnWidth;\n      }\n      if (currentColumnRightEdge > tableRightEdge) {\n        this.scrollContainer.current.scrollLeft = currentColumnRightEdge - tableViewableWidth;\n      }\n    };\n    this.stickyHeaderScrolling = () => {\n      const {\n        current: stickyTable\n      } = this.stickyTable;\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n      if (stickyTable == null || scrollContainer == null) {\n        return;\n      }\n      stickyTable.scrollLeft = scrollContainer.scrollLeft;\n    };\n    this.scrollListener = () => {\n      if (this.scrollStopTimer) {\n        clearTimeout(this.scrollStopTimer);\n      }\n      this.scrollStopTimer = setTimeout(() => {\n        this.setState(prevState => ({\n          ...this.calculateColumnVisibilityData(prevState.condensed)\n        }));\n      }, 100);\n      this.setState({\n        isScrolledFarthestLeft: this.scrollContainer.current?.scrollLeft === 0\n      });\n      if (this.props.stickyHeader && this.stickyHeaderActive) {\n        this.stickyHeaderScrolling();\n      }\n    };\n    this.handleHover = row => () => {\n      this.setState({\n        rowHovered: row\n      });\n    };\n    this.handleFocus = event => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      if (this.scrollContainer.current == null || event.target == null) {\n        return;\n      }\n      const currentCell = event.target.parentNode;\n      const fixedNthColumn = this.props;\n      const nthColumnWidth = fixedNthColumn ? this.state.columnVisibilityData[fixedFirstColumns]?.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const desiredScrollLeft = currentColumnLeftEdge - nthColumnWidth;\n      if (this.scrollContainer.current.scrollLeft > desiredScrollLeft) {\n        this.scrollContainer.current.scrollLeft = desiredScrollLeft;\n      }\n\n      // focus fixed first column if present\n    };\n    this.navigateTable = direction => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        currentColumn,\n        previousColumn\n      } = this.state;\n      const nthColumnWidth = this.state.columnVisibilityData[fixedFirstColumns - 1]?.rightEdge;\n      if (!currentColumn || !previousColumn) {\n        return;\n      }\n      let prevWidths = 0;\n      for (let index = 0; index < currentColumn.index; index++) {\n        prevWidths += this.state.columnVisibilityData[index].width;\n      }\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n      const handleScroll = () => {\n        let newScrollLeft = 0;\n        if (fixedFirstColumns) {\n          newScrollLeft = direction === 'right' ? prevWidths - nthColumnWidth + currentColumn.width : prevWidths - previousColumn.width - nthColumnWidth;\n        } else {\n          newScrollLeft = direction === 'right' ? currentColumn.rightEdge : previousColumn.leftEdge;\n        }\n        if (scrollContainer) {\n          scrollContainer.scrollLeft = newScrollLeft;\n          requestAnimationFrame(() => {\n            this.setState(prevState => ({\n              ...this.calculateColumnVisibilityData(prevState.condensed)\n            }));\n          });\n        }\n      };\n      return handleScroll;\n    };\n    // eslint-disable-next-line @shopify/react-no-multiple-render-methods\n    this.renderHeading = ({\n      heading,\n      headingIndex,\n      inFixedNthColumn,\n      inStickyHeader\n    }) => {\n      const {\n        sortable,\n        truncate = false,\n        columnContentTypes,\n        defaultSortDirection,\n        initialSortColumnIndex = 0,\n        verticalAlign,\n        firstColumnMinWidth\n      } = this.props;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex,\n        isScrolledFarthestLeft\n      } = this.state;\n      let sortableHeadingProps;\n      const headingCellId = `heading-cell-${headingIndex}`;\n      const stickyHeaderId = `stickyheader-${headingIndex}`;\n      const id = inStickyHeader ? stickyHeaderId : headingCellId;\n      if (sortable) {\n        const isSortable = sortable[headingIndex];\n        const isSorted = isSortable && sortedColumnIndex === headingIndex;\n        const direction = isSorted ? sortDirection : 'none';\n        sortableHeadingProps = {\n          defaultSortDirection,\n          sorted: isSorted,\n          sortable: isSortable,\n          sortDirection: direction,\n          onSort: this.defaultOnSort(headingIndex),\n          fixedNthColumn: fixedFirstColumns,\n          inFixedNthColumn: fixedFirstColumns\n        };\n      }\n      const stickyCellWidth = inStickyHeader ? this.tableHeadingWidths[headingIndex] : undefined;\n      const fixedCellVisible = !isScrolledFarthestLeft;\n      const cellProps = {\n        header: true,\n        stickyHeadingCell: inStickyHeader,\n        content: heading,\n        contentType: columnContentTypes[headingIndex],\n        nthColumn: headingIndex < fixedFirstColumns,\n        fixedFirstColumns,\n        truncate,\n        headingIndex,\n        ...sortableHeadingProps,\n        verticalAlign,\n        handleFocus: this.handleFocus,\n        stickyCellWidth,\n        fixedCellVisible,\n        firstColumnMinWidth\n      };\n      if (inFixedNthColumn && inStickyHeader) {\n        // need two cells for fixed first column (actual cell and the overlapping one)\n        // the sticky cell is second so that the index is associated with the sticky\n        // cell and not the underlying one. This helps `changeHeadingFocus` to put\n        // focus on the right cell when switching from sticky to non-sticky headers\n        return [/*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: id\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: false\n        })), /*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: `${id}-sticky`\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: Boolean(fixedFirstColumns),\n          lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n          style: {\n            left: this.state.columnVisibilityData[headingIndex]?.leftEdge\n          }\n        }))];\n      }\n      return /*#__PURE__*/React.createElement(Cell, Object.assign({\n        key: id\n      }, cellProps, {\n        setRef: ref => {\n          this.setCellRef({\n            ref,\n            index: headingIndex,\n            inStickyHeader\n          });\n        },\n        lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n        inFixedNthColumn: inFixedNthColumn\n      }));\n    };\n    this.totalsRowHeading = () => {\n      const {\n        i18n,\n        totals,\n        totalsName\n      } = this.props;\n      const totalsLabel = totalsName ? totalsName : {\n        singular: i18n.translate('Polaris.DataTable.totalRowHeading'),\n        plural: i18n.translate('Polaris.DataTable.totalsRowHeading')\n      };\n      return totals && totals.filter(total => total !== '').length > 1 ? totalsLabel.plural : totalsLabel.singular;\n    };\n    // eslint-disable-next-line @shopify/react-no-multiple-render-methods\n    this.renderTotals = ({\n      total,\n      index\n    }) => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const id = `totals-cell-${index}`;\n      const {\n        truncate = false,\n        verticalAlign,\n        columnContentTypes\n      } = this.props;\n      let content;\n      let contentType;\n      if (index === 0) {\n        content = this.totalsRowHeading();\n      }\n      if (total !== '' && index > 0) {\n        contentType = columnContentTypes[index];\n        content = total;\n      }\n      const totalInFooter = this.props.showTotalsInFooter;\n      return /*#__PURE__*/React.createElement(Cell, {\n        total: true,\n        totalInFooter: totalInFooter,\n        nthColumn: index <= fixedFirstColumns - 1,\n        firstColumn: index === 0,\n        key: id,\n        content: content,\n        contentType: contentType,\n        truncate: truncate,\n        verticalAlign: verticalAlign\n      });\n    };\n    this.getColSpan = (rowLength, headingsLength, contentTypesLength, cellIndex) => {\n      // We decided that it shouldn't be possible to have fixed \"n\" columns and content that spans multiple columns\n      const fixedFirstColumns = this.fixedFirstColumns();\n      if (fixedFirstColumns) {\n        return 1;\n      }\n      const rowLen = rowLength ? rowLength : 1;\n      const colLen = headingsLength ? headingsLength : contentTypesLength;\n      const colSpan = Math.floor(colLen / rowLen);\n      const remainder = colLen % rowLen;\n      return cellIndex === 0 ? colSpan + remainder : colSpan;\n    };\n    this.defaultRenderRow = ({\n      row,\n      index,\n      inFixedNthColumn,\n      rowHeights\n    }) => {\n      const {\n        columnContentTypes,\n        truncate = false,\n        verticalAlign,\n        hoverable = true,\n        headings\n      } = this.props;\n      const {\n        condensed\n      } = this.state;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const className = classNames(styles.TableRow, hoverable && styles.hoverable);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: `row-${index}`,\n        className: className,\n        onMouseEnter: this.handleHover(index),\n        onMouseLeave: this.handleHover()\n      }, row.map((content, cellIndex) => {\n        const hovered = index === this.state.rowHovered;\n        const id = `cell-${cellIndex}-row-${index}`;\n        const colSpan = this.getColSpan(row.length, headings.length, columnContentTypes.length, cellIndex);\n        return /*#__PURE__*/React.createElement(Cell, {\n          key: id,\n          content: content,\n          contentType: columnContentTypes[cellIndex],\n          nthColumn: cellIndex <= fixedFirstColumns - 1,\n          firstColumn: cellIndex === 0,\n          truncate: truncate,\n          verticalAlign: verticalAlign,\n          colSpan: colSpan,\n          hovered: hovered,\n          style: rowHeights ? {\n            height: `${rowHeights[index]}px`\n          } : {},\n          inFixedNthColumn: condensed && inFixedNthColumn\n        });\n      }));\n    };\n    this.defaultOnSort = headingIndex => {\n      const {\n        onSort,\n        defaultSortDirection = 'ascending',\n        initialSortColumnIndex\n      } = this.props;\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex\n      } = this.state;\n      let newSortDirection = defaultSortDirection;\n      if (sortedColumnIndex === headingIndex) {\n        newSortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n      }\n      const handleSort = () => {\n        this.setState({\n          sortDirection: newSortDirection,\n          sortedColumnIndex: headingIndex\n        }, () => {\n          if (onSort) {\n            onSort(headingIndex, newSortDirection);\n          }\n        });\n      };\n      return handleSort;\n    };\n  }\n  componentDidMount() {\n    // We need to defer the calculation in development so the styles have time to be injected.\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.handleResize();\n      }, 10);\n    } else {\n      this.handleResize();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (isEqual(prevProps, this.props)) {\n      return;\n    }\n    this.handleResize();\n  }\n  componentWillUnmount() {\n    this.handleResize.cancel();\n  }\n  render() {\n    const {\n      headings,\n      totals,\n      showTotalsInFooter,\n      rows,\n      footerContent,\n      hideScrollIndicator = false,\n      increasedTableDensity = false,\n      hasZebraStripingOnData = false,\n      stickyHeader = false,\n      hasFixedFirstColumn: fixedFirstColumn = false,\n      pagination\n    } = this.props;\n    const {\n      condensed,\n      columnVisibilityData,\n      isScrolledFarthestLeft,\n      isScrolledFarthestRight\n    } = this.state;\n    if (fixedFirstColumn && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn('Deprecation: The `hasFixedFirstColumn` prop on the `DataTable` has been deprecated. Use fixedFirstColumns={n} instead.');\n    }\n    const fixedFirstColumns = this.fixedFirstColumns();\n    const rowCountIsEven = rows.length % 2 === 0;\n    const className = classNames(styles.DataTable, condensed && styles.condensed, totals && styles.ShowTotals, showTotalsInFooter && styles.ShowTotalsInFooter, hasZebraStripingOnData && styles.ZebraStripingOnData, hasZebraStripingOnData && rowCountIsEven && styles.RowCountIsEven);\n    const wrapperClassName = classNames(styles.TableWrapper, condensed && styles.condensed, increasedTableDensity && styles.IncreasedTableDensity, stickyHeader && styles.StickyHeaderEnabled);\n    const headingMarkup = /*#__PURE__*/React.createElement(\"tr\", null, headings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: false,\n      inStickyHeader: false\n    })));\n    const totalsMarkup = totals ? /*#__PURE__*/React.createElement(\"tr\", null, totals.map((total, index) => this.renderTotals({\n      total,\n      index\n    }))) : null;\n    const nthColumns = rows.map(row => row.slice(0, fixedFirstColumns));\n    const nthHeadings = headings.slice(0, fixedFirstColumns);\n    const nthTotals = totals?.slice(0, fixedFirstColumns);\n    const tableHeaderRows = this.table.current?.children[0].childNodes;\n    const tableBodyRows = this.table.current?.children[1].childNodes;\n    const headerRowHeights = getRowClientHeights(tableHeaderRows);\n    const bodyRowHeights = getRowClientHeights(tableBodyRows);\n    const fixedNthColumnMarkup = condensed && fixedFirstColumns !== 0 && /*#__PURE__*/React.createElement(\"table\", {\n      className: classNames(styles.FixedFirstColumn, !isScrolledFarthestLeft && styles.separate),\n      style: {\n        width: `${columnVisibilityData[fixedFirstColumns - 1]?.rightEdge}px`\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[0]}px`\n      }\n    }, nthHeadings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: true,\n      inStickyHeader: false\n    }))), totals && !showTotalsInFooter && /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[1]}px`\n      }\n    }, nthTotals?.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))), /*#__PURE__*/React.createElement(\"tbody\", null, nthColumns.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: true,\n      rowHeights: bodyRowHeights\n    }))), totals && showTotalsInFooter && /*#__PURE__*/React.createElement(\"tfoot\", null, /*#__PURE__*/React.createElement(\"tr\", null, nthTotals?.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))));\n    const bodyMarkup = rows.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: false\n    }));\n    const footerMarkup = footerContent ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Footer\n    }, footerContent) : null;\n    const paginationMarkup = pagination ? /*#__PURE__*/React.createElement(Pagination, Object.assign({\n      type: \"table\"\n    }, pagination)) : null;\n    const headerTotalsMarkup = !showTotalsInFooter ? totalsMarkup : null;\n    const footerTotalsMarkup = showTotalsInFooter ? /*#__PURE__*/React.createElement(\"tfoot\", null, totalsMarkup) : null;\n    const navigationMarkup = location => hideScrollIndicator ? null : /*#__PURE__*/React.createElement(Navigation, {\n      columnVisibilityData: columnVisibilityData,\n      isScrolledFarthestLeft: isScrolledFarthestLeft,\n      isScrolledFarthestRight: isScrolledFarthestRight,\n      navigateTableLeft: this.navigateTable('left'),\n      navigateTableRight: this.navigateTable('right'),\n      fixedFirstColumns: fixedFirstColumns,\n      setRef: ref => {\n        if (location === 'header') {\n          this.headerNav = ref;\n        } else if (location === 'sticky') {\n          this.stickyNav = ref;\n        }\n      }\n    });\n    const stickyHeaderMarkup = stickyHeader ? /*#__PURE__*/React.createElement(AfterInitialMount, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyHeaderWrapper,\n      role: \"presentation\"\n    }, /*#__PURE__*/React.createElement(Sticky, {\n      boundingElement: this.dataTable.current,\n      onStickyChange: isSticky => {\n        this.changeHeadingFocus();\n        this.stickyHeaderActive = isSticky;\n      }\n    }, isSticky => {\n      const stickyHeaderInnerClassNames = classNames(styles.StickyHeaderInner, isSticky && styles['StickyHeaderInner-isSticky']);\n      const stickyHeaderTableClassNames = classNames(styles.StickyHeaderTable, !isScrolledFarthestLeft && styles.separate);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: stickyHeaderInnerClassNames\n      }, /*#__PURE__*/React.createElement(\"div\", null, navigationMarkup('sticky')), /*#__PURE__*/React.createElement(\"table\", {\n        className: stickyHeaderTableClassNames,\n        ref: this.stickyTable\n      }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n        className: styles.StickyTableHeadingsRow\n      }, headings.map((heading, index) => {\n        return this.renderHeading({\n          heading,\n          headingIndex: index,\n          inFixedNthColumn: Boolean(index <= fixedFirstColumns - 1 && fixedFirstColumns),\n          inStickyHeader: true\n        });\n      })))));\n    }))) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: wrapperClassName,\n      ref: this.dataTable\n    }, stickyHeaderMarkup, navigationMarkup('header'), /*#__PURE__*/React.createElement(\"div\", {\n      className: className\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ScrollContainer,\n      ref: this.scrollContainer\n    }, /*#__PURE__*/React.createElement(EventListener, {\n      event: \"resize\",\n      handler: this.handleResize\n    }), /*#__PURE__*/React.createElement(EventListener, {\n      capture: true,\n      passive: true,\n      event: \"scroll\",\n      handler: this.scrollListener\n    }), fixedNthColumnMarkup, /*#__PURE__*/React.createElement(\"table\", {\n      className: styles.Table,\n      ref: this.table\n    }, /*#__PURE__*/React.createElement(\"thead\", null, headingMarkup, headerTotalsMarkup), /*#__PURE__*/React.createElement(\"tbody\", null, bodyMarkup), footerTotalsMarkup)), paginationMarkup, footerMarkup));\n  }\n  fixedFirstColumns() {\n    const {\n      hasFixedFirstColumn,\n      fixedFirstColumns = 0,\n      headings\n    } = this.props;\n    const numberOfFixedFirstColumns = hasFixedFirstColumn && !fixedFirstColumns ? 1 : fixedFirstColumns;\n    if (numberOfFixedFirstColumns >= headings.length) {\n      return 0;\n    }\n    return numberOfFixedFirstColumns;\n  }\n}\nfunction DataTable(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(DataTableInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { DataTable };\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,QAAQ,OAAO;AACvD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,aAAa,EAAEC,wBAAwB,QAAQ,gBAAgB;AACxE,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,IAAI,QAAQ,2BAA2B;AAChD,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,iBAAiB,QAAQ,2CAA2C;AAC7E,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,OAAO,QAAQ,+BAA+B;AACvD,SAASC,aAAa,QAAQ,mCAAmC;AAEjE,MAAMC,mBAAmB,GAAGC,IAAI,IAAI;EAClC,MAAMC,OAAO,GAAG,EAAE;EAClB,IAAI,CAACD,IAAI,EAAE;IACT,OAAOC,OAAO;EAChB;EACAD,IAAI,CAACE,OAAO,CAACC,GAAG,IAAI;IAClBF,OAAO,CAACG,IAAI,CAACD,GAAG,CAACE,YAAY,CAAC;EAChC,CAAC,CAAC;EACF,OAAOJ,OAAO;AAChB,CAAC;AACD,MAAMK,cAAc,SAASvB,aAAa,CAAC;EACzCwB,WAAWA,CAAC,GAAGC,IAAI,EAAE;IACnB,KAAK,CAAC,GAAGA,IAAI,CAAC;IACd,IAAI,CAACC,KAAK,GAAG;MACXC,SAAS,EAAE,KAAK;MAChBC,oBAAoB,EAAE,EAAE;MACxBC,sBAAsB,EAAE,IAAI;MAC5BC,uBAAuB,EAAE,KAAK;MAC9BC,UAAU,EAAEC;IACd,CAAC;IACD,IAAI,CAACC,SAAS,GAAG,aAAahC,SAAS,CAAC,CAAC;IACzC,IAAI,CAACiC,eAAe,GAAG,aAAajC,SAAS,CAAC,CAAC;IAC/C,IAAI,CAACkC,KAAK,GAAG,aAAalC,SAAS,CAAC,CAAC;IACrC,IAAI,CAACmC,WAAW,GAAG,aAAanC,SAAS,CAAC,CAAC;IAC3C,IAAI,CAACoC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACC,kBAAkB,GAAG,KAAK;IAC/B,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,YAAY,GAAGzC,QAAQ,CAAC,MAAM;MACjC,MAAM;QACJgC,KAAK,EAAE;UACLU,OAAO,EAAEV;QACX,CAAC;QACDD,eAAe,EAAE;UACfW,OAAO,EAAEX;QACX;MACF,CAAC,GAAG,IAAI;MACR,IAAIP,SAAS,GAAG,KAAK;MACrB,IAAIQ,KAAK,IAAID,eAAe,EAAE;QAC5B;QACAP,SAAS,GAAGQ,KAAK,CAACW,WAAW,GAAGZ,eAAe,CAACa,WAAW,GAAG,CAAC;MACjE;MACA,IAAI,CAACC,QAAQ,CAAC;QACZrB,SAAS;QACT,GAAG,IAAI,CAACsB,6BAA6B,CAACtB,SAAS;MACjD,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAI,CAACuB,UAAU,GAAG,CAAC;MACjBC,GAAG;MACHC,KAAK;MACLC;IACF,CAAC,KAAK;MACJ,IAAIF,GAAG,IAAI,IAAI,EAAE;QACf;MACF;MACA,IAAIE,cAAc,EAAE;QAClB,IAAI,CAACb,cAAc,CAACY,KAAK,CAAC,GAAGD,GAAG;QAChC,MAAMG,MAAM,GAAGH,GAAG,CAACI,aAAa,CAAC,QAAQ,CAAC;QAC1C,IAAID,MAAM,IAAI,IAAI,EAAE;UAClB;QACF;QACAA,MAAM,CAACE,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACC,uBAAuB,CAAC;MAChE,CAAC,MAAM;QACL,IAAI,CAAClB,aAAa,CAACa,KAAK,CAAC,GAAGD,GAAG;QAC/B,IAAI,CAACV,kBAAkB,CAACW,KAAK,CAAC,GAAGD,GAAG,CAACJ,WAAW;MAClD;IACF,CAAC;IACD,IAAI,CAACW,kBAAkB,GAAG,MAAM;MAC9B,MAAM;QACJnB,aAAa;QACbC,cAAc;QACdH,SAAS;QACTC;MACF,CAAC,GAAG,IAAI;MACR,MAAMqB,sBAAsB,GAAGnB,cAAc,CAACoB,SAAS,CAACC,IAAI,IAAIA,IAAI,KAAKC,QAAQ,CAACC,aAAa,EAAEC,aAAa,CAAC;MAC/G,MAAMC,qBAAqB,GAAG1B,aAAa,CAACqB,SAAS,CAACC,IAAI,IAAIA,IAAI,KAAKC,QAAQ,CAACC,aAAa,EAAEC,aAAa,CAAC;MAC7G,MAAME,iBAAiB,GAAG7B,SAAS,EAAE8B,gBAAgB,CAAC,QAAQ,CAAC;MAC/D,MAAMC,iBAAiB,GAAG9B,SAAS,EAAE6B,gBAAgB,CAAC,QAAQ,CAAC;MAC/D,IAAIE,qBAAqB,GAAG,CAAC,CAAC;MAC9BH,iBAAiB,EAAE/C,OAAO,CAAC,CAAC0C,IAAI,EAAET,KAAK,KAAK;QAC1C,IAAIS,IAAI,KAAKC,QAAQ,CAACC,aAAa,EAAE;UACnCM,qBAAqB,GAAGjB,KAAK;QAC/B;MACF,CAAC,CAAC;MACF,IAAIkB,qBAAqB,GAAG,CAAC,CAAC;MAC9BF,iBAAiB,EAAEjD,OAAO,CAAC,CAAC0C,IAAI,EAAET,KAAK,KAAK;QAC1C,IAAIS,IAAI,KAAKC,QAAQ,CAACC,aAAa,EAAE;UACnCO,qBAAqB,GAAGlB,KAAK;QAC/B;MACF,CAAC,CAAC;MACF,IAAIO,sBAAsB,GAAG,CAAC,IAAIM,qBAAqB,GAAG,CAAC,IAAII,qBAAqB,GAAG,CAAC,IAAIC,qBAAqB,GAAG,CAAC,EAAE;QACrH,OAAO,IAAI;MACb;MACA,IAAIhB,MAAM;MACV,IAAIK,sBAAsB,IAAI,CAAC,EAAE;QAC/BL,MAAM,GAAGf,aAAa,CAACoB,sBAAsB,CAAC,CAACJ,aAAa,CAAC,QAAQ,CAAC;MACxE,CAAC,MAAM,IAAIU,qBAAqB,IAAI,CAAC,EAAE;QACrCX,MAAM,GAAGd,cAAc,CAACyB,qBAAqB,CAAC,CAACV,aAAa,CAAC,QAAQ,CAAC;MACxE;MACA,IAAIc,qBAAqB,IAAI,CAAC,EAAE;QAC9Bf,MAAM,GAAGc,iBAAiB,GAAGC,qBAAqB,CAAC;MACrD,CAAC,MAAM,IAAIC,qBAAqB,IAAI,CAAC,EAAE;QACrChB,MAAM,GAAGY,iBAAiB,GAAGI,qBAAqB,CAAC;MACrD;MACA,IAAIhB,MAAM,IAAI,IAAI,EAAE;QAClB,OAAO,IAAI;MACb;MACAA,MAAM,CAACiB,KAAK,CAACC,UAAU,GAAG,SAAS;MACnClB,MAAM,CAACmB,KAAK,CAAC,CAAC;MACdnB,MAAM,CAACiB,KAAK,CAACG,cAAc,CAAC,YAAY,CAAC;IAC3C,CAAC;IACD,IAAI,CAACzB,6BAA6B,GAAGtB,SAAS,IAAI;MAChD,MAAMgD,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC,CAAC;MAClD,MAAM;QACJxC,KAAK,EAAE;UACLU,OAAO,EAAEV;QACX,CAAC;QACDD,eAAe,EAAE;UACfW,OAAO,EAAEX;QACX,CAAC;QACDD,SAAS,EAAE;UACTY,OAAO,EAAEZ;QACX;MACF,CAAC,GAAG,IAAI;MACR,MAAM;QACJ2C;MACF,CAAC,GAAG,IAAI,CAACC,KAAK;MACd,IAAI,CAACD,YAAY,IAAIjD,SAAS,KAAKQ,KAAK,IAAID,eAAe,IAAID,SAAS,EAAE;QACxE,MAAM6C,WAAW,GAAG3C,KAAK,CAACgC,gBAAgB,CAAC9D,UAAU,CAAC0E,QAAQ,CAAC;QAC/D,MAAMC,eAAe,GAAGF,WAAW,CAACH,iBAAiB,GAAG,CAAC,CAAC;QAC1D,MAAMM,cAAc,GAAGN,iBAAiB,GAAGK,eAAe,CAACE,UAAU,GAAGF,eAAe,CAACG,WAAW,GAAG,CAAC;QACvG,IAAIL,WAAW,CAACM,MAAM,GAAG,CAAC,EAAE;UAC1B,MAAMC,uBAAuB,GAAGP,WAAW,CAACM,MAAM,GAAG,CAAC;UACtD,MAAME,oBAAoB,GAAGpD,eAAe,CAACqD,UAAU,GAAGN,cAAc;UACxE,MAAMO,qBAAqB,GAAGtD,eAAe,CAACqD,UAAU,GAAGtD,SAAS,CAACkD,WAAW;UAChF,MAAMM,SAAS,GAAG;YAChBJ,uBAAuB;YACvBC,oBAAoB;YACpBE;UACF,CAAC;UACD,MAAM5D,oBAAoB,GAAG,CAAC,GAAGkD,WAAW,CAAC,CAACY,GAAG,CAACpF,aAAa,CAACmF,SAAS,CAAC,CAAC;UAC3E,MAAME,UAAU,GAAG/D,oBAAoB,CAACA,oBAAoB,CAACwD,MAAM,GAAG,CAAC,CAAC;UACxE,MAAMvD,sBAAsB,GAAG8C,iBAAiB,GAAGW,oBAAoB,KAAKL,cAAc,GAAGK,oBAAoB,KAAK,CAAC;UACvH,OAAO;YACL1D,oBAAoB;YACpB,GAAGrB,wBAAwB,CAACkF,SAAS,EAAE7D,oBAAoB,CAAC;YAC5DC,sBAAsB;YACtBC,uBAAuB,EAAE6D,UAAU,CAACC,SAAS,IAAIJ;UACnD,CAAC;QACH;MACF;MACA,OAAO;QACL5D,oBAAoB,EAAE,EAAE;QACxBiE,cAAc,EAAE7D,SAAS;QACzB8D,aAAa,EAAE9D;MACjB,CAAC;IACH,CAAC;IACD,IAAI,CAACyB,uBAAuB,GAAGsC,KAAK,IAAI;MACtC,MAAMpB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC,CAAC;MAClD,IAAI,IAAI,CAACzC,eAAe,CAACW,OAAO,IAAI,IAAI,IAAIkD,KAAK,CAACC,MAAM,IAAI,IAAI,IAAI,IAAI,CAACtE,KAAK,CAACE,oBAAoB,CAACwD,MAAM,KAAK,CAAC,EAAE;QAChH;MACF;MACA,MAAMY,MAAM,GAAGD,KAAK,CAACC,MAAM;MAC3B,MAAMC,WAAW,GAAGD,MAAM,CAACE,UAAU;MACrC,MAAMC,eAAe,GAAG,IAAI,CAACjE,eAAe,CAACW,OAAO,CAAC0C,UAAU;MAC/D,MAAMa,kBAAkB,GAAG,IAAI,CAAClE,eAAe,CAACW,OAAO,CAACsC,WAAW;MACnE,MAAMkB,cAAc,GAAGF,eAAe,GAAGC,kBAAkB;MAC3D,MAAMnB,cAAc,GAAG,IAAI,CAACvD,KAAK,CAACE,oBAAoB,CAACwD,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC1D,KAAK,CAACE,oBAAoB,CAAC+C,iBAAiB,CAAC,EAAEiB,SAAS,GAAG,CAAC;MACrI,MAAMU,qBAAqB,GAAGL,WAAW,CAACf,UAAU;MACpD,MAAMqB,sBAAsB,GAAGN,WAAW,CAACf,UAAU,GAAGe,WAAW,CAACd,WAAW;MAC/E,IAAIgB,eAAe,GAAGG,qBAAqB,GAAGrB,cAAc,EAAE;QAC5D,IAAI,CAAC/C,eAAe,CAACW,OAAO,CAAC0C,UAAU,GAAGe,qBAAqB,GAAGrB,cAAc;MAClF;MACA,IAAIsB,sBAAsB,GAAGF,cAAc,EAAE;QAC3C,IAAI,CAACnE,eAAe,CAACW,OAAO,CAAC0C,UAAU,GAAGgB,sBAAsB,GAAGH,kBAAkB;MACvF;IACF,CAAC;IACD,IAAI,CAACI,qBAAqB,GAAG,MAAM;MACjC,MAAM;QACJ3D,OAAO,EAAET;MACX,CAAC,GAAG,IAAI,CAACA,WAAW;MACpB,MAAM;QACJS,OAAO,EAAEX;MACX,CAAC,GAAG,IAAI,CAACA,eAAe;MACxB,IAAIE,WAAW,IAAI,IAAI,IAAIF,eAAe,IAAI,IAAI,EAAE;QAClD;MACF;MACAE,WAAW,CAACmD,UAAU,GAAGrD,eAAe,CAACqD,UAAU;IACrD,CAAC;IACD,IAAI,CAACkB,cAAc,GAAG,MAAM;MAC1B,IAAI,IAAI,CAAC9D,eAAe,EAAE;QACxB+D,YAAY,CAAC,IAAI,CAAC/D,eAAe,CAAC;MACpC;MACA,IAAI,CAACA,eAAe,GAAGgE,UAAU,CAAC,MAAM;QACtC,IAAI,CAAC3D,QAAQ,CAAC4D,SAAS,KAAK;UAC1B,GAAG,IAAI,CAAC3D,6BAA6B,CAAC2D,SAAS,CAACjF,SAAS;QAC3D,CAAC,CAAC,CAAC;MACL,CAAC,EAAE,GAAG,CAAC;MACP,IAAI,CAACqB,QAAQ,CAAC;QACZnB,sBAAsB,EAAE,IAAI,CAACK,eAAe,CAACW,OAAO,EAAE0C,UAAU,KAAK;MACvE,CAAC,CAAC;MACF,IAAI,IAAI,CAACV,KAAK,CAACD,YAAY,IAAI,IAAI,CAAClC,kBAAkB,EAAE;QACtD,IAAI,CAAC8D,qBAAqB,CAAC,CAAC;MAC9B;IACF,CAAC;IACD,IAAI,CAACK,WAAW,GAAGzF,GAAG,IAAI,MAAM;MAC9B,IAAI,CAAC4B,QAAQ,CAAC;QACZjB,UAAU,EAAEX;MACd,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,CAAC0F,WAAW,GAAGf,KAAK,IAAI;MAC1B,MAAMpB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC,CAAC;MAClD,IAAI,IAAI,CAACzC,eAAe,CAACW,OAAO,IAAI,IAAI,IAAIkD,KAAK,CAACC,MAAM,IAAI,IAAI,EAAE;QAChE;MACF;MACA,MAAMC,WAAW,GAAGF,KAAK,CAACC,MAAM,CAACE,UAAU;MAC3C,MAAMa,cAAc,GAAG,IAAI,CAAClC,KAAK;MACjC,MAAMI,cAAc,GAAG8B,cAAc,GAAG,IAAI,CAACrF,KAAK,CAACE,oBAAoB,CAAC+C,iBAAiB,CAAC,EAAEiB,SAAS,GAAG,CAAC;MACzG,MAAMU,qBAAqB,GAAGL,WAAW,CAACf,UAAU;MACpD,MAAM8B,iBAAiB,GAAGV,qBAAqB,GAAGrB,cAAc;MAChE,IAAI,IAAI,CAAC/C,eAAe,CAACW,OAAO,CAAC0C,UAAU,GAAGyB,iBAAiB,EAAE;QAC/D,IAAI,CAAC9E,eAAe,CAACW,OAAO,CAAC0C,UAAU,GAAGyB,iBAAiB;MAC7D;;MAEA;IACF,CAAC;IACD,IAAI,CAACC,aAAa,GAAGC,SAAS,IAAI;MAChC,MAAMvC,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC,CAAC;MAClD,MAAM;QACJmB,aAAa;QACbD;MACF,CAAC,GAAG,IAAI,CAACnE,KAAK;MACd,MAAMuD,cAAc,GAAG,IAAI,CAACvD,KAAK,CAACE,oBAAoB,CAAC+C,iBAAiB,GAAG,CAAC,CAAC,EAAEiB,SAAS;MACxF,IAAI,CAACE,aAAa,IAAI,CAACD,cAAc,EAAE;QACrC;MACF;MACA,IAAIsB,UAAU,GAAG,CAAC;MAClB,KAAK,IAAI/D,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG0C,aAAa,CAAC1C,KAAK,EAAEA,KAAK,EAAE,EAAE;QACxD+D,UAAU,IAAI,IAAI,CAACzF,KAAK,CAACE,oBAAoB,CAACwB,KAAK,CAAC,CAACgE,KAAK;MAC5D;MACA,MAAM;QACJvE,OAAO,EAAEX;MACX,CAAC,GAAG,IAAI,CAACA,eAAe;MACxB,MAAMmF,YAAY,GAAGA,CAAA,KAAM;QACzB,IAAIC,aAAa,GAAG,CAAC;QACrB,IAAI3C,iBAAiB,EAAE;UACrB2C,aAAa,GAAGJ,SAAS,KAAK,OAAO,GAAGC,UAAU,GAAGlC,cAAc,GAAGa,aAAa,CAACsB,KAAK,GAAGD,UAAU,GAAGtB,cAAc,CAACuB,KAAK,GAAGnC,cAAc;QAChJ,CAAC,MAAM;UACLqC,aAAa,GAAGJ,SAAS,KAAK,OAAO,GAAGpB,aAAa,CAACF,SAAS,GAAGC,cAAc,CAAC0B,QAAQ;QAC3F;QACA,IAAIrF,eAAe,EAAE;UACnBA,eAAe,CAACqD,UAAU,GAAG+B,aAAa;UAC1CE,qBAAqB,CAAC,MAAM;YAC1B,IAAI,CAACxE,QAAQ,CAAC4D,SAAS,KAAK;cAC1B,GAAG,IAAI,CAAC3D,6BAA6B,CAAC2D,SAAS,CAACjF,SAAS;YAC3D,CAAC,CAAC,CAAC;UACL,CAAC,CAAC;QACJ;MACF,CAAC;MACD,OAAO0F,YAAY;IACrB,CAAC;IACD;IACA,IAAI,CAACI,aAAa,GAAG,CAAC;MACpBC,OAAO;MACPC,YAAY;MACZC,gBAAgB;MAChBvE;IACF,CAAC,KAAK;MACJ,MAAM;QACJwE,QAAQ;QACRC,QAAQ,GAAG,KAAK;QAChBC,kBAAkB;QAClBC,oBAAoB;QACpBC,sBAAsB,GAAG,CAAC;QAC1BC,aAAa;QACbC;MACF,CAAC,GAAG,IAAI,CAACtD,KAAK;MACd,MAAMF,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC,CAAC;MAClD,MAAM;QACJyD,aAAa,GAAGJ,oBAAoB;QACpCK,iBAAiB,GAAGJ,sBAAsB;QAC1CpG;MACF,CAAC,GAAG,IAAI,CAACH,KAAK;MACd,IAAI4G,oBAAoB;MACxB,MAAMC,aAAa,GAAG,gBAAgBZ,YAAY,EAAE;MACpD,MAAMa,cAAc,GAAG,gBAAgBb,YAAY,EAAE;MACrD,MAAMc,EAAE,GAAGpF,cAAc,GAAGmF,cAAc,GAAGD,aAAa;MAC1D,IAAIV,QAAQ,EAAE;QACZ,MAAMa,UAAU,GAAGb,QAAQ,CAACF,YAAY,CAAC;QACzC,MAAMgB,QAAQ,GAAGD,UAAU,IAAIL,iBAAiB,KAAKV,YAAY;QACjE,MAAMT,SAAS,GAAGyB,QAAQ,GAAGP,aAAa,GAAG,MAAM;QACnDE,oBAAoB,GAAG;UACrBN,oBAAoB;UACpBY,MAAM,EAAED,QAAQ;UAChBd,QAAQ,EAAEa,UAAU;UACpBN,aAAa,EAAElB,SAAS;UACxB2B,MAAM,EAAE,IAAI,CAACC,aAAa,CAACnB,YAAY,CAAC;UACxCZ,cAAc,EAAEpC,iBAAiB;UACjCiD,gBAAgB,EAAEjD;QACpB,CAAC;MACH;MACA,MAAMoE,eAAe,GAAG1F,cAAc,GAAG,IAAI,CAACZ,kBAAkB,CAACkF,YAAY,CAAC,GAAG3F,SAAS;MAC1F,MAAMgH,gBAAgB,GAAG,CAACnH,sBAAsB;MAChD,MAAMoH,SAAS,GAAG;QAChBC,MAAM,EAAE,IAAI;QACZC,iBAAiB,EAAE9F,cAAc;QACjC+F,OAAO,EAAE1B,OAAO;QAChB2B,WAAW,EAAEtB,kBAAkB,CAACJ,YAAY,CAAC;QAC7C2B,SAAS,EAAE3B,YAAY,GAAGhD,iBAAiB;QAC3CA,iBAAiB;QACjBmD,QAAQ;QACRH,YAAY;QACZ,GAAGW,oBAAoB;QACvBJ,aAAa;QACbpB,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BiC,eAAe;QACfC,gBAAgB;QAChBb;MACF,CAAC;MACD,IAAIP,gBAAgB,IAAIvE,cAAc,EAAE;QACtC;QACA;QACA;QACA;QACA,OAAO,CAAC,aAAatD,KAAK,CAACwJ,aAAa,CAAC9I,IAAI,EAAE+I,MAAM,CAACC,MAAM,CAAC;UAC3DC,GAAG,EAAEjB;QACP,CAAC,EAAEQ,SAAS,EAAE;UACZU,MAAM,EAAExG,GAAG,IAAI;YACb,IAAI,CAACD,UAAU,CAAC;cACdC,GAAG;cACHC,KAAK,EAAEuE,YAAY;cACnBtE;YACF,CAAC,CAAC;UACJ,CAAC;UACDuE,gBAAgB,EAAE;QACpB,CAAC,CAAC,CAAC,EAAE,aAAa7H,KAAK,CAACwJ,aAAa,CAAC9I,IAAI,EAAE+I,MAAM,CAACC,MAAM,CAAC;UACxDC,GAAG,EAAE,GAAGjB,EAAE;QACZ,CAAC,EAAEQ,SAAS,EAAE;UACZU,MAAM,EAAExG,GAAG,IAAI;YACb,IAAI,CAACD,UAAU,CAAC;cACdC,GAAG;cACHC,KAAK,EAAEuE,YAAY;cACnBtE;YACF,CAAC,CAAC;UACJ,CAAC;UACDuE,gBAAgB,EAAEgC,OAAO,CAACjF,iBAAiB,CAAC;UAC5CkF,oBAAoB,EAAElC,YAAY,KAAKhD,iBAAiB,GAAG,CAAC;UAC5DJ,KAAK,EAAE;YACLuF,IAAI,EAAE,IAAI,CAACpI,KAAK,CAACE,oBAAoB,CAAC+F,YAAY,CAAC,EAAEJ;UACvD;QACF,CAAC,CAAC,CAAC,CAAC;MACN;MACA,OAAO,aAAaxH,KAAK,CAACwJ,aAAa,CAAC9I,IAAI,EAAE+I,MAAM,CAACC,MAAM,CAAC;QAC1DC,GAAG,EAAEjB;MACP,CAAC,EAAEQ,SAAS,EAAE;QACZU,MAAM,EAAExG,GAAG,IAAI;UACb,IAAI,CAACD,UAAU,CAAC;YACdC,GAAG;YACHC,KAAK,EAAEuE,YAAY;YACnBtE;UACF,CAAC,CAAC;QACJ,CAAC;QACDwG,oBAAoB,EAAElC,YAAY,KAAKhD,iBAAiB,GAAG,CAAC;QAC5DiD,gBAAgB,EAAEA;MACpB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,IAAI,CAACmC,gBAAgB,GAAG,MAAM;MAC5B,MAAM;QACJC,IAAI;QACJC,MAAM;QACNC;MACF,CAAC,GAAG,IAAI,CAACrF,KAAK;MACd,MAAMsF,WAAW,GAAGD,UAAU,GAAGA,UAAU,GAAG;QAC5CE,QAAQ,EAAEJ,IAAI,CAACK,SAAS,CAAC,mCAAmC,CAAC;QAC7DC,MAAM,EAAEN,IAAI,CAACK,SAAS,CAAC,oCAAoC;MAC7D,CAAC;MACD,OAAOJ,MAAM,IAAIA,MAAM,CAACM,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAK,EAAE,CAAC,CAACpF,MAAM,GAAG,CAAC,GAAG+E,WAAW,CAACG,MAAM,GAAGH,WAAW,CAACC,QAAQ;IAC9G,CAAC;IACD;IACA,IAAI,CAACK,YAAY,GAAG,CAAC;MACnBD,KAAK;MACLpH;IACF,CAAC,KAAK;MACJ,MAAMuB,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC,CAAC;MAClD,MAAM8D,EAAE,GAAG,eAAerF,KAAK,EAAE;MACjC,MAAM;QACJ0E,QAAQ,GAAG,KAAK;QAChBI,aAAa;QACbH;MACF,CAAC,GAAG,IAAI,CAAClD,KAAK;MACd,IAAIuE,OAAO;MACX,IAAIC,WAAW;MACf,IAAIjG,KAAK,KAAK,CAAC,EAAE;QACfgG,OAAO,GAAG,IAAI,CAACW,gBAAgB,CAAC,CAAC;MACnC;MACA,IAAIS,KAAK,KAAK,EAAE,IAAIpH,KAAK,GAAG,CAAC,EAAE;QAC7BiG,WAAW,GAAGtB,kBAAkB,CAAC3E,KAAK,CAAC;QACvCgG,OAAO,GAAGoB,KAAK;MACjB;MACA,MAAME,aAAa,GAAG,IAAI,CAAC7F,KAAK,CAAC8F,kBAAkB;MACnD,OAAO,aAAa5K,KAAK,CAACwJ,aAAa,CAAC9I,IAAI,EAAE;QAC5C+J,KAAK,EAAE,IAAI;QACXE,aAAa,EAAEA,aAAa;QAC5BpB,SAAS,EAAElG,KAAK,IAAIuB,iBAAiB,GAAG,CAAC;QACzCiG,WAAW,EAAExH,KAAK,KAAK,CAAC;QACxBsG,GAAG,EAAEjB,EAAE;QACPW,OAAO,EAAEA,OAAO;QAChBC,WAAW,EAAEA,WAAW;QACxBvB,QAAQ,EAAEA,QAAQ;QAClBI,aAAa,EAAEA;MACjB,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,CAAC2C,UAAU,GAAG,CAACC,SAAS,EAAEC,cAAc,EAAEC,kBAAkB,EAAEC,SAAS,KAAK;MAC9E;MACA,MAAMtG,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC,CAAC;MAClD,IAAIA,iBAAiB,EAAE;QACrB,OAAO,CAAC;MACV;MACA,MAAMuG,MAAM,GAAGJ,SAAS,GAAGA,SAAS,GAAG,CAAC;MACxC,MAAMK,MAAM,GAAGJ,cAAc,GAAGA,cAAc,GAAGC,kBAAkB;MACnE,MAAMI,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,GAAGD,MAAM,CAAC;MAC3C,MAAMK,SAAS,GAAGJ,MAAM,GAAGD,MAAM;MACjC,OAAOD,SAAS,KAAK,CAAC,GAAGG,OAAO,GAAGG,SAAS,GAAGH,OAAO;IACxD,CAAC;IACD,IAAI,CAACI,gBAAgB,GAAG,CAAC;MACvBpK,GAAG;MACHgC,KAAK;MACLwE,gBAAgB;MAChB6D;IACF,CAAC,KAAK;MACJ,MAAM;QACJ1D,kBAAkB;QAClBD,QAAQ,GAAG,KAAK;QAChBI,aAAa;QACbwD,SAAS,GAAG,IAAI;QAChBC;MACF,CAAC,GAAG,IAAI,CAAC9G,KAAK;MACd,MAAM;QACJlD;MACF,CAAC,GAAG,IAAI,CAACD,KAAK;MACd,MAAMiD,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC,CAAC;MAClD,MAAMiH,SAAS,GAAGxL,UAAU,CAACI,MAAM,CAACqL,QAAQ,EAAEH,SAAS,IAAIlL,MAAM,CAACkL,SAAS,CAAC;MAC5E,OAAO,aAAa3L,KAAK,CAACwJ,aAAa,CAAC,IAAI,EAAE;QAC5CG,GAAG,EAAE,OAAOtG,KAAK,EAAE;QACnBwI,SAAS,EAAEA,SAAS;QACpBE,YAAY,EAAE,IAAI,CAACjF,WAAW,CAACzD,KAAK,CAAC;QACrC2I,YAAY,EAAE,IAAI,CAAClF,WAAW,CAAC;MACjC,CAAC,EAAEzF,GAAG,CAACsE,GAAG,CAAC,CAAC0D,OAAO,EAAE6B,SAAS,KAAK;QACjC,MAAMe,OAAO,GAAG5I,KAAK,KAAK,IAAI,CAAC1B,KAAK,CAACK,UAAU;QAC/C,MAAM0G,EAAE,GAAG,QAAQwC,SAAS,QAAQ7H,KAAK,EAAE;QAC3C,MAAMgI,OAAO,GAAG,IAAI,CAACP,UAAU,CAACzJ,GAAG,CAACgE,MAAM,EAAEuG,QAAQ,CAACvG,MAAM,EAAE2C,kBAAkB,CAAC3C,MAAM,EAAE6F,SAAS,CAAC;QAClG,OAAO,aAAalL,KAAK,CAACwJ,aAAa,CAAC9I,IAAI,EAAE;UAC5CiJ,GAAG,EAAEjB,EAAE;UACPW,OAAO,EAAEA,OAAO;UAChBC,WAAW,EAAEtB,kBAAkB,CAACkD,SAAS,CAAC;UAC1C3B,SAAS,EAAE2B,SAAS,IAAItG,iBAAiB,GAAG,CAAC;UAC7CiG,WAAW,EAAEK,SAAS,KAAK,CAAC;UAC5BnD,QAAQ,EAAEA,QAAQ;UAClBI,aAAa,EAAEA,aAAa;UAC5BkD,OAAO,EAAEA,OAAO;UAChBY,OAAO,EAAEA,OAAO;UAChBzH,KAAK,EAAEkH,UAAU,GAAG;YAClBQ,MAAM,EAAE,GAAGR,UAAU,CAACrI,KAAK,CAAC;UAC9B,CAAC,GAAG,CAAC,CAAC;UACNwE,gBAAgB,EAAEjG,SAAS,IAAIiG;QACjC,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC;IACL,CAAC;IACD,IAAI,CAACkB,aAAa,GAAGnB,YAAY,IAAI;MACnC,MAAM;QACJkB,MAAM;QACNb,oBAAoB,GAAG,WAAW;QAClCC;MACF,CAAC,GAAG,IAAI,CAACpD,KAAK;MACd,MAAM;QACJuD,aAAa,GAAGJ,oBAAoB;QACpCK,iBAAiB,GAAGJ;MACtB,CAAC,GAAG,IAAI,CAACvG,KAAK;MACd,IAAIwK,gBAAgB,GAAGlE,oBAAoB;MAC3C,IAAIK,iBAAiB,KAAKV,YAAY,EAAE;QACtCuE,gBAAgB,GAAG9D,aAAa,KAAK,WAAW,GAAG,YAAY,GAAG,WAAW;MAC/E;MACA,MAAM+D,UAAU,GAAGA,CAAA,KAAM;QACvB,IAAI,CAACnJ,QAAQ,CAAC;UACZoF,aAAa,EAAE8D,gBAAgB;UAC/B7D,iBAAiB,EAAEV;QACrB,CAAC,EAAE,MAAM;UACP,IAAIkB,MAAM,EAAE;YACVA,MAAM,CAAClB,YAAY,EAAEuE,gBAAgB,CAAC;UACxC;QACF,CAAC,CAAC;MACJ,CAAC;MACD,OAAOC,UAAU;IACnB,CAAC;EACH;EACAC,iBAAiBA,CAAA,EAAG;IAClB;IACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;MAC1C5F,UAAU,CAAC,MAAM;QACf,IAAI,CAAC/D,YAAY,CAAC,CAAC;MACrB,CAAC,EAAE,EAAE,CAAC;IACR,CAAC,MAAM;MACL,IAAI,CAACA,YAAY,CAAC,CAAC;IACrB;EACF;EACA4J,kBAAkBA,CAACC,SAAS,EAAE;IAC5B,IAAIvM,OAAO,CAACuM,SAAS,EAAE,IAAI,CAAC5H,KAAK,CAAC,EAAE;MAClC;IACF;IACA,IAAI,CAACjC,YAAY,CAAC,CAAC;EACrB;EACA8J,oBAAoBA,CAAA,EAAG;IACrB,IAAI,CAAC9J,YAAY,CAAC+J,MAAM,CAAC,CAAC;EAC5B;EACAC,MAAMA,CAAA,EAAG;IACP,MAAM;MACJjB,QAAQ;MACR1B,MAAM;MACNU,kBAAkB;MAClB1J,IAAI;MACJ4L,aAAa;MACbC,mBAAmB,GAAG,KAAK;MAC3BC,qBAAqB,GAAG,KAAK;MAC7BC,sBAAsB,GAAG,KAAK;MAC9BpI,YAAY,GAAG,KAAK;MACpBqI,mBAAmB,EAAEC,gBAAgB,GAAG,KAAK;MAC7CC;IACF,CAAC,GAAG,IAAI,CAACtI,KAAK;IACd,MAAM;MACJlD,SAAS;MACTC,oBAAoB;MACpBC,sBAAsB;MACtBC;IACF,CAAC,GAAG,IAAI,CAACJ,KAAK;IACd,IAAIwL,gBAAgB,IAAIb,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;MAC9D;MACAa,OAAO,CAACC,IAAI,CAAC,wHAAwH,CAAC;IACxI;IACA,MAAM1I,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAAC,CAAC;IAClD,MAAM2I,cAAc,GAAGrM,IAAI,CAACmE,MAAM,GAAG,CAAC,KAAK,CAAC;IAC5C,MAAMwG,SAAS,GAAGxL,UAAU,CAACI,MAAM,CAAC+M,SAAS,EAAE5L,SAAS,IAAInB,MAAM,CAACmB,SAAS,EAAEsI,MAAM,IAAIzJ,MAAM,CAACgN,UAAU,EAAE7C,kBAAkB,IAAInK,MAAM,CAACiN,kBAAkB,EAAET,sBAAsB,IAAIxM,MAAM,CAACkN,mBAAmB,EAAEV,sBAAsB,IAAIM,cAAc,IAAI9M,MAAM,CAACmN,cAAc,CAAC;IACpR,MAAMC,gBAAgB,GAAGxN,UAAU,CAACI,MAAM,CAACqN,YAAY,EAAElM,SAAS,IAAInB,MAAM,CAACmB,SAAS,EAAEoL,qBAAqB,IAAIvM,MAAM,CAACsN,qBAAqB,EAAElJ,YAAY,IAAIpE,MAAM,CAACuN,mBAAmB,CAAC;IAC1L,MAAMC,aAAa,GAAG,aAAajO,KAAK,CAACwJ,aAAa,CAAC,IAAI,EAAE,IAAI,EAAEoC,QAAQ,CAACjG,GAAG,CAAC,CAACgC,OAAO,EAAEtE,KAAK,KAAK,IAAI,CAACqE,aAAa,CAAC;MACrHC,OAAO;MACPC,YAAY,EAAEvE,KAAK;MACnBwE,gBAAgB,EAAE,KAAK;MACvBvE,cAAc,EAAE;IAClB,CAAC,CAAC,CAAC,CAAC;IACJ,MAAM4K,YAAY,GAAGhE,MAAM,GAAG,aAAalK,KAAK,CAACwJ,aAAa,CAAC,IAAI,EAAE,IAAI,EAAEU,MAAM,CAACvE,GAAG,CAAC,CAAC8E,KAAK,EAAEpH,KAAK,KAAK,IAAI,CAACqH,YAAY,CAAC;MACxHD,KAAK;MACLpH;IACF,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;IACX,MAAM8K,UAAU,GAAGjN,IAAI,CAACyE,GAAG,CAACtE,GAAG,IAAIA,GAAG,CAAC+M,KAAK,CAAC,CAAC,EAAExJ,iBAAiB,CAAC,CAAC;IACnE,MAAMyJ,WAAW,GAAGzC,QAAQ,CAACwC,KAAK,CAAC,CAAC,EAAExJ,iBAAiB,CAAC;IACxD,MAAM0J,SAAS,GAAGpE,MAAM,EAAEkE,KAAK,CAAC,CAAC,EAAExJ,iBAAiB,CAAC;IACrD,MAAM2J,eAAe,GAAG,IAAI,CAACnM,KAAK,CAACU,OAAO,EAAE0L,QAAQ,CAAC,CAAC,CAAC,CAACC,UAAU;IAClE,MAAMC,aAAa,GAAG,IAAI,CAACtM,KAAK,CAACU,OAAO,EAAE0L,QAAQ,CAAC,CAAC,CAAC,CAACC,UAAU;IAChE,MAAME,gBAAgB,GAAG1N,mBAAmB,CAACsN,eAAe,CAAC;IAC7D,MAAMK,cAAc,GAAG3N,mBAAmB,CAACyN,aAAa,CAAC;IACzD,MAAMG,oBAAoB,GAAGjN,SAAS,IAAIgD,iBAAiB,KAAK,CAAC,IAAI,aAAa5E,KAAK,CAACwJ,aAAa,CAAC,OAAO,EAAE;MAC7GqC,SAAS,EAAExL,UAAU,CAACI,MAAM,CAACqO,gBAAgB,EAAE,CAAChN,sBAAsB,IAAIrB,MAAM,CAACsO,QAAQ,CAAC;MAC1FvK,KAAK,EAAE;QACL6C,KAAK,EAAE,GAAGxF,oBAAoB,CAAC+C,iBAAiB,GAAG,CAAC,CAAC,EAAEiB,SAAS;MAClE;IACF,CAAC,EAAE,aAAa7F,KAAK,CAACwJ,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,aAAaxJ,KAAK,CAACwJ,aAAa,CAAC,IAAI,EAAE;MACxFhF,KAAK,EAAE;QACL0H,MAAM,EAAE,GAAGyC,gBAAgB,CAAC,CAAC,CAAC;MAChC;IACF,CAAC,EAAEN,WAAW,CAAC1I,GAAG,CAAC,CAACgC,OAAO,EAAEtE,KAAK,KAAK,IAAI,CAACqE,aAAa,CAAC;MACxDC,OAAO;MACPC,YAAY,EAAEvE,KAAK;MACnBwE,gBAAgB,EAAE,IAAI;MACtBvE,cAAc,EAAE;IAClB,CAAC,CAAC,CAAC,CAAC,EAAE4G,MAAM,IAAI,CAACU,kBAAkB,IAAI,aAAa5K,KAAK,CAACwJ,aAAa,CAAC,IAAI,EAAE;MAC5EhF,KAAK,EAAE;QACL0H,MAAM,EAAE,GAAGyC,gBAAgB,CAAC,CAAC,CAAC;MAChC;IACF,CAAC,EAAEL,SAAS,EAAE3I,GAAG,CAAC,CAAC8E,KAAK,EAAEpH,KAAK,KAAK,IAAI,CAACqH,YAAY,CAAC;MACpDD,KAAK;MACLpH;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,aAAarD,KAAK,CAACwJ,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE2E,UAAU,CAACxI,GAAG,CAAC,CAACtE,GAAG,EAAEgC,KAAK,KAAK,IAAI,CAACoI,gBAAgB,CAAC;MAC1GpK,GAAG;MACHgC,KAAK;MACLwE,gBAAgB,EAAE,IAAI;MACtB6D,UAAU,EAAEkD;IACd,CAAC,CAAC,CAAC,CAAC,EAAE1E,MAAM,IAAIU,kBAAkB,IAAI,aAAa5K,KAAK,CAACwJ,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,aAAaxJ,KAAK,CAACwJ,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE8E,SAAS,EAAE3I,GAAG,CAAC,CAAC8E,KAAK,EAAEpH,KAAK,KAAK,IAAI,CAACqH,YAAY,CAAC;MACpLD,KAAK;MACLpH;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,MAAM2L,UAAU,GAAG9N,IAAI,CAACyE,GAAG,CAAC,CAACtE,GAAG,EAAEgC,KAAK,KAAK,IAAI,CAACoI,gBAAgB,CAAC;MAChEpK,GAAG;MACHgC,KAAK;MACLwE,gBAAgB,EAAE;IACpB,CAAC,CAAC,CAAC;IACH,MAAMoH,YAAY,GAAGnC,aAAa,GAAG,aAAa9M,KAAK,CAACwJ,aAAa,CAAC,KAAK,EAAE;MAC3EqC,SAAS,EAAEpL,MAAM,CAACyO;IACpB,CAAC,EAAEpC,aAAa,CAAC,GAAG,IAAI;IACxB,MAAMqC,gBAAgB,GAAG/B,UAAU,GAAG,aAAapN,KAAK,CAACwJ,aAAa,CAAC7I,UAAU,EAAE8I,MAAM,CAACC,MAAM,CAAC;MAC/F0F,IAAI,EAAE;IACR,CAAC,EAAEhC,UAAU,CAAC,CAAC,GAAG,IAAI;IACtB,MAAMiC,kBAAkB,GAAG,CAACzE,kBAAkB,GAAGsD,YAAY,GAAG,IAAI;IACpE,MAAMoB,kBAAkB,GAAG1E,kBAAkB,GAAG,aAAa5K,KAAK,CAACwJ,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE0E,YAAY,CAAC,GAAG,IAAI;IACpH,MAAMqB,gBAAgB,GAAGC,QAAQ,IAAIzC,mBAAmB,GAAG,IAAI,GAAG,aAAa/M,KAAK,CAACwJ,aAAa,CAAC1I,UAAU,EAAE;MAC7Ge,oBAAoB,EAAEA,oBAAoB;MAC1CC,sBAAsB,EAAEA,sBAAsB;MAC9CC,uBAAuB,EAAEA,uBAAuB;MAChD0N,iBAAiB,EAAE,IAAI,CAACvI,aAAa,CAAC,MAAM,CAAC;MAC7CwI,kBAAkB,EAAE,IAAI,CAACxI,aAAa,CAAC,OAAO,CAAC;MAC/CtC,iBAAiB,EAAEA,iBAAiB;MACpCgF,MAAM,EAAExG,GAAG,IAAI;QACb,IAAIoM,QAAQ,KAAK,QAAQ,EAAE;UACzB,IAAI,CAACjN,SAAS,GAAGa,GAAG;QACtB,CAAC,MAAM,IAAIoM,QAAQ,KAAK,QAAQ,EAAE;UAChC,IAAI,CAAClN,SAAS,GAAGc,GAAG;QACtB;MACF;IACF,CAAC,CAAC;IACF,MAAMuM,kBAAkB,GAAG9K,YAAY,GAAG,aAAa7E,KAAK,CAACwJ,aAAa,CAAC5I,iBAAiB,EAAE,IAAI,EAAE,aAAaZ,KAAK,CAACwJ,aAAa,CAAC,KAAK,EAAE;MAC1IqC,SAAS,EAAEpL,MAAM,CAACmP,mBAAmB;MACrCC,IAAI,EAAE;IACR,CAAC,EAAE,aAAa7P,KAAK,CAACwJ,aAAa,CAAC3I,MAAM,EAAE;MAC1CiP,eAAe,EAAE,IAAI,CAAC5N,SAAS,CAACY,OAAO;MACvCiN,cAAc,EAAEC,QAAQ,IAAI;QAC1B,IAAI,CAACrM,kBAAkB,CAAC,CAAC;QACzB,IAAI,CAAChB,kBAAkB,GAAGqN,QAAQ;MACpC;IACF,CAAC,EAAEA,QAAQ,IAAI;MACb,MAAMC,2BAA2B,GAAG5P,UAAU,CAACI,MAAM,CAACyP,iBAAiB,EAAEF,QAAQ,IAAIvP,MAAM,CAAC,4BAA4B,CAAC,CAAC;MAC1H,MAAM0P,2BAA2B,GAAG9P,UAAU,CAACI,MAAM,CAAC2P,iBAAiB,EAAE,CAACtO,sBAAsB,IAAIrB,MAAM,CAACsO,QAAQ,CAAC;MACpH,OAAO,aAAa/O,KAAK,CAACwJ,aAAa,CAAC,KAAK,EAAE;QAC7CqC,SAAS,EAAEoE;MACb,CAAC,EAAE,aAAajQ,KAAK,CAACwJ,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE+F,gBAAgB,CAAC,QAAQ,CAAC,CAAC,EAAE,aAAavP,KAAK,CAACwJ,aAAa,CAAC,OAAO,EAAE;QACtHqC,SAAS,EAAEsE,2BAA2B;QACtC/M,GAAG,EAAE,IAAI,CAACf;MACZ,CAAC,EAAE,aAAarC,KAAK,CAACwJ,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,aAAaxJ,KAAK,CAACwJ,aAAa,CAAC,IAAI,EAAE;QACxFqC,SAAS,EAAEpL,MAAM,CAAC4P;MACpB,CAAC,EAAEzE,QAAQ,CAACjG,GAAG,CAAC,CAACgC,OAAO,EAAEtE,KAAK,KAAK;QAClC,OAAO,IAAI,CAACqE,aAAa,CAAC;UACxBC,OAAO;UACPC,YAAY,EAAEvE,KAAK;UACnBwE,gBAAgB,EAAEgC,OAAO,CAACxG,KAAK,IAAIuB,iBAAiB,GAAG,CAAC,IAAIA,iBAAiB,CAAC;UAC9EtB,cAAc,EAAE;QAClB,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;IACX,OAAO,aAAatD,KAAK,CAACwJ,aAAa,CAAC,KAAK,EAAE;MAC7CqC,SAAS,EAAEgC,gBAAgB;MAC3BzK,GAAG,EAAE,IAAI,CAAClB;IACZ,CAAC,EAAEyN,kBAAkB,EAAEJ,gBAAgB,CAAC,QAAQ,CAAC,EAAE,aAAavP,KAAK,CAACwJ,aAAa,CAAC,KAAK,EAAE;MACzFqC,SAAS,EAAEA;IACb,CAAC,EAAE,aAAa7L,KAAK,CAACwJ,aAAa,CAAC,KAAK,EAAE;MACzCqC,SAAS,EAAEpL,MAAM,CAAC6P,eAAe;MACjClN,GAAG,EAAE,IAAI,CAACjB;IACZ,CAAC,EAAE,aAAanC,KAAK,CAACwJ,aAAa,CAACxI,aAAa,EAAE;MACjDgF,KAAK,EAAE,QAAQ;MACfuK,OAAO,EAAE,IAAI,CAAC1N;IAChB,CAAC,CAAC,EAAE,aAAa7C,KAAK,CAACwJ,aAAa,CAACxI,aAAa,EAAE;MAClDwP,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI;MACbzK,KAAK,EAAE,QAAQ;MACfuK,OAAO,EAAE,IAAI,CAAC7J;IAChB,CAAC,CAAC,EAAEmI,oBAAoB,EAAE,aAAa7O,KAAK,CAACwJ,aAAa,CAAC,OAAO,EAAE;MAClEqC,SAAS,EAAEpL,MAAM,CAACiQ,KAAK;MACvBtN,GAAG,EAAE,IAAI,CAAChB;IACZ,CAAC,EAAE,aAAapC,KAAK,CAACwJ,aAAa,CAAC,OAAO,EAAE,IAAI,EAAEyE,aAAa,EAAEoB,kBAAkB,CAAC,EAAE,aAAarP,KAAK,CAACwJ,aAAa,CAAC,OAAO,EAAE,IAAI,EAAEwF,UAAU,CAAC,EAAEM,kBAAkB,CAAC,CAAC,EAAEH,gBAAgB,EAAEF,YAAY,CAAC,CAAC;EAC5M;EACArK,iBAAiBA,CAAA,EAAG;IAClB,MAAM;MACJsI,mBAAmB;MACnBtI,iBAAiB,GAAG,CAAC;MACrBgH;IACF,CAAC,GAAG,IAAI,CAAC9G,KAAK;IACd,MAAM6L,yBAAyB,GAAGzD,mBAAmB,IAAI,CAACtI,iBAAiB,GAAG,CAAC,GAAGA,iBAAiB;IACnG,IAAI+L,yBAAyB,IAAI/E,QAAQ,CAACvG,MAAM,EAAE;MAChD,OAAO,CAAC;IACV;IACA,OAAOsL,yBAAyB;EAClC;AACF;AACA,SAASnD,SAASA,CAAC1I,KAAK,EAAE;EACxB,MAAMmF,IAAI,GAAGlJ,OAAO,CAAC,CAAC;EACtB,OAAO,aAAaf,KAAK,CAACwJ,aAAa,CAAChI,cAAc,EAAEiI,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE5E,KAAK,EAAE;IAC/EmF,IAAI,EAAEA;EACR,CAAC,CAAC,CAAC;AACL;AAEA,SAASuD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}